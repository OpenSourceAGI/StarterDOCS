{"version":3,"sources":["turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/route-modules/pages/module.compiled.js","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/route-kind.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/lib/trace/constants.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/is-thenable.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/lib/trace/tracer.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/router/utils/querystring.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/router/utils/format-url.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/request-meta.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/app-render/interop-default.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/instrumentation/utils.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/page-path/normalize-data-path.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/lib/detached-promise.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/lib/batcher.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/lib/scheduler.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/response-cache/types.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/stream-utils/encoded-tags.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/stream-utils/uint8array-helpers.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/errors/constants.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/stream-utils/node-web-streams-helper.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/lib/constants.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/web/utils.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/i18n/detect-domain-locale.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/router/utils/remove-trailing-slash.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/router/utils/parse-path.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/router/utils/add-path-prefix.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/router/utils/add-path-suffix.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/router/utils/path-has-prefix.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/router/utils/add-locale.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/router/utils/format-next-pathname-info.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/get-hostname.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/i18n/normalize-locale-path.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/router/utils/remove-path-prefix.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/router/utils/get-next-pathname-info.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/web/next-url.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/web/error.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/compiled/@edge-runtime/cookies/index.js","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/web/spec-extension/cookies.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/web/spec-extension/request.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/base-http/helpers.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/web/spec-extension/adapters/next-request.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/client-component-renderer-logger.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/pipe-readable.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/render-result.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/response-cache/utils.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/response-cache/index.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/build/templates/helpers.ts","turbopack:///[project]/docs-fuma/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs","turbopack:///[project]/docs-fuma/node_modules/next/src/shared/lib/side-effect.tsx","turbopack:///[project]/docs-fuma/node_modules/next/src/server/route-modules/pages/vendored/contexts/amp-context.ts","turbopack:///[project]/docs-fuma/node_modules/next/src/server/route-modules/pages/vendored/contexts/head-manager-context.ts","turbopack:///[project]/docs-fuma/node_modules/next/src/shared/lib/amp-mode.ts","turbopack:///[project]/docs-fuma/node_modules/next/src/shared/lib/utils/warn-once.ts","turbopack:///[project]/docs-fuma/node_modules/next/src/shared/lib/head.tsx","turbopack:///[project]/docs-fuma/node_modules/next/src/server/request-meta.ts","turbopack:///[project]/docs-fuma/node_modules/next/src/pages/_error.tsx","turbopack:///[project]/docs-fuma/node_modules/next/error.js","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/lib/cache-control.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/utils.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/client/components/redirect-status-code.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/lib/redirect-status.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/lib/etag.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/compiled/fresh/index.js","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/client/components/app-router-headers.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/send-payload.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/router/utils/escape-path-delimiters.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/server/lib/router-utils/decode-path-params.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/router/utils/html-bots.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/shared/lib/router/utils/is-bot.ts","turbopack:///[project]/docs-fuma/node_modules/next/dist/src/build/templates/pages.ts"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-turbo.runtime.dev.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages.runtime.dev.js')\n    }\n  } else {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages.runtime.prod.js')\n    }\n  }\n}\n","export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/\n\n// eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */\n\nenum BaseServerSpan {\n  handleRequest = 'BaseServer.handleRequest',\n  run = 'BaseServer.run',\n  pipe = 'BaseServer.pipe',\n  getStaticHTML = 'BaseServer.getStaticHTML',\n  render = 'BaseServer.render',\n  renderToResponseWithComponents = 'BaseServer.renderToResponseWithComponents',\n  renderToResponse = 'BaseServer.renderToResponse',\n  renderToHTML = 'BaseServer.renderToHTML',\n  renderError = 'BaseServer.renderError',\n  renderErrorToResponse = 'BaseServer.renderErrorToResponse',\n  renderErrorToHTML = 'BaseServer.renderErrorToHTML',\n  render404 = 'BaseServer.render404',\n}\n\nenum LoadComponentsSpan {\n  loadDefaultErrorComponents = 'LoadComponents.loadDefaultErrorComponents',\n  loadComponents = 'LoadComponents.loadComponents',\n}\n\nenum NextServerSpan {\n  getRequestHandler = 'NextServer.getRequestHandler',\n  getServer = 'NextServer.getServer',\n  getServerRequestHandler = 'NextServer.getServerRequestHandler',\n  createServer = 'createServer.createServer',\n}\n\nenum NextNodeServerSpan {\n  compression = 'NextNodeServer.compression',\n  getBuildId = 'NextNodeServer.getBuildId',\n  createComponentTree = 'NextNodeServer.createComponentTree',\n  clientComponentLoading = 'NextNodeServer.clientComponentLoading',\n  getLayoutOrPageModule = 'NextNodeServer.getLayoutOrPageModule',\n  generateStaticRoutes = 'NextNodeServer.generateStaticRoutes',\n  generateFsStaticRoutes = 'NextNodeServer.generateFsStaticRoutes',\n  generatePublicRoutes = 'NextNodeServer.generatePublicRoutes',\n  generateImageRoutes = 'NextNodeServer.generateImageRoutes.route',\n  sendRenderResult = 'NextNodeServer.sendRenderResult',\n  proxyRequest = 'NextNodeServer.proxyRequest',\n  runApi = 'NextNodeServer.runApi',\n  render = 'NextNodeServer.render',\n  renderHTML = 'NextNodeServer.renderHTML',\n  imageOptimizer = 'NextNodeServer.imageOptimizer',\n  getPagePath = 'NextNodeServer.getPagePath',\n  getRoutesManifest = 'NextNodeServer.getRoutesManifest',\n  findPageComponents = 'NextNodeServer.findPageComponents',\n  getFontManifest = 'NextNodeServer.getFontManifest',\n  getServerComponentManifest = 'NextNodeServer.getServerComponentManifest',\n  getRequestHandler = 'NextNodeServer.getRequestHandler',\n  renderToHTML = 'NextNodeServer.renderToHTML',\n  renderError = 'NextNodeServer.renderError',\n  renderErrorToHTML = 'NextNodeServer.renderErrorToHTML',\n  render404 = 'NextNodeServer.render404',\n  startResponse = 'NextNodeServer.startResponse',\n\n  // nested inner span, does not require parent scope name\n  route = 'route',\n  onProxyReq = 'onProxyReq',\n  apiResolver = 'apiResolver',\n  internalFetch = 'internalFetch',\n}\n\nenum StartServerSpan {\n  startServer = 'startServer.startServer',\n}\n\nenum RenderSpan {\n  getServerSideProps = 'Render.getServerSideProps',\n  getStaticProps = 'Render.getStaticProps',\n  renderToString = 'Render.renderToString',\n  renderDocument = 'Render.renderDocument',\n  createBodyResult = 'Render.createBodyResult',\n}\n\nenum AppRenderSpan {\n  renderToString = 'AppRender.renderToString',\n  renderToReadableStream = 'AppRender.renderToReadableStream',\n  getBodyResult = 'AppRender.getBodyResult',\n  fetch = 'AppRender.fetch',\n}\n\nenum RouterSpan {\n  executeRoute = 'Router.executeRoute',\n}\n\nenum NodeSpan {\n  runHandler = 'Node.runHandler',\n}\n\nenum AppRouteRouteHandlersSpan {\n  runHandler = 'AppRouteRouteHandlers.runHandler',\n}\n\nenum ResolveMetadataSpan {\n  generateMetadata = 'ResolveMetadata.generateMetadata',\n  generateViewport = 'ResolveMetadata.generateViewport',\n}\n\nenum MiddlewareSpan {\n  execute = 'Middleware.execute',\n}\n\ntype SpanTypes =\n  | `${BaseServerSpan}`\n  | `${LoadComponentsSpan}`\n  | `${NextServerSpan}`\n  | `${StartServerSpan}`\n  | `${NextNodeServerSpan}`\n  | `${RenderSpan}`\n  | `${RouterSpan}`\n  | `${AppRenderSpan}`\n  | `${NodeSpan}`\n  | `${AppRouteRouteHandlersSpan}`\n  | `${ResolveMetadataSpan}`\n  | `${MiddlewareSpan}`\n\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n  MiddlewareSpan.execute,\n  BaseServerSpan.handleRequest,\n  RenderSpan.getServerSideProps,\n  RenderSpan.getStaticProps,\n  AppRenderSpan.fetch,\n  AppRenderSpan.getBodyResult,\n  RenderSpan.renderDocument,\n  NodeSpan.runHandler,\n  AppRouteRouteHandlersSpan.runHandler,\n  ResolveMetadataSpan.generateMetadata,\n  ResolveMetadataSpan.generateViewport,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.getLayoutOrPageModule,\n  NextNodeServerSpan.startResponse,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\nexport {\n  BaseServerSpan,\n  LoadComponentsSpan,\n  NextServerSpan,\n  NextNodeServerSpan,\n  StartServerSpan,\n  RenderSpan,\n  RouterSpan,\n  AppRenderSpan,\n  NodeSpan,\n  AppRouteRouteHandlersSpan,\n  ResolveMetadataSpan,\n  MiddlewareSpan,\n}\n\nexport type { SpanTypes }\n","/**\n * Check to see if a value is Thenable.\n *\n * @param promise the maybe-thenable value\n * @returns true if the value is thenable\n */\nexport function isThenable<T = unknown>(\n  promise: Promise<T> | T\n): promise is Promise<T> {\n  return (\n    promise !== null &&\n    typeof promise === 'object' &&\n    'then' in promise &&\n    typeof promise.then === 'function'\n  )\n}\n","import type { FetchEventResult } from '../../web/types'\nimport type { TextMapSetter } from '@opentelemetry/api'\nimport type { SpanTypes } from './constants'\nimport { LogSpanAllowList, NextVanillaSpanAllowlist } from './constants'\n\nimport type {\n  ContextAPI,\n  Span,\n  SpanOptions,\n  Tracer,\n  AttributeValue,\n  TextMapGetter,\n} from 'next/dist/compiled/@opentelemetry/api'\nimport { isThenable } from '../../../shared/lib/is-thenable'\n\nlet api: typeof import('next/dist/compiled/@opentelemetry/api')\n\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (process.env.NEXT_RUNTIME === 'edge') {\n  api = require('@opentelemetry/api') as typeof import('@opentelemetry/api')\n} else {\n  try {\n    api = require('@opentelemetry/api') as typeof import('@opentelemetry/api')\n  } catch (err) {\n    api =\n      require('next/dist/compiled/@opentelemetry/api') as typeof import('next/dist/compiled/@opentelemetry/api')\n  }\n}\n\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } =\n  api\n\nexport class BubbledError extends Error {\n  constructor(\n    public readonly bubble?: boolean,\n    public readonly result?: FetchEventResult\n  ) {\n    super()\n  }\n}\n\nexport function isBubbledError(error: unknown): error is BubbledError {\n  if (typeof error !== 'object' || error === null) return false\n  return error instanceof BubbledError\n}\n\nconst closeSpanWithError = (span: Span, error?: Error) => {\n  if (isBubbledError(error) && error.bubble) {\n    span.setAttribute('next.bubble', true)\n  } else {\n    if (error) {\n      span.recordException(error)\n    }\n    span.setStatus({ code: SpanStatusCode.ERROR, message: error?.message })\n  }\n  span.end()\n}\n\ntype TracerSpanOptions = Omit<SpanOptions, 'attributes'> & {\n  parentSpan?: Span\n  spanName?: string\n  attributes?: Partial<Record<AttributeNames, AttributeValue | undefined>>\n  hideSpan?: boolean\n}\n\ninterface NextTracer {\n  getContext(): ContextAPI\n\n  /**\n   * Instruments a function by automatically creating a span activated on its\n   * scope.\n   *\n   * The span will automatically be finished when one of these conditions is\n   * met:\n   *\n   * * The function returns a promise, in which case the span will finish when\n   * the promise is resolved or rejected.\n   * * The function takes a callback as its second parameter, in which case the\n   * span will finish when that callback is called.\n   * * The function doesn't accept a callback and doesn't return a promise, in\n   * which case the span will finish at the end of the function execution.\n   *\n   */\n  trace<T>(\n    type: SpanTypes,\n    fn: (span?: Span, done?: (error?: Error) => any) => Promise<T>\n  ): Promise<T>\n  trace<T>(\n    type: SpanTypes,\n    fn: (span?: Span, done?: (error?: Error) => any) => T\n  ): T\n  trace<T>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: (span?: Span, done?: (error?: Error) => any) => Promise<T>\n  ): Promise<T>\n  trace<T>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: (span?: Span, done?: (error?: Error) => any) => T\n  ): T\n\n  /**\n   * Wrap a function to automatically create a span activated on its\n   * scope when it's called.\n   *\n   * The span will automatically be finished when one of these conditions is\n   * met:\n   *\n   * * The function returns a promise, in which case the span will finish when\n   * the promise is resolved or rejected.\n   * * The function takes a callback as its last parameter, in which case the\n   * span will finish when that callback is called.\n   * * The function doesn't accept a callback and doesn't return a promise, in\n   * which case the span will finish at the end of the function execution.\n   */\n  wrap<T = (...args: Array<any>) => any>(type: SpanTypes, fn: T): T\n  wrap<T = (...args: Array<any>) => any>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: T\n  ): T\n  wrap<T = (...args: Array<any>) => any>(\n    type: SpanTypes,\n    options: (...args: any[]) => TracerSpanOptions,\n    fn: T\n  ): T\n\n  /**\n   * Starts and returns a new Span representing a logical unit of work.\n   *\n   * This method do NOT modify the current Context by default. In result, any inner span will not\n   * automatically set its parent context to the span created by this method unless manually activate\n   * context via `tracer.getContext().with`. `trace`, or `wrap` is generally recommended as it gracefully\n   * handles context activation. (ref: https://github.com/open-telemetry/opentelemetry-js/issues/1923)\n   */\n  startSpan(type: SpanTypes): Span\n  startSpan(type: SpanTypes, options: TracerSpanOptions): Span\n\n  /**\n   * Returns currently activated span if current context is in the scope of the span.\n   * Returns undefined otherwise.\n   */\n  getActiveScopeSpan(): Span | undefined\n\n  /**\n   * Returns trace propagation data for the currently active context. The format is equal to data provided\n   * through the OpenTelemetry propagator API.\n   */\n  getTracePropagationData(): ClientTraceDataEntry[]\n}\n\ntype NextAttributeNames =\n  | 'next.route'\n  | 'next.page'\n  | 'next.rsc'\n  | 'next.segment'\n  | 'next.span_name'\n  | 'next.span_type'\n  | 'next.clientComponentLoadCount'\ntype OTELAttributeNames = `http.${string}` | `net.${string}`\ntype AttributeNames = NextAttributeNames | OTELAttributeNames\n\n/** we use this map to propagate attributes from nested spans to the top span */\nconst rootSpanAttributesStore = new Map<\n  number,\n  Map<AttributeNames, AttributeValue | undefined>\n>()\nconst rootSpanIdKey = api.createContextKey('next.rootSpanId')\nlet lastSpanId = 0\nconst getSpanId = () => lastSpanId++\n\nexport interface ClientTraceDataEntry {\n  key: string\n  value: string\n}\n\nconst clientTraceDataSetter: TextMapSetter<ClientTraceDataEntry[]> = {\n  set(carrier, key, value) {\n    carrier.push({\n      key,\n      value,\n    })\n  },\n}\n\nclass NextTracerImpl implements NextTracer {\n  /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */\n  private getTracerInstance(): Tracer {\n    return trace.getTracer('next.js', '0.0.1')\n  }\n\n  public getContext(): ContextAPI {\n    return context\n  }\n\n  public getTracePropagationData(): ClientTraceDataEntry[] {\n    const activeContext = context.active()\n    const entries: ClientTraceDataEntry[] = []\n    propagation.inject(activeContext, entries, clientTraceDataSetter)\n    return entries\n  }\n\n  public getActiveScopeSpan(): Span | undefined {\n    return trace.getSpan(context?.active())\n  }\n\n  public withPropagatedContext<T, C>(\n    carrier: C,\n    fn: () => T,\n    getter?: TextMapGetter<C>\n  ): T {\n    const activeContext = context.active()\n    if (trace.getSpanContext(activeContext)) {\n      // Active span is already set, too late to propagate.\n      return fn()\n    }\n    const remoteContext = propagation.extract(activeContext, carrier, getter)\n    return context.with(remoteContext, fn)\n  }\n\n  // Trace, wrap implementation is inspired by datadog trace implementation\n  // (https://datadoghq.dev/dd-trace-js/interfaces/tracer.html#trace).\n  public trace<T>(\n    type: SpanTypes,\n    fn: (span?: Span, done?: (error?: Error) => any) => Promise<T>\n  ): Promise<T>\n  public trace<T>(\n    type: SpanTypes,\n    fn: (span?: Span, done?: (error?: Error) => any) => T\n  ): T\n  public trace<T>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: (span?: Span, done?: (error?: Error) => any) => Promise<T>\n  ): Promise<T>\n  public trace<T>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: (span?: Span, done?: (error?: Error) => any) => T\n  ): T\n  public trace<T>(...args: Array<any>) {\n    const [type, fnOrOptions, fnOrEmpty] = args\n\n    // coerce options form overload\n    const {\n      fn,\n      options,\n    }: {\n      fn: (span?: Span, done?: (error?: Error) => any) => T | Promise<T>\n      options: TracerSpanOptions\n    } =\n      typeof fnOrOptions === 'function'\n        ? {\n            fn: fnOrOptions,\n            options: {},\n          }\n        : {\n            fn: fnOrEmpty,\n            options: { ...fnOrOptions },\n          }\n\n    const spanName = options.spanName ?? type\n\n    if (\n      (!NextVanillaSpanAllowlist.includes(type) &&\n        process.env.NEXT_OTEL_VERBOSE !== '1') ||\n      options.hideSpan\n    ) {\n      return fn()\n    }\n\n    // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n    let spanContext = this.getSpanContext(\n      options?.parentSpan ?? this.getActiveScopeSpan()\n    )\n    let isRootSpan = false\n\n    if (!spanContext) {\n      spanContext = context?.active() ?? ROOT_CONTEXT\n      isRootSpan = true\n    } else if (trace.getSpanContext(spanContext)?.isRemote) {\n      isRootSpan = true\n    }\n\n    const spanId = getSpanId()\n\n    options.attributes = {\n      'next.span_name': spanName,\n      'next.span_type': type,\n      ...options.attributes,\n    }\n\n    return context.with(spanContext.setValue(rootSpanIdKey, spanId), () =>\n      this.getTracerInstance().startActiveSpan(\n        spanName,\n        options,\n        (span: Span) => {\n          const startTime =\n            'performance' in globalThis && 'measure' in performance\n              ? globalThis.performance.now()\n              : undefined\n\n          const onCleanup = () => {\n            rootSpanAttributesStore.delete(spanId)\n            if (\n              startTime &&\n              process.env.NEXT_OTEL_PERFORMANCE_PREFIX &&\n              LogSpanAllowList.includes(type || ('' as any))\n            ) {\n              performance.measure(\n                `${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(\n                  type.split('.').pop() || ''\n                ).replace(\n                  /[A-Z]/g,\n                  (match: string) => '-' + match.toLowerCase()\n                )}`,\n                {\n                  start: startTime,\n                  end: performance.now(),\n                }\n              )\n            }\n          }\n\n          if (isRootSpan) {\n            rootSpanAttributesStore.set(\n              spanId,\n              new Map(\n                Object.entries(options.attributes ?? {}) as [\n                  AttributeNames,\n                  AttributeValue | undefined,\n                ][]\n              )\n            )\n          }\n          try {\n            if (fn.length > 1) {\n              return fn(span, (err) => closeSpanWithError(span, err))\n            }\n\n            const result = fn(span)\n            if (isThenable(result)) {\n              // If there's error make sure it throws\n              return result\n                .then((res) => {\n                  span.end()\n                  // Need to pass down the promise result,\n                  // it could be react stream response with error { error, stream }\n                  return res\n                })\n                .catch((err) => {\n                  closeSpanWithError(span, err)\n                  throw err\n                })\n                .finally(onCleanup)\n            } else {\n              span.end()\n              onCleanup()\n            }\n\n            return result\n          } catch (err: any) {\n            closeSpanWithError(span, err)\n            onCleanup()\n            throw err\n          }\n        }\n      )\n    )\n  }\n\n  public wrap<T = (...args: Array<any>) => any>(type: SpanTypes, fn: T): T\n  public wrap<T = (...args: Array<any>) => any>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: T\n  ): T\n  public wrap<T = (...args: Array<any>) => any>(\n    type: SpanTypes,\n    options: (...args: any[]) => TracerSpanOptions,\n    fn: T\n  ): T\n  public wrap(...args: Array<any>) {\n    const tracer = this\n    const [name, options, fn] =\n      args.length === 3 ? args : [args[0], {}, args[1]]\n\n    if (\n      !NextVanillaSpanAllowlist.includes(name) &&\n      process.env.NEXT_OTEL_VERBOSE !== '1'\n    ) {\n      return fn\n    }\n\n    return function (this: any) {\n      let optionsObj = options\n      if (typeof optionsObj === 'function' && typeof fn === 'function') {\n        optionsObj = optionsObj.apply(this, arguments)\n      }\n\n      const lastArgId = arguments.length - 1\n      const cb = arguments[lastArgId]\n\n      if (typeof cb === 'function') {\n        const scopeBoundCb = tracer.getContext().bind(context.active(), cb)\n        return tracer.trace(name, optionsObj, (_span, done) => {\n          arguments[lastArgId] = function (err: any) {\n            done?.(err)\n            return scopeBoundCb.apply(this, arguments)\n          }\n\n          return fn.apply(this, arguments)\n        })\n      } else {\n        return tracer.trace(name, optionsObj, () => fn.apply(this, arguments))\n      }\n    }\n  }\n\n  public startSpan(type: SpanTypes): Span\n  public startSpan(type: SpanTypes, options: TracerSpanOptions): Span\n  public startSpan(...args: Array<any>): Span {\n    const [type, options]: [string, TracerSpanOptions | undefined] = args as any\n\n    const spanContext = this.getSpanContext(\n      options?.parentSpan ?? this.getActiveScopeSpan()\n    )\n    return this.getTracerInstance().startSpan(type, options, spanContext)\n  }\n\n  private getSpanContext(parentSpan?: Span) {\n    const spanContext = parentSpan\n      ? trace.setSpan(context.active(), parentSpan)\n      : undefined\n\n    return spanContext\n  }\n\n  public getRootSpanAttributes() {\n    const spanId = context.active().getValue(rootSpanIdKey) as number\n    return rootSpanAttributesStore.get(spanId)\n  }\n\n  public setRootSpanAttribute(key: AttributeNames, value: AttributeValue) {\n    const spanId = context.active().getValue(rootSpanIdKey) as number\n    const attributes = rootSpanAttributesStore.get(spanId)\n    if (attributes) {\n      attributes.set(key, value)\n    }\n  }\n}\n\nconst getTracer = (() => {\n  const tracer = new NextTracerImpl()\n\n  return () => tracer\n})()\n\nexport { getTracer, SpanStatusCode, SpanKind }\nexport type { NextTracer, Span, SpanOptions, ContextAPI, TracerSpanOptions }\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  for (const [key, value] of searchParams.entries()) {\n    const existing = query[key]\n    if (typeof existing === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      query[key] = [existing, value]\n    }\n  }\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (typeof param === 'string') {\n    return param\n  }\n\n  if (\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(query: ParsedUrlQuery): URLSearchParams {\n  const searchParams = new URLSearchParams()\n  for (const [key, value] of Object.entries(query)) {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        searchParams.append(key, stringifyUrlQueryParam(item))\n      }\n    } else {\n      searchParams.set(key, stringifyUrlQueryParam(value))\n    }\n  }\n  return searchParams\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  for (const searchParams of searchParamsList) {\n    for (const key of searchParams.keys()) {\n      target.delete(key)\n    }\n\n    for (const [key, value] of searchParams.entries()) {\n      target.append(key, value)\n    }\n  }\n\n  return target\n}\n","// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { UrlObject } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport * as querystring from './querystring'\n\nconst slashedProtocols = /https?|ftp|gopher|file/\n\nexport function formatUrl(urlObj: UrlObject) {\n  let { auth, hostname } = urlObj\n  let protocol = urlObj.protocol || ''\n  let pathname = urlObj.pathname || ''\n  let hash = urlObj.hash || ''\n  let query = urlObj.query || ''\n  let host: string | false = false\n\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : ''\n\n  if (urlObj.host) {\n    host = auth + urlObj.host\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname)\n    if (urlObj.port) {\n      host += ':' + urlObj.port\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query as ParsedUrlQuery))\n  }\n\n  let search = urlObj.search || (query && `?${query}`) || ''\n\n  if (protocol && !protocol.endsWith(':')) protocol += ':'\n\n  if (\n    urlObj.slashes ||\n    ((!protocol || slashedProtocols.test(protocol)) && host !== false)\n  ) {\n    host = '//' + (host || '')\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname\n  } else if (!host) {\n    host = ''\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash\n  if (search && search[0] !== '?') search = '?' + search\n\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent)\n  search = search.replace('#', '%23')\n\n  return `${protocol}${host}${pathname}${search}${hash}`\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (!urlObjectKeys.includes(key)) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n","/* eslint-disable no-redeclare */\nimport type { IncomingMessage } from 'http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { BaseNextRequest } from './base-http'\nimport type { CloneableBody } from './body-streams'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport type { ServerComponentsHmrCache } from './response-cache'\nimport type { PagesDevOverlayBridgeType } from '../next-devtools/userspace/pages/pages-dev-overlay-setup'\n\n// FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta')\n\nexport type NextIncomingMessage = (BaseNextRequest | IncomingMessage) & {\n  [NEXT_REQUEST_META]?: RequestMeta\n}\n\nexport interface RequestMeta {\n  /**\n   * The query that was used to make the request.\n   */\n  initQuery?: ParsedUrlQuery\n\n  /**\n   * The URL that was used to make the request.\n   */\n  initURL?: string\n\n  /**\n   * The protocol that was used to make the request.\n   */\n  initProtocol?: string\n\n  /**\n   * The body that was read from the request. This is used to allow the body to\n   * be read multiple times.\n   */\n  clonableBody?: CloneableBody\n\n  /**\n   * True when the request matched a locale domain that was configured in the\n   * next.config.js file.\n   */\n  isLocaleDomain?: boolean\n\n  /**\n   * True when the request had locale information stripped from the pathname\n   * part of the URL.\n   */\n  didStripLocale?: boolean\n\n  /**\n   * If the request had it's URL rewritten, this is the URL it was rewritten to.\n   */\n  rewroteURL?: string\n\n  /**\n   * The cookies that were added by middleware and were added to the response.\n   */\n  middlewareCookie?: string[]\n\n  /**\n   * The match on the request for a given route.\n   */\n  match?: RouteMatch\n\n  /**\n   * The incremental cache to use for the request.\n   */\n  incrementalCache?: any\n\n  /**\n   * The server components HMR cache, only for dev.\n   */\n  serverComponentsHmrCache?: ServerComponentsHmrCache\n\n  /**\n   * Equals the segment path that was used for the prefetch RSC request.\n   */\n  segmentPrefetchRSCRequest?: string\n\n  /**\n   * True when the request is for the prefetch flight data.\n   */\n  isPrefetchRSCRequest?: true\n\n  /**\n   * True when the request is for the flight data.\n   */\n  isRSCRequest?: true\n\n  /**\n   * A search param set by the Next.js client when performing RSC requests.\n   * Because some CDNs do not vary their cache entries on our custom headers,\n   * this search param represents a hash of the header values. For any cached\n   * RSC request, we should verify that the hash matches before responding.\n   * Otherwise this can lead to cache poisoning.\n   * TODO: Consider not using custom request headers at all, and instead encode\n   * everything into the search param.\n   */\n  cacheBustingSearchParam?: string\n\n  /**\n   * True when the request is for the `/_next/data` route using the pages\n   * router.\n   */\n  isNextDataReq?: true\n\n  /**\n   * Postponed state to use for resumption. If present it's assumed that the\n   * request is for a page that has postponed (there are no guarantees that the\n   * page actually has postponed though as it would incur an additional cache\n   * lookup).\n   */\n  postponed?: string\n\n  /**\n   * If provided, this will be called when a response cache entry was generated\n   * or looked up in the cache.\n   */\n  onCacheEntry?: (\n    cacheEntry: any,\n    requestMeta: any\n  ) => Promise<boolean | void> | boolean | void\n\n  /**\n   * The previous revalidate before rendering 404 page for notFound: true\n   */\n  notFoundRevalidate?: number | false\n\n  /**\n   * In development, the original source page that returned a 404.\n   */\n  developmentNotFoundSourcePage?: string\n\n  /**\n   * The path we routed to and should be invoked\n   */\n  invokePath?: string\n\n  /**\n   * The specific page output we should be matching\n   */\n  invokeOutput?: string\n\n  /**\n   * The status we are invoking the request with from routing\n   */\n  invokeStatus?: number\n\n  /**\n   * The routing error we are invoking with\n   */\n  invokeError?: Error\n\n  /**\n   * The query parsed for the invocation\n   */\n  invokeQuery?: Record<string, undefined | string | string[]>\n\n  /**\n   * Whether the request is a middleware invocation\n   */\n  middlewareInvoke?: boolean\n\n  /**\n   * Whether the request should render the fallback shell or not.\n   */\n  renderFallbackShell?: boolean\n\n  /**\n   * Whether the request is for the custom error page.\n   */\n  customErrorRender?: true\n\n  /**\n   * Whether to bubble up the NoFallbackError to the caller when a 404 is\n   * returned.\n   */\n  bubbleNoFallback?: true\n\n  /**\n   * True when the request had locale information inferred from the default\n   * locale.\n   */\n  localeInferredFromDefault?: true\n\n  /**\n   * The locale that was inferred or explicitly set for the request.\n   */\n  locale?: string\n\n  /**\n   * The default locale that was inferred or explicitly set for the request.\n   */\n  defaultLocale?: string\n\n  /**\n   * The project dir the server is running in\n   */\n  projectDir?: string\n\n  /**\n   * The dist directory the server is currently using\n   */\n  distDir?: string\n\n  /**\n   * Whether we are generating the fallback version of the page in dev mode\n   */\n  isIsrFallback?: boolean\n\n  /**\n   * The query after resolving routes\n   */\n  query?: ParsedUrlQuery\n\n  /**\n   * The params after resolving routes\n   */\n  params?: ParsedUrlQuery\n\n  /**\n   * The AMP validator to use in development\n   */\n  ampValidator?: (html: string, pathname: string) => Promise<void>\n\n  /**\n   * ErrorOverlay component to use in development for pages router\n   */\n  PagesErrorDebug?: PagesDevOverlayBridgeType\n\n  /**\n   * Whether server is in minimal mode (this will be replaced with more\n   * specific flags in future)\n   */\n  minimalMode?: boolean\n}\n\n/**\n * Gets the request metadata. If no key is provided, the entire metadata object\n * is returned.\n *\n * @param req the request to get the metadata from\n * @param key the key to get from the metadata (optional)\n * @returns the value for the key or the entire metadata object\n */\nexport function getRequestMeta(\n  req: NextIncomingMessage,\n  key?: undefined\n): RequestMeta\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key: K\n): RequestMeta[K]\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key?: K\n): RequestMeta | RequestMeta[K] {\n  const meta = req[NEXT_REQUEST_META] || {}\n  return typeof key === 'string' ? meta[key] : meta\n}\n\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */\nexport function setRequestMeta(req: NextIncomingMessage, meta: RequestMeta) {\n  req[NEXT_REQUEST_META] = meta\n  return meta\n}\n\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */\nexport function addRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K,\n  value: RequestMeta[K]\n) {\n  const meta = getRequestMeta(request)\n  meta[key] = value\n  return setRequestMeta(request, meta)\n}\n\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */\nexport function removeRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K\n) {\n  const meta = getRequestMeta(request)\n  delete meta[key]\n  return setRequestMeta(request, meta)\n}\n\ntype NextQueryMetadata = {\n  /**\n   * The `_rsc` query parameter used for cache busting to ensure that the RSC\n   * requests do not get cached by the browser explicitly.\n   */\n  [NEXT_RSC_UNION_QUERY]?: string\n}\n\nexport type NextParsedUrlQuery = ParsedUrlQuery &\n  NextQueryMetadata & {\n    amp?: '1'\n  }\n\nexport interface NextUrlWithParsedQuery extends UrlWithParsedQuery {\n  query: NextParsedUrlQuery\n}\n","/**\n * Interop between \"export default\" and \"module.exports\".\n */\nexport function interopDefault(mod: any) {\n  return mod.default || mod\n}\n","export function getRevalidateReason(params: {\n  isOnDemandRevalidate?: boolean\n  isRevalidate?: boolean\n}): 'on-demand' | 'stale' | undefined {\n  if (params.isOnDemandRevalidate) {\n    return 'on-demand'\n  }\n  if (params.isRevalidate) {\n    return 'stale'\n  }\n  return undefined\n}\n","/**\n * strip _next/data/<build-id>/ prefix and .json suffix\n */\nexport function normalizeDataPath(pathname: string) {\n  pathname = pathname\n    .replace(/\\/_next\\/data\\/[^/]{1,}/, '')\n    .replace(/\\.json$/, '')\n\n  if (pathname === '/index') {\n    return '/'\n  }\n  return pathname\n}\n","/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */\nexport class DetachedPromise<T = any> {\n  public readonly resolve: (value: T | PromiseLike<T>) => void\n  public readonly reject: (reason: any) => void\n  public readonly promise: Promise<T>\n\n  constructor() {\n    let resolve: (value: T | PromiseLike<T>) => void\n    let reject: (reason: any) => void\n\n    // Create the promise and assign the resolvers to the object.\n    this.promise = new Promise<T>((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n\n    // We know that resolvers is defined because the Promise constructor runs\n    // synchronously.\n    this.resolve = resolve!\n    this.reject = reject!\n  }\n}\n","import type { SchedulerFn } from './scheduler'\n\nimport { DetachedPromise } from './detached-promise'\n\ntype CacheKeyFn<K, C extends string | number | null> = (\n  key: K\n) => PromiseLike<C> | C\n\ntype BatcherOptions<K, C extends string | number | null> = {\n  cacheKeyFn?: CacheKeyFn<K, C>\n  schedulerFn?: SchedulerFn<void>\n}\n\ntype WorkFn<V, C> = (\n  key: C,\n  resolve: (value: V | PromiseLike<V>) => void\n) => Promise<V>\n\n/**\n * A wrapper for a function that will only allow one call to the function to\n * execute at a time.\n */\nexport class Batcher<K, V, C extends string | number | null> {\n  private readonly pending = new Map<C, Promise<V>>()\n\n  protected constructor(\n    private readonly cacheKeyFn?: CacheKeyFn<K, C>,\n    /**\n     * A function that will be called to schedule the wrapped function to be\n     * executed. This defaults to a function that will execute the function\n     * immediately.\n     */\n    private readonly schedulerFn: SchedulerFn<void> = (fn) => fn()\n  ) {}\n\n  /**\n   * Creates a new instance of PendingWrapper. If the key extends a string or\n   * number, the key will be used as the cache key. If the key is an object, a\n   * cache key function must be provided.\n   */\n  public static create<K extends string | number | null, V>(\n    options?: BatcherOptions<K, K>\n  ): Batcher<K, V, K>\n  public static create<K, V, C extends string | number | null>(\n    options: BatcherOptions<K, C> &\n      Required<Pick<BatcherOptions<K, C>, 'cacheKeyFn'>>\n  ): Batcher<K, V, C>\n  public static create<K, V, C extends string | number | null>(\n    options?: BatcherOptions<K, C>\n  ): Batcher<K, V, C> {\n    return new Batcher<K, V, C>(options?.cacheKeyFn, options?.schedulerFn)\n  }\n\n  /**\n   * Wraps a function in a promise that will be resolved or rejected only once\n   * for a given key. This will allow multiple calls to the function to be\n   * made, but only one will be executed at a time. The result of the first\n   * call will be returned to all callers.\n   *\n   * @param key the key to use for the cache\n   * @param fn the function to wrap\n   * @returns a promise that resolves to the result of the function\n   */\n  public async batch(key: K, fn: WorkFn<V, C>): Promise<V> {\n    const cacheKey = (this.cacheKeyFn ? await this.cacheKeyFn(key) : key) as C\n    if (cacheKey === null) {\n      return fn(cacheKey, Promise.resolve)\n    }\n\n    const pending = this.pending.get(cacheKey)\n    if (pending) return pending\n\n    const { promise, resolve, reject } = new DetachedPromise<V>()\n    this.pending.set(cacheKey, promise)\n\n    this.schedulerFn(async () => {\n      try {\n        const result = await fn(cacheKey, resolve)\n\n        // Resolving a promise multiple times is a no-op, so we can safely\n        // resolve all pending promises with the same result.\n        resolve(result)\n      } catch (err) {\n        reject(err)\n      } finally {\n        this.pending.delete(cacheKey)\n      }\n    })\n\n    return promise\n  }\n}\n","export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = (cb: ScheduledFn<void>) => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      setTimeout(cb, 0)\n    } else {\n      process.nextTick(cb)\n    }\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = (cb: ScheduledFn<void>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */\nexport function waitAtLeastOneReactRenderTask(): Promise<void> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    return new Promise((r) => setTimeout(r, 0))\n  } else {\n    return new Promise((r) => setImmediate(r))\n  }\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type RenderResult from '../render-result'\nimport type { CacheControl, Revalidate } from '../lib/cache-control'\nimport type { RouteKind } from '../route-kind'\n\nexport interface ResponseCacheBase {\n  get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalCache\n      /**\n       * This is a hint to the cache to help it determine what kind of route\n       * this is so it knows where to look up the cache entry from. If not\n       * provided it will test the filesystem to check.\n       */\n      routeKind: RouteKind\n\n      /**\n       * True if this is a fallback request.\n       */\n      isFallback?: boolean\n\n      /**\n       * True if the route is enabled for PPR.\n       */\n      isRoutePPREnabled?: boolean\n    }\n  ): Promise<ResponseCacheEntry | null>\n}\n\n// The server components HMR cache might store other data as well in the future,\n// at which point this should be refactored to a discriminated union type.\nexport interface ServerComponentsHmrCache {\n  get(key: string): CachedFetchData | undefined\n  set(key: string, data: CachedFetchData): void\n}\n\nexport type CachedFetchData = {\n  headers: Record<string, string>\n  body: string\n  url: string\n  status?: number\n}\n\nexport const enum CachedRouteKind {\n  APP_PAGE = 'APP_PAGE',\n  APP_ROUTE = 'APP_ROUTE',\n  PAGES = 'PAGES',\n  FETCH = 'FETCH',\n  REDIRECT = 'REDIRECT',\n  IMAGE = 'IMAGE',\n}\n\nexport interface CachedFetchValue {\n  kind: CachedRouteKind.FETCH\n  data: CachedFetchData\n  // tags are only present with file-system-cache\n  // fetch cache stores tags outside of cache entry\n  tags?: string[]\n  revalidate: number\n}\n\nexport interface CachedRedirectValue {\n  kind: CachedRouteKind.REDIRECT\n  props: Object\n}\n\nexport interface CachedAppPageValue {\n  kind: CachedRouteKind.APP_PAGE\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  html: RenderResult\n  rscData: Buffer | undefined\n  status: number | undefined\n  postponed: string | undefined\n  headers: OutgoingHttpHeaders | undefined\n  segmentData: Map<string, Buffer> | undefined\n}\n\nexport interface CachedPageValue {\n  kind: CachedRouteKind.PAGES\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  html: RenderResult\n  pageData: Object\n  status: number | undefined\n  headers: OutgoingHttpHeaders | undefined\n}\n\nexport interface CachedRouteValue {\n  kind: CachedRouteKind.APP_ROUTE\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  body: Buffer\n  status: number\n  headers: OutgoingHttpHeaders\n}\n\nexport interface CachedImageValue {\n  kind: CachedRouteKind.IMAGE\n  etag: string\n  upstreamEtag: string\n  buffer: Buffer\n  extension: string\n  isMiss?: boolean\n  isStale?: boolean\n}\n\nexport interface IncrementalCachedAppPageValue {\n  kind: CachedRouteKind.APP_PAGE\n  // this needs to be a string since the cache expects to store\n  // the string value\n  html: string\n  rscData: Buffer | undefined\n  headers: OutgoingHttpHeaders | undefined\n  postponed: string | undefined\n  status: number | undefined\n  segmentData: Map<string, Buffer> | undefined\n}\n\nexport interface IncrementalCachedPageValue {\n  kind: CachedRouteKind.PAGES\n  // this needs to be a string since the cache expects to store\n  // the string value\n  html: string\n  pageData: Object\n  headers: OutgoingHttpHeaders | undefined\n  status: number | undefined\n}\n\nexport interface IncrementalResponseCacheEntry {\n  cacheControl?: CacheControl\n  /**\n   * timestamp in milliseconds to revalidate after\n   */\n  revalidateAfter?: Revalidate\n  /**\n   * `-1` here dictates a blocking revalidate should be used\n   */\n  isStale?: boolean | -1\n  isMiss?: boolean\n  value: Exclude<IncrementalCacheValue, CachedFetchValue> | null\n}\n\nexport interface IncrementalFetchCacheEntry {\n  /**\n   * `-1` here dictates a blocking revalidate should be used\n   */\n  isStale?: boolean | -1\n  value: CachedFetchValue\n}\n\nexport type IncrementalCacheEntry =\n  | IncrementalResponseCacheEntry\n  | IncrementalFetchCacheEntry\n\nexport type IncrementalCacheValue =\n  | CachedRedirectValue\n  | IncrementalCachedPageValue\n  | IncrementalCachedAppPageValue\n  | CachedImageValue\n  | CachedFetchValue\n  | CachedRouteValue\n\nexport type ResponseCacheValue =\n  | CachedRedirectValue\n  | CachedPageValue\n  | CachedAppPageValue\n  | CachedImageValue\n  | CachedRouteValue\n\nexport type ResponseCacheEntry = {\n  cacheControl?: CacheControl\n  value: ResponseCacheValue | null\n  isStale?: boolean | -1\n  isMiss?: boolean\n}\n\n/**\n * @param hasResolved whether the responseGenerator has resolved it's promise\n * @param previousCacheEntry the previous cache entry if it exists or the current\n */\nexport type ResponseGenerator = (state: {\n  hasResolved: boolean\n  previousCacheEntry?: IncrementalResponseCacheEntry | null\n  isRevalidating?: boolean\n  span?: any\n}) => Promise<ResponseCacheEntry | null>\n\nexport const enum IncrementalCacheKind {\n  APP_PAGE = 'APP_PAGE',\n  APP_ROUTE = 'APP_ROUTE',\n  PAGES = 'PAGES',\n  FETCH = 'FETCH',\n  IMAGE = 'IMAGE',\n}\n\nexport interface GetIncrementalFetchCacheContext {\n  kind: IncrementalCacheKind.FETCH\n  revalidate?: Revalidate\n  fetchUrl?: string\n  fetchIdx?: number\n  tags?: string[]\n  softTags?: string[]\n}\n\nexport interface GetIncrementalResponseCacheContext {\n  kind: Exclude<IncrementalCacheKind, IncrementalCacheKind.FETCH>\n\n  /**\n   * True if the route is enabled for PPR.\n   */\n  isRoutePPREnabled?: boolean\n\n  /**\n   * True if this is a fallback request.\n   */\n  isFallback: boolean\n}\n\nexport interface SetIncrementalFetchCacheContext {\n  fetchCache: true\n  fetchUrl?: string\n  fetchIdx?: number\n  tags?: string[]\n  isImplicitBuildTimeCache?: boolean\n}\n\nexport interface SetIncrementalResponseCacheContext {\n  fetchCache?: false\n  cacheControl?: CacheControl\n\n  /**\n   * True if the route is enabled for PPR.\n   */\n  isRoutePPREnabled?: boolean\n\n  /**\n   * True if this is a fallback request.\n   */\n  isFallback?: boolean\n}\n\nexport interface IncrementalResponseCache {\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  set(\n    key: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n}\n\nexport interface IncrementalCache extends IncrementalResponseCache {\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext\n  ): Promise<IncrementalFetchCacheEntry | null>\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  set(\n    key: string,\n    data: CachedFetchValue | null,\n    ctx: SetIncrementalFetchCacheContext\n  ): Promise<void>\n  set(\n    key: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n}\n","export const ENCODED_TAGS = {\n  // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n  OPENING: {\n    // <html\n    HTML: new Uint8Array([60, 104, 116, 109, 108]),\n    // <body\n    BODY: new Uint8Array([60, 98, 111, 100, 121]),\n  },\n  CLOSED: {\n    // </head>\n    HEAD: new Uint8Array([60, 47, 104, 101, 97, 100, 62]),\n    // </body>\n    BODY: new Uint8Array([60, 47, 98, 111, 100, 121, 62]),\n    // </html>\n    HTML: new Uint8Array([60, 47, 104, 116, 109, 108, 62]),\n    // </body></html>\n    BODY_AND_HTML: new Uint8Array([\n      60, 47, 98, 111, 100, 121, 62, 60, 47, 104, 116, 109, 108, 62,\n    ]),\n  },\n  META: {\n    // Only the match the prefix cause the suffix can be different wether it's xml compatible or not \">\" or \"/>\"\n    // <meta name=\"«nxt-icon»\"\n    // This is a special mark that will be replaced by the icon insertion script tag.\n    ICON_MARK: new Uint8Array([\n      60, 109, 101, 116, 97, 32, 110, 97, 109, 101, 61, 34, 194, 171, 110, 120,\n      116, 45, 105, 99, 111, 110, 194, 187, 34,\n    ]),\n  },\n} as const\n","/**\n * Find the starting index of Uint8Array `b` within Uint8Array `a`.\n */\nexport function indexOfUint8Array(a: Uint8Array, b: Uint8Array) {\n  if (b.length === 0) return 0\n  if (a.length === 0 || b.length > a.length) return -1\n\n  // start iterating through `a`\n  for (let i = 0; i <= a.length - b.length; i++) {\n    let completeMatch = true\n    // from index `i`, iterate through `b` and check for mismatch\n    for (let j = 0; j < b.length; j++) {\n      // if the values do not match, then this isn't a complete match, exit `b` iteration early and iterate to next index of `a`.\n      if (a[i + j] !== b[j]) {\n        completeMatch = false\n        break\n      }\n    }\n\n    if (completeMatch) {\n      return i\n    }\n  }\n\n  return -1\n}\n\n/**\n * Check if two Uint8Arrays are strictly equivalent.\n */\nexport function isEquivalentUint8Arrays(a: Uint8Array, b: Uint8Array) {\n  if (a.length !== b.length) return false\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false\n  }\n\n  return true\n}\n\n/**\n * Remove Uint8Array `b` from Uint8Array `a`.\n *\n * If `b` is not in `a`, `a` is returned unchanged.\n *\n * Otherwise, the function returns a new Uint8Array instance with size `a.length - b.length`\n */\nexport function removeFromUint8Array(a: Uint8Array, b: Uint8Array) {\n  const tagIndex = indexOfUint8Array(a, b)\n  if (tagIndex === 0) return a.subarray(b.length)\n  if (tagIndex > -1) {\n    const removed = new Uint8Array(a.length - b.length)\n    removed.set(a.slice(0, tagIndex))\n    removed.set(a.slice(tagIndex + b.length), tagIndex)\n    return removed\n  } else {\n    return a\n  }\n}\n","export const MISSING_ROOT_TAGS_ERROR = 'NEXT_MISSING_ROOT_TAGS'\n","import { getTracer } from '../lib/trace/tracer'\nimport { AppRenderSpan } from '../lib/trace/constants'\nimport { DetachedPromise } from '../../lib/detached-promise'\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler'\nimport { ENCODED_TAGS } from './encoded-tags'\nimport {\n  indexOfUint8Array,\n  isEquivalentUint8Arrays,\n  removeFromUint8Array,\n} from './uint8array-helpers'\nimport { MISSING_ROOT_TAGS_ERROR } from '../../shared/lib/errors/constants'\n\nfunction voidCatch() {\n  // this catcher is designed to be used with pipeTo where we expect the underlying\n  // pipe implementation to forward errors but we don't want the pipeTo promise to reject\n  // and be unhandled\n}\n\nexport type ReactReadableStream = ReadableStream<Uint8Array> & {\n  allReady?: Promise<void> | undefined\n}\n\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder()\n\nexport function chainStreams<T>(\n  ...streams: ReadableStream<T>[]\n): ReadableStream<T> {\n  // We could encode this invariant in the arguments but current uses of this function pass\n  // use spread so it would be missed by\n  if (streams.length === 0) {\n    throw new Error('Invariant: chainStreams requires at least one stream')\n  }\n\n  // If we only have 1 stream we fast path it by returning just this stream\n  if (streams.length === 1) {\n    return streams[0]\n  }\n\n  const { readable, writable } = new TransformStream()\n\n  // We always initiate pipeTo immediately. We know we have at least 2 streams\n  // so we need to avoid closing the writable when this one finishes.\n  let promise = streams[0].pipeTo(writable, { preventClose: true })\n\n  let i = 1\n  for (; i < streams.length - 1; i++) {\n    const nextStream = streams[i]\n    promise = promise.then(() =>\n      nextStream.pipeTo(writable, { preventClose: true })\n    )\n  }\n\n  // We can omit the length check because we halted before the last stream and there\n  // is at least two streams so the lastStream here will always be defined\n  const lastStream = streams[i]\n  promise = promise.then(() => lastStream.pipeTo(writable))\n\n  // Catch any errors from the streams and ignore them, they will be handled\n  // by whatever is consuming the readable stream.\n  promise.catch(voidCatch)\n\n  return readable\n}\n\nexport function streamFromString(str: string): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(encoder.encode(str))\n      controller.close()\n    },\n  })\n}\n\nexport function streamFromBuffer(chunk: Buffer): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(chunk)\n      controller.close()\n    },\n  })\n}\n\nexport async function streamToBuffer(\n  stream: ReadableStream<Uint8Array>\n): Promise<Buffer> {\n  const reader = stream.getReader()\n  const chunks: Uint8Array[] = []\n\n  while (true) {\n    const { done, value } = await reader.read()\n    if (done) {\n      break\n    }\n\n    chunks.push(value)\n  }\n\n  return Buffer.concat(chunks)\n}\n\nexport async function streamToString(\n  stream: ReadableStream<Uint8Array>,\n  signal?: AbortSignal\n): Promise<string> {\n  const decoder = new TextDecoder('utf-8', { fatal: true })\n  let string = ''\n\n  for await (const chunk of stream) {\n    if (signal?.aborted) {\n      return string\n    }\n\n    string += decoder.decode(chunk, { stream: true })\n  }\n\n  string += decoder.decode()\n\n  return string\n}\n\nexport function createBufferedTransformStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let bufferedChunks: Array<Uint8Array> = []\n  let bufferByteLength: number = 0\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    // If we already have a pending flush, then return early.\n    if (pending) return\n\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        const chunk = new Uint8Array(bufferByteLength)\n        let copiedBytes = 0\n\n        for (let i = 0; i < bufferedChunks.length; i++) {\n          const bufferedChunk = bufferedChunks[i]\n          chunk.set(bufferedChunk, copiedBytes)\n          copiedBytes += bufferedChunk.byteLength\n        }\n        // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n        // and our bufferByteLength to prepare for the next round of buffered chunks\n        bufferedChunks.length = 0\n        bufferByteLength = 0\n        controller.enqueue(chunk)\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      // Combine the previous buffer with the new chunk.\n      bufferedChunks.push(chunk)\n      bufferByteLength += chunk.byteLength\n\n      // Flush the buffer to the controller.\n      flush(controller)\n    },\n    flush() {\n      if (!pending) return\n\n      return pending.promise\n    },\n  })\n}\n\nexport function renderToInitialFizzStream({\n  ReactDOMServer,\n  element,\n  streamOptions,\n}: {\n  ReactDOMServer: typeof import('react-dom/server.edge')\n  element: React.ReactElement\n  streamOptions?: Parameters<typeof ReactDOMServer.renderToReadableStream>[1]\n}): Promise<ReactReadableStream> {\n  return getTracer().trace(AppRenderSpan.renderToReadableStream, async () =>\n    ReactDOMServer.renderToReadableStream(element, streamOptions)\n  )\n}\n\nfunction createMetadataTransformStream(\n  insert: () => Promise<string> | string\n): TransformStream<Uint8Array, Uint8Array> {\n  let chunkIndex = -1\n  let isMarkRemoved = false\n\n  return new TransformStream({\n    async transform(chunk, controller) {\n      let iconMarkIndex = -1\n      let closedHeadIndex = -1\n      chunkIndex++\n\n      if (isMarkRemoved) {\n        controller.enqueue(chunk)\n        return\n      }\n      let iconMarkLength = 0\n      // Only search for the closed head tag once\n      if (iconMarkIndex === -1) {\n        iconMarkIndex = indexOfUint8Array(chunk, ENCODED_TAGS.META.ICON_MARK)\n        if (iconMarkIndex === -1) {\n          controller.enqueue(chunk)\n          return\n        } else {\n          // When we found the `<meta name=\"«nxt-icon»\"` tag prefix, we will remove it from the chunk.\n          // Its close tag could either be `/>` or `>`, checking the next char to ensure we cover both cases.\n          iconMarkLength = ENCODED_TAGS.META.ICON_MARK.length\n          // Check if next char is /, this is for xml mode.\n          if (chunk[iconMarkIndex + iconMarkLength] === 47) {\n            iconMarkLength += 2\n          } else {\n            // The last char is `>`\n            iconMarkLength++\n          }\n        }\n      }\n\n      // Check if icon mark is inside <head> tag in the first chunk.\n      if (chunkIndex === 0) {\n        closedHeadIndex = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD)\n        // The mark icon is located in the 1st chunk before the head tag.\n        // We do not need to insert the script tag in this case because it's in the head.\n        // Just remove the icon mark from the chunk.\n        if (iconMarkIndex < closedHeadIndex && iconMarkIndex !== -1) {\n          const replaced = new Uint8Array(chunk.length - iconMarkLength)\n\n          // Remove the icon mark from the chunk.\n          replaced.set(chunk.subarray(0, iconMarkIndex))\n          replaced.set(\n            chunk.subarray(iconMarkIndex + iconMarkLength),\n            iconMarkIndex\n          )\n          chunk = replaced\n          isMarkRemoved = true\n        }\n      } else {\n        // When it's appeared in the following chunks, we'll need to\n        // remove the mark and then insert the script tag at that position.\n        const insertion = await insert()\n        const encodedInsertion = encoder.encode(insertion)\n        const insertionLength = encodedInsertion.length\n        // Replace the icon mark with the hoist script or empty string.\n        const replaced = new Uint8Array(\n          chunk.length - iconMarkLength + insertionLength\n        )\n        // Set the first part of the chunk, before the icon mark.\n        replaced.set(chunk.subarray(0, iconMarkIndex))\n        // Set the insertion after the icon mark.\n        replaced.set(encodedInsertion, iconMarkIndex)\n\n        // Set the rest of the chunk after the icon mark.\n        replaced.set(\n          chunk.subarray(iconMarkIndex + iconMarkLength),\n          iconMarkIndex + insertionLength\n        )\n        chunk = replaced\n        isMarkRemoved = true\n      }\n      controller.enqueue(chunk)\n    },\n  })\n}\n\nfunction createHeadInsertionTransformStream(\n  insert: () => Promise<string>\n): TransformStream<Uint8Array, Uint8Array> {\n  let inserted = false\n\n  // We need to track if this transform saw any bytes because if it didn't\n  // we won't want to insert any server HTML at all\n  let hasBytes = false\n\n  return new TransformStream({\n    async transform(chunk, controller) {\n      hasBytes = true\n\n      const insertion = await insert()\n      if (inserted) {\n        if (insertion) {\n          const encodedInsertion = encoder.encode(insertion)\n          controller.enqueue(encodedInsertion)\n        }\n        controller.enqueue(chunk)\n      } else {\n        // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n        const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD)\n        // In fully static rendering or non PPR rendering cases:\n        // `/head>` will always be found in the chunk in first chunk rendering.\n        if (index !== -1) {\n          if (insertion) {\n            const encodedInsertion = encoder.encode(insertion)\n            // Get the total count of the bytes in the chunk and the insertion\n            // e.g.\n            // chunk = <head><meta charset=\"utf-8\"></head>\n            // insertion = <script>...</script>\n            // output = <head><meta charset=\"utf-8\"> [ <script>...</script> ] </head>\n            const insertedHeadContent = new Uint8Array(\n              chunk.length + encodedInsertion.length\n            )\n            // Append the first part of the chunk, before the head tag\n            insertedHeadContent.set(chunk.slice(0, index))\n            // Append the server inserted content\n            insertedHeadContent.set(encodedInsertion, index)\n            // Append the rest of the chunk\n            insertedHeadContent.set(\n              chunk.slice(index),\n              index + encodedInsertion.length\n            )\n            controller.enqueue(insertedHeadContent)\n          } else {\n            controller.enqueue(chunk)\n          }\n          inserted = true\n        } else {\n          // This will happens in PPR rendering during next start, when the page is partially rendered.\n          // When the page resumes, the head tag will be found in the middle of the chunk.\n          // Where we just need to append the insertion and chunk to the current stream.\n          // e.g.\n          // PPR-static: <head>...</head><body> [ resume content ] </body>\n          // PPR-resume: [ insertion ] [ rest content ]\n          if (insertion) {\n            controller.enqueue(encoder.encode(insertion))\n          }\n          controller.enqueue(chunk)\n          inserted = true\n        }\n      }\n    },\n    async flush(controller) {\n      // Check before closing if there's anything remaining to insert.\n      if (hasBytes) {\n        const insertion = await insert()\n        if (insertion) {\n          controller.enqueue(encoder.encode(insertion))\n        }\n      }\n    },\n  })\n}\n\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(\n  suffix: string\n): TransformStream<Uint8Array, Uint8Array> {\n  let flushed = false\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        controller.enqueue(encoder.encode(suffix))\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // If we've already flushed, we're done.\n      if (flushed) return\n\n      // Schedule the flush to happen.\n      flushed = true\n      flush(controller)\n    },\n    flush(controller) {\n      if (pending) return pending.promise\n      if (flushed) return\n\n      // Flush now.\n      controller.enqueue(encoder.encode(suffix))\n    },\n  })\n}\n\n// Merge two streams into one. Ensure the final transform stream is closed\n// when both are finished.\nfunction createMergedTransformStream(\n  stream: ReadableStream<Uint8Array>\n): TransformStream<Uint8Array, Uint8Array> {\n  let pull: Promise<void> | null = null\n  let donePulling = false\n\n  async function startPulling(controller: TransformStreamDefaultController) {\n    if (pull) {\n      return\n    }\n\n    const reader = stream.getReader()\n\n    // NOTE: streaming flush\n    // We are buffering here for the inlined data stream because the\n    // \"shell\" stream might be chunkenized again by the underlying stream\n    // implementation, e.g. with a specific high-water mark. To ensure it's\n    // the safe timing to pipe the data stream, this extra tick is\n    // necessary.\n\n    // We don't start reading until we've left the current Task to ensure\n    // that it's inserted after flushing the shell. Note that this implementation\n    // might get stale if impl details of Fizz change in the future.\n    await atLeastOneTask()\n\n    try {\n      while (true) {\n        const { done, value } = await reader.read()\n        if (done) {\n          donePulling = true\n          return\n        }\n\n        controller.enqueue(value)\n      }\n    } catch (err) {\n      controller.error(err)\n    }\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // Start the streaming if it hasn't already been started yet.\n      if (!pull) {\n        pull = startPulling(controller)\n      }\n    },\n    flush(controller) {\n      if (donePulling) {\n        return\n      }\n      return pull || startPulling(controller)\n    },\n  })\n}\n\nconst CLOSE_TAG = '</body></html>'\n\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */\nfunction createMoveSuffixStream(): TransformStream<Uint8Array, Uint8Array> {\n  let foundSuffix = false\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (foundSuffix) {\n        return controller.enqueue(chunk)\n      }\n\n      const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n      if (index > -1) {\n        foundSuffix = true\n\n        // If the whole chunk is the suffix, then don't write anything, it will\n        // be written in the flush.\n        if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n          return\n        }\n\n        // Write out the part before the suffix.\n        const before = chunk.slice(0, index)\n        controller.enqueue(before)\n\n        // In the case where the suffix is in the middle of the chunk, we need\n        // to split the chunk into two parts.\n        if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n          // Write out the part after the suffix.\n          const after = chunk.slice(\n            index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length\n          )\n          controller.enqueue(after)\n        }\n      } else {\n        controller.enqueue(chunk)\n      }\n    },\n    flush(controller) {\n      // Even if we didn't find the suffix, the HTML is not valid if we don't\n      // add it, so insert it at the end.\n      controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n    },\n  })\n}\n\nfunction createStripDocumentClosingTagsTransform(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  return new TransformStream({\n    transform(chunk, controller) {\n      // We rely on the assumption that chunks will never break across a code unit.\n      // This is reasonable because we currently concat all of React's output from a single\n      // flush into one chunk before streaming it forward which means the chunk will represent\n      // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n      // longer do this large buffered chunk\n      if (\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)\n      ) {\n        // the entire chunk is the closing tags; return without enqueueing anything.\n        return\n      }\n\n      // We assume these tags will go at together at the end of the document and that\n      // they won't appear anywhere else in the document. This is not really a safe assumption\n      // but until we revamp our streaming infra this is a performant way to string the tags\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY)\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML)\n\n      controller.enqueue(chunk)\n    },\n  })\n}\n\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */\nexport function createRootLayoutValidatorStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let foundHtml = false\n  let foundBody = false\n  return new TransformStream({\n    async transform(chunk, controller) {\n      // Peek into the streamed chunk to see if the tags are present.\n      if (\n        !foundHtml &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1\n      ) {\n        foundHtml = true\n      }\n\n      if (\n        !foundBody &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1\n      ) {\n        foundBody = true\n      }\n\n      controller.enqueue(chunk)\n    },\n    flush(controller) {\n      const missingTags: ('html' | 'body')[] = []\n      if (!foundHtml) missingTags.push('html')\n      if (!foundBody) missingTags.push('body')\n\n      if (!missingTags.length) return\n\n      controller.enqueue(\n        encoder.encode(\n          `<html id=\"__next_error__\">\n            <template\n              data-next-error-message=\"Missing ${missingTags\n                .map((c) => `<${c}>`)\n                .join(\n                  missingTags.length > 1 ? ' and ' : ''\n                )} tags in the root layout.\\nRead more at https://nextjs.org/docs/messages/missing-root-layout-tags\"\"\n              data-next-error-digest=\"${MISSING_ROOT_TAGS_ERROR}\"\n              data-next-error-stack=\"\"\n            ></template>\n          `\n        )\n      )\n    },\n  })\n}\n\nfunction chainTransformers<T>(\n  readable: ReadableStream<T>,\n  transformers: ReadonlyArray<TransformStream<T, T> | null>\n): ReadableStream<T> {\n  let stream = readable\n  for (const transformer of transformers) {\n    if (!transformer) continue\n\n    stream = stream.pipeThrough(transformer)\n  }\n  return stream\n}\n\nexport type ContinueStreamOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array> | undefined\n  isStaticGeneration: boolean\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n  validateRootLayout?: boolean\n  /**\n   * Suffix to inject after the buffered data, but before the close tags.\n   */\n  suffix?: string | undefined\n}\n\nexport async function continueFizzStream(\n  renderStream: ReactReadableStream,\n  {\n    suffix,\n    inlinedDataStream,\n    isStaticGeneration,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n    validateRootLayout,\n  }: ContinueStreamOptions\n): Promise<ReadableStream<Uint8Array>> {\n  // Suffix itself might contain close tags at the end, so we need to split it.\n  const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null\n\n  // If we're generating static HTML and there's an `allReady` promise on the\n  // stream, we need to wait for it to resolve before continuing.\n  if (isStaticGeneration && 'allReady' in renderStream) {\n    await renderStream.allReady\n  }\n\n  return chainTransformers(renderStream, [\n    // Buffer everything to avoid flushing too frequently\n    createBufferedTransformStream(),\n\n    // Transform metadata\n    createMetadataTransformStream(getServerInsertedMetadata),\n\n    // Insert suffix content\n    suffixUnclosed != null && suffixUnclosed.length > 0\n      ? createDeferredSuffixStream(suffixUnclosed)\n      : null,\n\n    // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    inlinedDataStream ? createMergedTransformStream(inlinedDataStream) : null,\n\n    // Validate the root layout for missing html or body tags\n    validateRootLayout ? createRootLayoutValidatorStream() : null,\n\n    // Close tags should always be deferred to the end\n    createMoveSuffixStream(),\n\n    // Special head insertions\n    // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n    // hydration errors. Remove this once it's ready to be handled by react itself.\n    createHeadInsertionTransformStream(getServerInsertedHTML),\n  ])\n}\n\ntype ContinueDynamicPrerenderOptions = {\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n}\n\nexport async function continueDynamicPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  {\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n  }: ContinueDynamicPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      .pipeThrough(createStripDocumentClosingTagsTransform())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n  )\n}\n\ntype ContinueStaticPrerenderOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n}\n\nexport async function continueStaticPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  {\n    inlinedDataStream,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n  }: ContinueStaticPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(createMergedTransformStream(inlinedDataStream))\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\ntype ContinueResumeOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n}\n\nexport async function continueDynamicHTMLResume(\n  renderStream: ReadableStream<Uint8Array>,\n  {\n    inlinedDataStream,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n  }: ContinueResumeOptions\n) {\n  return (\n    renderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(createMergedTransformStream(inlinedDataStream))\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\nexport function createDocumentClosingStream(): ReadableStream<Uint8Array> {\n  return streamFromString(CLOSE_TAG)\n}\n","import type { ServerRuntime } from '../types'\n\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP'\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI'\n\nexport const MATCHED_PATH_HEADER = 'x-matched-path'\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate'\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER =\n  'x-prerender-revalidate-if-generated'\n\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc'\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments'\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc'\nexport const RSC_SUFFIX = '.rsc'\nexport const ACTION_SUFFIX = '.action'\nexport const NEXT_DATA_SUFFIX = '.json'\nexport const NEXT_META_SUFFIX = '.meta'\nexport const NEXT_BODY_SUFFIX = '.body'\n\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags'\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags'\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER =\n  'x-next-revalidate-tag-token'\n\nexport const NEXT_RESUME_HEADER = 'next-resume'\n\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_'\n\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000\n\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe\n\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware'\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`\n\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation'\n\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages'\nexport const DOT_NEXT_ALIAS = 'private-dot-next'\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir'\nexport const APP_DIR_ALIAS = 'private-next-app-dir'\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy'\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate'\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference'\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper'\nexport const RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS =\n  'private-next-rsc-track-dynamic-import'\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption'\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS =\n  'private-next-rsc-action-client-wrapper'\n\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`\n\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`\n\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`\n\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`\n\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`\n\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`\n\nexport const GSP_NO_RETURNED_VALUE =\n  'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?'\nexport const GSSP_NO_RETURNED_VALUE =\n  'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?'\n\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR =\n  'The `unstable_revalidate` property is available for general use.\\n' +\n  'Please use `revalidate` instead.'\n\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`\n\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`\n\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`\n\nexport const ESLINT_DEFAULT_DIRS = ['app', 'pages', 'components', 'lib', 'src']\n\nexport const SERVER_RUNTIME: Record<string, ServerRuntime> = {\n  edge: 'edge',\n  experimentalEdge: 'experimental-edge',\n  nodejs: 'nodejs',\n}\n\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n   * The layer for the shared code between the client and server bundles.\n   */\n  shared: 'shared',\n  /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */\n  reactServerComponents: 'rsc',\n  /**\n   * Server Side Rendering layer for app (ssr).\n   */\n  serverSideRendering: 'ssr',\n  /**\n   * The browser client bundle layer for actions.\n   */\n  actionBrowser: 'action-browser',\n  /**\n   * The Node.js bundle layer for the API routes.\n   */\n  apiNode: 'api-node',\n  /**\n   * The Edge Lite bundle layer for the API routes.\n   */\n  apiEdge: 'api-edge',\n  /**\n   * The layer for the middleware code.\n   */\n  middleware: 'middleware',\n  /**\n   * The layer for the instrumentation hooks.\n   */\n  instrument: 'instrument',\n  /**\n   * The layer for assets on the edge.\n   */\n  edgeAsset: 'edge-asset',\n  /**\n   * The browser client bundle layer for App directory.\n   */\n  appPagesBrowser: 'app-pages-browser',\n  /**\n   * The browser client bundle layer for Pages directory.\n   */\n  pagesDirBrowser: 'pages-dir-browser',\n  /**\n   * The Edge Lite bundle layer for Pages directory.\n   */\n  pagesDirEdge: 'pages-dir-edge',\n  /**\n   * The Node.js bundle layer for Pages directory.\n   */\n  pagesDirNode: 'pages-dir-node',\n} as const\n\nexport type WebpackLayerName =\n  (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES]\n\nconst WEBPACK_LAYERS = {\n  ...WEBPACK_LAYERS_NAMES,\n  GROUP: {\n    builtinReact: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n    serverOnly: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    neutralTarget: [\n      // pages api\n      WEBPACK_LAYERS_NAMES.apiNode,\n      WEBPACK_LAYERS_NAMES.apiEdge,\n    ],\n    clientOnly: [\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n    ],\n    bundled: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.shared,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    appPages: [\n      // app router pages and layouts\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n  },\n}\n\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: '__next_edge_ssr_entry__',\n  metadata: '__next_metadata__',\n  metadataRoute: '__next_metadata_route__',\n  metadataImageMeta: '__next_metadata_image_meta__',\n}\n\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES }\n","import type { OutgoingHttpHeaders } from 'http'\nimport {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../lib/constants'\n\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */\nexport function fromNodeOutgoingHttpHeaders(\n  nodeHeaders: OutgoingHttpHeaders\n): Headers {\n  const headers = new Headers()\n  for (let [key, value] of Object.entries(nodeHeaders)) {\n    const values = Array.isArray(value) ? value : [value]\n    for (let v of values) {\n      if (typeof v === 'undefined') continue\n      if (typeof v === 'number') {\n        v = v.toString()\n      }\n\n      headers.append(key, v)\n    }\n  }\n  return headers\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nexport function splitCookiesString(cookiesString: string) {\n  var cookiesStrings = []\n  var pos = 0\n  var start\n  var ch\n  var lastComma\n  var nextStart\n  var cookiesSeparatorFound\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1\n    }\n    return pos < cookiesString.length\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos)\n\n    return ch !== '=' && ch !== ';' && ch !== ','\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos\n    cookiesSeparatorFound = false\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos)\n      if (ch === ',') {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos\n        pos += 1\n\n        skipWhitespace()\n        nextStart = pos\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n          // we found cookies separator\n          cookiesSeparatorFound = true\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart\n          cookiesStrings.push(cookiesString.substring(start, lastComma))\n          start = pos\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1\n        }\n      } else {\n        pos += 1\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length))\n    }\n  }\n\n  return cookiesStrings\n}\n\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */\nexport function toNodeOutgoingHttpHeaders(\n  headers: Headers\n): OutgoingHttpHeaders {\n  const nodeHeaders: OutgoingHttpHeaders = {}\n  const cookies: string[] = []\n  if (headers) {\n    for (const [key, value] of headers.entries()) {\n      if (key.toLowerCase() === 'set-cookie') {\n        // We may have gotten a comma joined string of cookies, or multiple\n        // set-cookie headers. We need to merge them into one header array\n        // to represent all the cookies.\n        cookies.push(...splitCookiesString(value))\n        nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies\n      } else {\n        nodeHeaders[key] = value\n      }\n    }\n  }\n  return nodeHeaders\n}\n\n/**\n * Validate the correctness of a user-provided URL.\n */\nexport function validateURL(url: string | URL): string {\n  try {\n    return String(new URL(String(url)))\n  } catch (error: any) {\n    throw new Error(\n      `URL is malformed \"${String(\n        url\n      )}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`,\n      { cause: error }\n    )\n  }\n}\n\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key.\n */\nexport function normalizeNextQueryParam(key: string): null | string {\n  const prefixes = [NEXT_QUERY_PARAM_PREFIX, NEXT_INTERCEPTION_MARKER_PREFIX]\n  for (const prefix of prefixes) {\n    if (key !== prefix && key.startsWith(prefix)) {\n      return key.substring(prefix.length)\n    }\n  }\n  return null\n}\n","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: readonly DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import type { OutgoingHttpHeaders } from 'http'\n\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nexport function getHostname(\n  parsed: { hostname?: string | null },\n  headers?: OutgoingHttpHeaders\n): string | undefined {\n  // Get the hostname from the headers if it exists, otherwise use the parsed\n  // hostname.\n  let hostname: string\n  if (headers?.host && !Array.isArray(headers.host)) {\n    hostname = headers.host.toString().split(':', 1)[0]\n  } else if (parsed.hostname) {\n    hostname = parsed.hostname\n  } else return\n\n  return hostname.toLowerCase()\n}\n","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * A cache of lowercased locales for each list of locales. This is stored as a\n * WeakMap so if the locales are garbage collected, the cache entry will be\n * removed as well.\n */\nconst cache = new WeakMap<readonly string[], readonly string[]>()\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: readonly string[]\n): PathLocale {\n  // If locales is undefined, return the pathname as is.\n  if (!locales) return { pathname }\n\n  // Get the cached lowercased locales or create a new cache entry.\n  let lowercasedLocales = cache.get(locales)\n  if (!lowercasedLocales) {\n    lowercasedLocales = locales.map((locale) => locale.toLowerCase())\n    cache.set(locales, lowercasedLocales)\n  }\n\n  let detectedLocale: string | undefined\n\n  // The first segment will be empty, because it has a leading `/`. If\n  // there is no further segment, there is no locale (or it's the default).\n  const segments = pathname.split('/', 2)\n\n  // If there's no second segment (ie, the pathname is just `/`), there's no\n  // locale.\n  if (!segments[1]) return { pathname }\n\n  // The second segment will contain the locale part if any.\n  const segment = segments[1].toLowerCase()\n\n  // See if the segment matches one of the locales. If it doesn't, there is\n  // no locale (or it's the default).\n  const index = lowercasedLocales.indexOf(segment)\n  if (index < 0) return { pathname }\n\n  // Return the case-sensitive locale.\n  detectedLocale = locales[index]\n\n  // Remove the `/${locale}` part of the pathname.\n  pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n  return { pathname, detectedLocale }\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: readonly string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type { DomainLocale, I18NConfig } from '../config-shared'\nimport type { I18NProvider } from '../lib/i18n-provider'\n\nimport { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale'\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info'\nimport { getHostname } from '../../shared/lib/get-hostname'\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info'\n\ninterface Options {\n  base?: string | URL\n  headers?: OutgoingHttpHeaders\n  forceLocale?: boolean\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  i18nProvider?: I18NProvider\n}\n\nconst REGEX_LOCALHOST_HOSTNAME =\n  /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/\n\nfunction parseURL(url: string | URL, base?: string | URL) {\n  return new URL(\n    String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'),\n    base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost')\n  )\n}\n\nconst Internal = Symbol('NextURLInternal')\n\nexport class NextURL {\n  private [Internal]: {\n    basePath: string\n    buildId?: string\n    flightSearchParameters?: Record<string, string>\n    defaultLocale?: string\n    domainLocale?: DomainLocale\n    locale?: string\n    options: Options\n    trailingSlash?: boolean\n    url: URL\n  }\n\n  constructor(input: string | URL, base?: string | URL, opts?: Options)\n  constructor(input: string | URL, opts?: Options)\n  constructor(\n    input: string | URL,\n    baseOrOpts?: string | URL | Options,\n    opts?: Options\n  ) {\n    let base: undefined | string | URL\n    let options: Options\n\n    if (\n      (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts) ||\n      typeof baseOrOpts === 'string'\n    ) {\n      base = baseOrOpts\n      options = opts || {}\n    } else {\n      options = opts || baseOrOpts || {}\n    }\n\n    this[Internal] = {\n      url: parseURL(input, base ?? options.base),\n      options: options,\n      basePath: '',\n    }\n\n    this.analyze()\n  }\n\n  private analyze() {\n    const info = getNextPathnameInfo(this[Internal].url.pathname, {\n      nextConfig: this[Internal].options.nextConfig,\n      parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n      i18nProvider: this[Internal].options.i18nProvider,\n    })\n\n    const hostname = getHostname(\n      this[Internal].url,\n      this[Internal].options.headers\n    )\n    this[Internal].domainLocale = this[Internal].options.i18nProvider\n      ? this[Internal].options.i18nProvider.detectDomainLocale(hostname)\n      : detectDomainLocale(\n          this[Internal].options.nextConfig?.i18n?.domains,\n          hostname\n        )\n\n    const defaultLocale =\n      this[Internal].domainLocale?.defaultLocale ||\n      this[Internal].options.nextConfig?.i18n?.defaultLocale\n\n    this[Internal].url.pathname = info.pathname\n    this[Internal].defaultLocale = defaultLocale\n    this[Internal].basePath = info.basePath ?? ''\n    this[Internal].buildId = info.buildId\n    this[Internal].locale = info.locale ?? defaultLocale\n    this[Internal].trailingSlash = info.trailingSlash\n  }\n\n  private formatPathname() {\n    return formatNextPathnameInfo({\n      basePath: this[Internal].basePath,\n      buildId: this[Internal].buildId,\n      defaultLocale: !this[Internal].options.forceLocale\n        ? this[Internal].defaultLocale\n        : undefined,\n      locale: this[Internal].locale,\n      pathname: this[Internal].url.pathname,\n      trailingSlash: this[Internal].trailingSlash,\n    })\n  }\n\n  private formatSearch() {\n    return this[Internal].url.search\n  }\n\n  public get buildId() {\n    return this[Internal].buildId\n  }\n\n  public set buildId(buildId: string | undefined) {\n    this[Internal].buildId = buildId\n  }\n\n  public get locale() {\n    return this[Internal].locale ?? ''\n  }\n\n  public set locale(locale: string) {\n    if (\n      !this[Internal].locale ||\n      !this[Internal].options.nextConfig?.i18n?.locales.includes(locale)\n    ) {\n      throw new TypeError(\n        `The NextURL configuration includes no locale \"${locale}\"`\n      )\n    }\n\n    this[Internal].locale = locale\n  }\n\n  get defaultLocale() {\n    return this[Internal].defaultLocale\n  }\n\n  get domainLocale() {\n    return this[Internal].domainLocale\n  }\n\n  get searchParams() {\n    return this[Internal].url.searchParams\n  }\n\n  get host() {\n    return this[Internal].url.host\n  }\n\n  set host(value: string) {\n    this[Internal].url.host = value\n  }\n\n  get hostname() {\n    return this[Internal].url.hostname\n  }\n\n  set hostname(value: string) {\n    this[Internal].url.hostname = value\n  }\n\n  get port() {\n    return this[Internal].url.port\n  }\n\n  set port(value: string) {\n    this[Internal].url.port = value\n  }\n\n  get protocol() {\n    return this[Internal].url.protocol\n  }\n\n  set protocol(value: string) {\n    this[Internal].url.protocol = value\n  }\n\n  get href() {\n    const pathname = this.formatPathname()\n    const search = this.formatSearch()\n    return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`\n  }\n\n  set href(url: string) {\n    this[Internal].url = parseURL(url)\n    this.analyze()\n  }\n\n  get origin() {\n    return this[Internal].url.origin\n  }\n\n  get pathname() {\n    return this[Internal].url.pathname\n  }\n\n  set pathname(value: string) {\n    this[Internal].url.pathname = value\n  }\n\n  get hash() {\n    return this[Internal].url.hash\n  }\n\n  set hash(value: string) {\n    this[Internal].url.hash = value\n  }\n\n  get search() {\n    return this[Internal].url.search\n  }\n\n  set search(value: string) {\n    this[Internal].url.search = value\n  }\n\n  get password() {\n    return this[Internal].url.password\n  }\n\n  set password(value: string) {\n    this[Internal].url.password = value\n  }\n\n  get username() {\n    return this[Internal].url.username\n  }\n\n  set username(value: string) {\n    this[Internal].url.username = value\n  }\n\n  get basePath() {\n    return this[Internal].basePath\n  }\n\n  set basePath(value: string) {\n    this[Internal].basePath = value.startsWith('/') ? value : `/${value}`\n  }\n\n  toString() {\n    return this.href\n  }\n\n  toJSON() {\n    return this.href\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      href: this.href,\n      origin: this.origin,\n      protocol: this.protocol,\n      username: this.username,\n      password: this.password,\n      host: this.host,\n      hostname: this.hostname,\n      port: this.port,\n      pathname: this.pathname,\n      search: this.search,\n      searchParams: this.searchParams,\n      hash: this.hash,\n    }\n  }\n\n  clone() {\n    return new NextURL(String(this), this[Internal].options)\n  }\n}\n","export class PageSignatureError extends Error {\n  constructor({ page }: { page: string }) {\n    super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `)\n  }\n}\n\nexport class RemovedPageError extends Error {\n  constructor() {\n    super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `)\n  }\n}\n\nexport class RemovedUAError extends Error {\n  constructor() {\n    super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `)\n  }\n}\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [\n      key.toLowerCase().replace(/-/g, \"\"),\n      value2\n    ])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, options] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0]];\n    return this.set({ ...options, name, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","export {\n  RequestCookies,\n  ResponseCookies,\n  stringifyCookie,\n} from 'next/dist/compiled/@edge-runtime/cookies'\n","import type { I18NConfig } from '../../config-shared'\nimport { NextURL } from '../next-url'\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils'\nimport { RemovedUAError, RemovedPageError } from '../error'\nimport { RequestCookies } from './cookies'\n\nexport const INTERNALS = Symbol('internal request')\n\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */\nexport class NextRequest extends Request {\n  [INTERNALS]: {\n    cookies: RequestCookies\n    url: string\n    nextUrl: NextURL\n  }\n\n  constructor(input: URL | RequestInfo, init: RequestInit = {}) {\n    const url =\n      typeof input !== 'string' && 'url' in input ? input.url : String(input)\n\n    validateURL(url)\n\n    // node Request instance requires duplex option when a body\n    // is present or it errors, we don't handle this for\n    // Request being passed in since it would have already\n    // errored if this wasn't configured\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      if (init.body && init.duplex !== 'half') {\n        init.duplex = 'half'\n      }\n    }\n\n    if (input instanceof Request) super(input, init)\n    else super(url, init)\n\n    const nextUrl = new NextURL(url, {\n      headers: toNodeOutgoingHttpHeaders(this.headers),\n      nextConfig: init.nextConfig,\n    })\n    this[INTERNALS] = {\n      cookies: new RequestCookies(this.headers),\n      nextUrl,\n      url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        ? url\n        : nextUrl.toString(),\n    }\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      cookies: this.cookies,\n      nextUrl: this.nextUrl,\n      url: this.url,\n      // rest of props come from Request\n      bodyUsed: this.bodyUsed,\n      cache: this.cache,\n      credentials: this.credentials,\n      destination: this.destination,\n      headers: Object.fromEntries(this.headers),\n      integrity: this.integrity,\n      keepalive: this.keepalive,\n      method: this.method,\n      mode: this.mode,\n      redirect: this.redirect,\n      referrer: this.referrer,\n      referrerPolicy: this.referrerPolicy,\n      signal: this.signal,\n    }\n  }\n\n  public get cookies() {\n    return this[INTERNALS].cookies\n  }\n\n  public get nextUrl() {\n    return this[INTERNALS].nextUrl\n  }\n\n  /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */\n  public get page() {\n    throw new RemovedPageError()\n  }\n\n  /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */\n  public get ua() {\n    throw new RemovedUAError()\n  }\n\n  public get url() {\n    return this[INTERNALS].url\n  }\n}\n\nexport interface RequestInit extends globalThis.RequestInit {\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  signal?: AbortSignal\n  // see https://github.com/whatwg/fetch/pull/1457\n  duplex?: 'half'\n}\n","import type { BaseNextRequest, BaseNextResponse } from './'\nimport type { NodeNextRequest, NodeNextResponse } from './node'\nimport type { WebNextRequest, WebNextResponse } from './web'\n\n/**\n * This file provides some helpers that should be used in conjunction with\n * explicit environment checks. When combined with the environment checks, it\n * will ensure that the correct typings are used as well as enable code\n * elimination.\n */\n\n/**\n * Type guard to determine if a request is a WebNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base request is a WebNextRequest.\n */\nexport const isWebNextRequest = (req: BaseNextRequest): req is WebNextRequest =>\n  process.env.NEXT_RUNTIME === 'edge'\n\n/**\n * Type guard to determine if a response is a WebNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base response is a WebNextResponse.\n */\nexport const isWebNextResponse = (\n  res: BaseNextResponse\n): res is WebNextResponse => process.env.NEXT_RUNTIME === 'edge'\n\n/**\n * Type guard to determine if a request is a NodeNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base request is a NodeNextRequest.\n */\nexport const isNodeNextRequest = (\n  req: BaseNextRequest\n): req is NodeNextRequest => process.env.NEXT_RUNTIME !== 'edge'\n\n/**\n * Type guard to determine if a response is a NodeNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base response is a NodeNextResponse.\n */\nexport const isNodeNextResponse = (\n  res: BaseNextResponse\n): res is NodeNextResponse => process.env.NEXT_RUNTIME !== 'edge'\n","import type { BaseNextRequest } from '../../../base-http'\nimport type { NodeNextRequest } from '../../../base-http/node'\nimport type { WebNextRequest } from '../../../base-http/web'\nimport type { Writable } from 'node:stream'\n\nimport { getRequestMeta } from '../../../request-meta'\nimport { fromNodeOutgoingHttpHeaders } from '../../utils'\nimport { NextRequest } from '../request'\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers'\n\nexport const ResponseAbortedName = 'ResponseAborted'\nexport class ResponseAborted extends Error {\n  public readonly name = ResponseAbortedName\n}\n\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */\nexport function createAbortController(response: Writable): AbortController {\n  const controller = new AbortController()\n\n  // If `finish` fires first, then `res.end()` has been called and the close is\n  // just us finishing the stream on our side. If `close` fires first, then we\n  // know the client disconnected before we finished.\n  response.once('close', () => {\n    if (response.writableFinished) return\n\n    controller.abort(new ResponseAborted())\n  })\n\n  return controller\n}\n\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */\nexport function signalFromNodeResponse(response: Writable): AbortSignal {\n  const { errored, destroyed } = response\n  if (errored || destroyed) {\n    return AbortSignal.abort(errored ?? new ResponseAborted())\n  }\n\n  const { signal } = createAbortController(response)\n  return signal\n}\n\nexport class NextRequestAdapter {\n  public static fromBaseNextRequest(\n    request: BaseNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME === 'edge' &&\n      isWebNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromWebNextRequest(request)\n    } else if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME !== 'edge' &&\n      isNodeNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromNodeNextRequest(request, signal)\n    } else {\n      throw new Error('Invariant: Unsupported NextRequest type')\n    }\n  }\n\n  public static fromNodeNextRequest(\n    request: NodeNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: BodyInit | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n      // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n      body = request.body\n    }\n\n    let url: URL\n    if (request.url.startsWith('http')) {\n      url = new URL(request.url)\n    } else {\n      // Grab the full URL from the request metadata.\n      const base = getRequestMeta(request, 'initURL')\n      if (!base || !base.startsWith('http')) {\n        // Because the URL construction relies on the fact that the URL provided\n        // is absolute, we need to provide a base URL. We can't use the request\n        // URL because it's relative, so we use a dummy URL instead.\n        url = new URL(request.url, 'http://n')\n      } else {\n        url = new URL(request.url, base)\n      }\n    }\n\n    return new NextRequest(url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      duplex: 'half',\n      signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n\n  public static fromWebNextRequest(request: WebNextRequest): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: ReadableStream | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD') {\n      body = request.body\n    }\n\n    return new NextRequest(request.url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      duplex: 'half',\n      signal: request.request.signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(request.request.signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n}\n","import type { AppPageModule } from './route-modules/app-page/module'\n\n// Combined load times for loading client components\nlet clientComponentLoadStart = 0\nlet clientComponentLoadTimes = 0\nlet clientComponentLoadCount = 0\n\nexport function wrapClientComponentLoader(\n  ComponentMod: AppPageModule\n): AppPageModule['__next_app__'] {\n  if (!('performance' in globalThis)) {\n    return ComponentMod.__next_app__\n  }\n\n  return {\n    require: (...args) => {\n      const startTime = performance.now()\n\n      if (clientComponentLoadStart === 0) {\n        clientComponentLoadStart = startTime\n      }\n\n      try {\n        clientComponentLoadCount += 1\n        return ComponentMod.__next_app__.require(...args)\n      } finally {\n        clientComponentLoadTimes += performance.now() - startTime\n      }\n    },\n    loadChunk: (...args) => {\n      const startTime = performance.now()\n      const result = ComponentMod.__next_app__.loadChunk(...args)\n      // Avoid wrapping `loadChunk`'s result in an extra promise in case something like React depends on its identity.\n      // We only need to know when it's settled.\n      result.finally(() => {\n        clientComponentLoadTimes += performance.now() - startTime\n      })\n      return result\n    },\n  }\n}\n\nexport function getClientComponentLoaderMetrics(\n  options: { reset?: boolean } = {}\n) {\n  const metrics =\n    clientComponentLoadStart === 0\n      ? undefined\n      : {\n          clientComponentLoadStart,\n          clientComponentLoadTimes,\n          clientComponentLoadCount,\n        }\n\n  if (options.reset) {\n    clientComponentLoadStart = 0\n    clientComponentLoadTimes = 0\n    clientComponentLoadCount = 0\n  }\n\n  return metrics\n}\n","import type { ServerResponse } from 'node:http'\n\nimport {\n  ResponseAbortedName,\n  createAbortController,\n} from './web/spec-extension/adapters/next-request'\nimport { DetachedPromise } from '../lib/detached-promise'\nimport { getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger'\n\nexport function isAbortError(e: any): e is Error & { name: 'AbortError' } {\n  return e?.name === 'AbortError' || e?.name === ResponseAbortedName\n}\n\nfunction createWriterFromResponse(\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n): WritableStream<Uint8Array> {\n  let started = false\n\n  // Create a promise that will resolve once the response has drained. See\n  // https://nodejs.org/api/stream.html#stream_event_drain\n  let drained = new DetachedPromise<void>()\n  function onDrain() {\n    drained.resolve()\n  }\n  res.on('drain', onDrain)\n\n  // If the finish event fires, it means we shouldn't block and wait for the\n  // drain event.\n  res.once('close', () => {\n    res.off('drain', onDrain)\n    drained.resolve()\n  })\n\n  // Create a promise that will resolve once the response has finished. See\n  // https://nodejs.org/api/http.html#event-finish_1\n  const finished = new DetachedPromise<void>()\n  res.once('finish', () => {\n    finished.resolve()\n  })\n\n  // Create a writable stream that will write to the response.\n  return new WritableStream<Uint8Array>({\n    write: async (chunk) => {\n      // You'd think we'd want to use `start` instead of placing this in `write`\n      // but this ensures that we don't actually flush the headers until we've\n      // started writing chunks.\n      if (!started) {\n        started = true\n\n        if (\n          'performance' in globalThis &&\n          process.env.NEXT_OTEL_PERFORMANCE_PREFIX\n        ) {\n          const metrics = getClientComponentLoaderMetrics()\n          if (metrics) {\n            performance.measure(\n              `${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`,\n              {\n                start: metrics.clientComponentLoadStart,\n                end:\n                  metrics.clientComponentLoadStart +\n                  metrics.clientComponentLoadTimes,\n              }\n            )\n          }\n        }\n\n        res.flushHeaders()\n        getTracer().trace(\n          NextNodeServerSpan.startResponse,\n          {\n            spanName: 'start response',\n          },\n          () => undefined\n        )\n      }\n\n      try {\n        const ok = res.write(chunk)\n\n        // Added by the `compression` middleware, this is a function that will\n        // flush the partially-compressed response to the client.\n        if ('flush' in res && typeof res.flush === 'function') {\n          res.flush()\n        }\n\n        // If the write returns false, it means there's some backpressure, so\n        // wait until it's streamed before continuing.\n        if (!ok) {\n          await drained.promise\n\n          // Reset the drained promise so that we can wait for the next drain event.\n          drained = new DetachedPromise<void>()\n        }\n      } catch (err) {\n        res.end()\n        throw new Error('failed to write chunk to response', { cause: err })\n      }\n    },\n    abort: (err) => {\n      if (res.writableFinished) return\n\n      res.destroy(err)\n    },\n    close: async () => {\n      // if a waitUntil promise was passed, wait for it to resolve before\n      // ending the response.\n      if (waitUntilForEnd) {\n        await waitUntilForEnd\n      }\n\n      if (res.writableFinished) return\n\n      res.end()\n      return finished.promise\n    },\n  })\n}\n\nexport async function pipeToNodeResponse(\n  readable: ReadableStream<Uint8Array>,\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n) {\n  try {\n    // If the response has already errored, then just return now.\n    const { errored, destroyed } = res\n    if (errored || destroyed) return\n\n    // Create a new AbortController so that we can abort the readable if the\n    // client disconnects.\n    const controller = createAbortController(res)\n\n    const writer = createWriterFromResponse(res, waitUntilForEnd)\n\n    await readable.pipeTo(writer, { signal: controller.signal })\n  } catch (err: any) {\n    // If this isn't related to an abort error, re-throw it.\n    if (isAbortError(err)) return\n\n    throw new Error('failed to pipe response', { cause: err })\n  }\n}\n","import type { OutgoingHttpHeaders, ServerResponse } from 'http'\nimport type { CacheControl } from './lib/cache-control'\nimport type { FetchMetrics } from './base-http'\n\nimport {\n  chainStreams,\n  streamFromBuffer,\n  streamFromString,\n  streamToBuffer,\n  streamToString,\n} from './stream-utils/node-web-streams-helper'\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable'\nimport type { RenderResumeDataCache } from './resume-data-cache/resume-data-cache'\n\ntype ContentTypeOption = string | undefined\n\nexport type AppPageRenderResultMetadata = {\n  flightData?: Buffer\n  cacheControl?: CacheControl\n  staticBailoutInfo?: {\n    stack?: string\n    description?: string\n  }\n\n  /**\n   * The postponed state if the render had postponed and needs to be resumed.\n   */\n  postponed?: string\n\n  /**\n   * The headers to set on the response that were added by the render.\n   */\n  headers?: OutgoingHttpHeaders\n  statusCode?: number\n  fetchTags?: string\n  fetchMetrics?: FetchMetrics\n\n  segmentData?: Map<string, Buffer>\n\n  /**\n   * In development, the resume data cache is warmed up before the render. This\n   * is attached to the metadata so that it can be used during the render. When\n   * prerendering, the filled resume data cache is also attached to the metadata\n   * so that it can be used when prerendering matching fallback shells.\n   */\n  renderResumeDataCache?: RenderResumeDataCache\n}\n\nexport type PagesRenderResultMetadata = {\n  pageData?: any\n  cacheControl?: CacheControl\n  assetQueryString?: string\n  isNotFound?: boolean\n  isRedirect?: boolean\n}\n\nexport type StaticRenderResultMetadata = {}\n\nexport type RenderResultMetadata = AppPageRenderResultMetadata &\n  PagesRenderResultMetadata &\n  StaticRenderResultMetadata\n\nexport type RenderResultResponse =\n  | ReadableStream<Uint8Array>[]\n  | ReadableStream<Uint8Array>\n  | string\n  | Buffer\n  | null\n\nexport type RenderResultOptions<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> = {\n  contentType?: ContentTypeOption\n  waitUntil?: Promise<unknown>\n  metadata: Metadata\n}\n\nexport default class RenderResult<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> {\n  /**\n   * The detected content type for the response. This is used to set the\n   * `Content-Type` header.\n   */\n  public readonly contentType: ContentTypeOption\n\n  /**\n   * The metadata for the response. This is used to set the revalidation times\n   * and other metadata.\n   */\n  public readonly metadata: Readonly<Metadata>\n\n  /**\n   * The response itself. This can be a string, a stream, or null. If it's a\n   * string, then it's a static response. If it's a stream, then it's a\n   * dynamic response. If it's null, then the response was not found or was\n   * already sent.\n   */\n  private response: RenderResultResponse\n\n  /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @returns a new RenderResult instance\n   */\n  public static fromStatic(value: string | Buffer) {\n    return new RenderResult<StaticRenderResultMetadata>(value, { metadata: {} })\n  }\n\n  private readonly waitUntil?: Promise<unknown>\n\n  constructor(\n    response: RenderResultResponse,\n    { contentType, waitUntil, metadata }: RenderResultOptions<Metadata>\n  ) {\n    this.response = response\n    this.contentType = contentType\n    this.metadata = metadata\n    this.waitUntil = waitUntil\n  }\n\n  public assignMetadata(metadata: Metadata) {\n    Object.assign(this.metadata, metadata)\n  }\n\n  /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */\n  public get isNull(): boolean {\n    return this.response === null\n  }\n\n  /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */\n  public get isDynamic(): boolean {\n    return typeof this.response !== 'string'\n  }\n\n  public toUnchunkedBuffer(stream?: false): Buffer\n  public toUnchunkedBuffer(stream: true): Promise<Buffer>\n  public toUnchunkedBuffer(stream = false): Promise<Buffer> | Buffer {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be unchunked')\n    }\n\n    if (typeof this.response !== 'string') {\n      if (!stream) {\n        throw new Error(\n          'Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'\n        )\n      }\n\n      return streamToBuffer(this.readable)\n    }\n\n    return Buffer.from(this.response)\n  }\n\n  /**\n   * Returns the response if it is a string. If the page was dynamic, this will\n   * return a promise if the `stream` option is true, or it will throw an error.\n   *\n   * @param stream Whether or not to return a promise if the response is dynamic\n   * @returns The response as a string\n   */\n  public toUnchunkedString(stream?: false): string\n  public toUnchunkedString(stream: true): Promise<string>\n  public toUnchunkedString(stream = false): Promise<string> | string {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be unchunked')\n    }\n\n    if (typeof this.response !== 'string') {\n      if (!stream) {\n        throw new Error(\n          'Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'\n        )\n      }\n\n      return streamToString(this.readable)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Returns the response if it is a stream, or throws an error if it is a\n   * string.\n   */\n  private get readable(): ReadableStream<Uint8Array> {\n    if (this.response === null) {\n      throw new Error('Invariant: null responses cannot be streamed')\n    }\n    if (typeof this.response === 'string') {\n      throw new Error('Invariant: static responses cannot be streamed')\n    }\n\n    if (Buffer.isBuffer(this.response)) {\n      return streamFromBuffer(this.response)\n    }\n\n    // If the response is an array of streams, then chain them together.\n    if (Array.isArray(this.response)) {\n      return chainStreams(...this.response)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */\n  public chain(readable: ReadableStream<Uint8Array>) {\n    if (this.response === null) {\n      throw new Error('Invariant: response is null. This is a bug in Next.js')\n    }\n\n    // If the response is not an array of streams already, make it one.\n    let responses: ReadableStream<Uint8Array>[]\n    if (typeof this.response === 'string') {\n      responses = [streamFromString(this.response)]\n    } else if (Array.isArray(this.response)) {\n      responses = this.response\n    } else if (Buffer.isBuffer(this.response)) {\n      responses = [streamFromBuffer(this.response)]\n    } else {\n      responses = [this.response]\n    }\n\n    // Add the new stream to the array.\n    responses.push(readable)\n\n    // Update the response.\n    this.response = responses\n  }\n\n  /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */\n  public async pipeTo(writable: WritableStream<Uint8Array>): Promise<void> {\n    try {\n      await this.readable.pipeTo(writable, {\n        // We want to close the writable stream ourselves so that we can wait\n        // for the waitUntil promise to resolve before closing it. If an error\n        // is encountered, we'll abort the writable stream if we swallowed the\n        // error.\n        preventClose: true,\n      })\n\n      // If there is a waitUntil promise, wait for it to resolve before\n      // closing the writable stream.\n      if (this.waitUntil) await this.waitUntil\n\n      // Close the writable stream.\n      await writable.close()\n    } catch (err) {\n      // If this is an abort error, we should abort the writable stream (as we\n      // took ownership of it when we started piping). We don't need to re-throw\n      // because we handled the error.\n      if (isAbortError(err)) {\n        // Abort the writable stream if an error is encountered.\n        await writable.abort(err)\n\n        return\n      }\n\n      // We're not aborting the writer here as when this method throws it's not\n      // clear as to how so the caller should assume it's their responsibility\n      // to clean up the writer.\n      throw err\n    }\n  }\n\n  /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */\n  public async pipeToNodeResponse(res: ServerResponse) {\n    await pipeToNodeResponse(this.readable, res, this.waitUntil)\n  }\n}\n","import {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedAppPageValue,\n  type CachedPageValue,\n  type IncrementalResponseCacheEntry,\n  type ResponseCacheEntry,\n} from './types'\n\nimport RenderResult from '../render-result'\nimport { RouteKind } from '../route-kind'\n\nexport async function fromResponseCacheEntry(\n  cacheEntry: ResponseCacheEntry\n): Promise<IncrementalResponseCacheEntry> {\n  return {\n    ...cacheEntry,\n    value:\n      cacheEntry.value?.kind === CachedRouteKind.PAGES\n        ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n          }\n        : cacheEntry.value?.kind === CachedRouteKind.APP_PAGE\n          ? {\n              kind: CachedRouteKind.APP_PAGE,\n              html: await cacheEntry.value.html.toUnchunkedString(true),\n              postponed: cacheEntry.value.postponed,\n              rscData: cacheEntry.value.rscData,\n              headers: cacheEntry.value.headers,\n              status: cacheEntry.value.status,\n              segmentData: cacheEntry.value.segmentData,\n            }\n          : cacheEntry.value,\n  }\n}\n\nexport async function toResponseCacheEntry(\n  response: IncrementalResponseCacheEntry | null\n): Promise<ResponseCacheEntry | null> {\n  if (!response) return null\n\n  return {\n    isMiss: response.isMiss,\n    isStale: response.isStale,\n    cacheControl: response.cacheControl,\n    value:\n      response.value?.kind === CachedRouteKind.PAGES\n        ? ({\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(response.value.html),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status,\n          } satisfies CachedPageValue)\n        : response.value?.kind === CachedRouteKind.APP_PAGE\n          ? ({\n              kind: CachedRouteKind.APP_PAGE,\n              html: RenderResult.fromStatic(response.value.html),\n              rscData: response.value.rscData,\n              headers: response.value.headers,\n              status: response.value.status,\n              postponed: response.value.postponed,\n              segmentData: response.value.segmentData,\n            } satisfies CachedAppPageValue)\n          : response.value,\n  }\n}\n\nexport function routeKindToIncrementalCacheKind(\n  routeKind: RouteKind\n): Exclude<IncrementalCacheKind, IncrementalCacheKind.FETCH> {\n  switch (routeKind) {\n    case RouteKind.PAGES:\n      return IncrementalCacheKind.PAGES\n    case RouteKind.APP_PAGE:\n      return IncrementalCacheKind.APP_PAGE\n    case RouteKind.IMAGE:\n      return IncrementalCacheKind.IMAGE\n    case RouteKind.APP_ROUTE:\n      return IncrementalCacheKind.APP_ROUTE\n    default:\n      throw new Error(`Unexpected route kind ${routeKind}`)\n  }\n}\n","import type {\n  ResponseCacheEntry,\n  ResponseGenerator,\n  ResponseCacheBase,\n  IncrementalResponseCacheEntry,\n  IncrementalResponseCache,\n} from './types'\n\nimport { Batcher } from '../../lib/batcher'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport {\n  fromResponseCacheEntry,\n  routeKindToIncrementalCacheKind,\n  toResponseCacheEntry,\n} from './utils'\nimport type { RouteKind } from '../route-kind'\n\nexport * from './types'\n\nexport default class ResponseCache implements ResponseCacheBase {\n  private readonly batcher = Batcher.create<\n    { key: string; isOnDemandRevalidate: boolean },\n    IncrementalResponseCacheEntry | null,\n    string\n  >({\n    // Ensure on-demand revalidate doesn't block normal requests, it should be\n    // safe to run an on-demand revalidate for the same key as a normal request.\n    cacheKeyFn: ({ key, isOnDemandRevalidate }) =>\n      `${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n    // We wait to do any async work until after we've added our promise to\n    // `pendingResponses` to ensure that any any other calls will reuse the\n    // same promise until we've fully finished our work.\n    schedulerFn: scheduleOnNextTick,\n  })\n\n  private previousCacheItem?: {\n    key: string\n    entry: IncrementalResponseCacheEntry | null\n    expiresAt: number\n  }\n\n  // we don't use minimal_mode name here as this.minimal_mode is\n  // statically replace for server runtimes but we need it to\n  // be dynamic here\n  private minimal_mode?: boolean\n\n  constructor(minimal_mode: boolean) {\n    this.minimal_mode = minimal_mode\n  }\n\n  public async get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      routeKind: RouteKind\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalResponseCache\n      isRoutePPREnabled?: boolean\n      isFallback?: boolean\n      waitUntil?: (prom: Promise<any>) => void\n    }\n  ): Promise<ResponseCacheEntry | null> {\n    // If there is no key for the cache, we can't possibly look this up in the\n    // cache so just return the result of the response generator.\n    if (!key) {\n      return responseGenerator({ hasResolved: false, previousCacheEntry: null })\n    }\n\n    const {\n      incrementalCache,\n      isOnDemandRevalidate = false,\n      isFallback = false,\n      isRoutePPREnabled = false,\n      waitUntil,\n    } = context\n\n    const response = await this.batcher.batch(\n      { key, isOnDemandRevalidate },\n      (cacheKey, resolve) => {\n        const prom = (async () => {\n          // We keep the previous cache entry around to leverage when the\n          // incremental cache is disabled in minimal mode.\n          if (\n            this.minimal_mode &&\n            this.previousCacheItem?.key === cacheKey &&\n            this.previousCacheItem.expiresAt > Date.now()\n          ) {\n            return this.previousCacheItem.entry\n          }\n\n          // Coerce the kindHint into a given kind for the incremental cache.\n          const kind = routeKindToIncrementalCacheKind(context.routeKind)\n\n          let resolved = false\n          let cachedResponse: IncrementalResponseCacheEntry | null = null\n          try {\n            cachedResponse = !this.minimal_mode\n              ? await incrementalCache.get(key, {\n                  kind,\n                  isRoutePPREnabled: context.isRoutePPREnabled,\n                  isFallback,\n                })\n              : null\n\n            if (cachedResponse && !isOnDemandRevalidate) {\n              resolve(cachedResponse)\n              resolved = true\n\n              if (!cachedResponse.isStale || context.isPrefetch) {\n                // The cached value is still valid, so we don't need\n                // to update it yet.\n                return null\n              }\n            }\n\n            const cacheEntry = await responseGenerator({\n              hasResolved: resolved,\n              previousCacheEntry: cachedResponse,\n              isRevalidating: true,\n            })\n\n            // If the cache entry couldn't be generated, we don't want to cache\n            // the result.\n            if (!cacheEntry) {\n              // Unset the previous cache item if it was set.\n              if (this.minimal_mode) this.previousCacheItem = undefined\n              return null\n            }\n\n            const resolveValue = await fromResponseCacheEntry({\n              ...cacheEntry,\n              isMiss: !cachedResponse,\n            })\n            if (!resolveValue) {\n              // Unset the previous cache item if it was set.\n              if (this.minimal_mode) this.previousCacheItem = undefined\n              return null\n            }\n\n            // For on-demand revalidate wait to resolve until cache is set.\n            // Otherwise resolve now.\n            if (!isOnDemandRevalidate && !resolved) {\n              resolve(resolveValue)\n              resolved = true\n            }\n\n            // We want to persist the result only if it has a cache control value\n            // defined.\n            if (resolveValue.cacheControl) {\n              if (this.minimal_mode) {\n                this.previousCacheItem = {\n                  key: cacheKey,\n                  entry: resolveValue,\n                  expiresAt: Date.now() + 1000,\n                }\n              } else {\n                await incrementalCache.set(key, resolveValue.value, {\n                  cacheControl: resolveValue.cacheControl,\n                  isRoutePPREnabled,\n                  isFallback,\n                })\n              }\n            }\n\n            return resolveValue\n          } catch (err) {\n            // When a path is erroring we automatically re-set the existing cache\n            // with new revalidate and expire times to prevent non-stop retrying.\n            if (cachedResponse?.cacheControl) {\n              const newRevalidate = Math.min(\n                Math.max(cachedResponse.cacheControl.revalidate || 3, 3),\n                30\n              )\n\n              const newExpire =\n                cachedResponse.cacheControl.expire === undefined\n                  ? undefined\n                  : Math.max(\n                      newRevalidate + 3,\n                      cachedResponse.cacheControl.expire\n                    )\n\n              await incrementalCache.set(key, cachedResponse.value, {\n                cacheControl: { revalidate: newRevalidate, expire: newExpire },\n                isRoutePPREnabled,\n                isFallback,\n              })\n            }\n\n            // While revalidating in the background we can't reject as we already\n            // resolved the cache entry so log the error here.\n            if (resolved) {\n              console.error(err)\n              return null\n            }\n\n            // We haven't resolved yet, so let's throw to indicate an error.\n            throw err\n          }\n        })()\n\n        // we need to ensure background revalidates are\n        // passed to waitUntil\n        if (waitUntil) {\n          waitUntil(prom)\n        }\n        return prom\n      }\n    )\n\n    return toResponseCacheEntry(response)\n  }\n}\n","/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n","\"use strict\";\n\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) return obj;\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") return { default: obj };\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n\n    if (cache && cache.has(obj)) return cache.get(obj);\n\n    var newObj = { __proto__: null };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n            else newObj[key] = obj[key];\n        }\n    }\n\n    newObj.default = obj;\n\n    if (cache) cache.set(obj, newObj);\n\n    return newObj;\n}\nexports._ = _interop_require_wildcard;\n","import type React from 'react'\nimport { Children, useEffect, useLayoutEffect, type JSX } from 'react'\n\ntype State = JSX.Element[] | undefined\n\nexport type SideEffectProps = {\n  reduceComponentsToState: <T extends {}>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n  children: React.ReactNode\n}\n\nconst isServer = typeof window === 'undefined'\nconst useClientOnlyLayoutEffect = isServer ? () => {} : useLayoutEffect\nconst useClientOnlyEffect = isServer ? () => {} : useEffect\n\nexport default function SideEffect(props: SideEffectProps) {\n  const { headManager, reduceComponentsToState } = props\n\n  function emitChange() {\n    if (headManager && headManager.mountedInstances) {\n      const headElements = Children.toArray(\n        Array.from(headManager.mountedInstances as Set<React.ReactNode>).filter(\n          Boolean\n        )\n      ) as React.ReactElement[]\n      headManager.updateHead(reduceComponentsToState(headElements, props))\n    }\n  }\n\n  if (isServer) {\n    headManager?.mountedInstances?.add(props.children)\n    emitChange()\n  }\n\n  useClientOnlyLayoutEffect(() => {\n    headManager?.mountedInstances?.add(props.children)\n    return () => {\n      headManager?.mountedInstances?.delete(props.children)\n    }\n  })\n\n  // We need to call `updateHead` method whenever the `SideEffect` is trigger in all\n  // life-cycles: mount, update, unmount. However, if there are multiple `SideEffect`s\n  // being rendered, we only trigger the method from the last one.\n  // This is ensured by keeping the last unflushed `updateHead` in the `_pendingUpdate`\n  // singleton in the layout effect pass, and actually trigger it in the effect pass.\n  useClientOnlyLayoutEffect(() => {\n    if (headManager) {\n      headManager._pendingUpdate = emitChange\n    }\n    return () => {\n      if (headManager) {\n        headManager._pendingUpdate = emitChange\n      }\n    }\n  })\n\n  useClientOnlyEffect(() => {\n    if (headManager && headManager._pendingUpdate) {\n      headManager._pendingUpdate()\n      headManager._pendingUpdate = null\n    }\n    return () => {\n      if (headManager && headManager._pendingUpdate) {\n        headManager._pendingUpdate()\n        headManager._pendingUpdate = null\n      }\n    }\n  })\n\n  return null\n}\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].AmpContext\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].HeadManagerContext\n","export function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n","let warnOnce = (_: string) => {}\nif (process.env.NODE_ENV !== 'production') {\n  const warnings = new Set<string>()\n  warnOnce = (msg: string) => {\n    if (!warnings.has(msg)) {\n      console.warn(msg)\n    }\n    warnings.add(msg)\n  }\n}\n\nexport { warnOnce }\n","'use client'\n\nimport React, { useContext, type JSX } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context.shared-runtime'\nimport { HeadManagerContext } from './head-manager-context.shared-runtime'\nimport { isInAmpMode } from './amp-mode'\nimport { warnOnce } from './utils/warn-once'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" key=\"charset\" />]\n  if (!inAmpMode) {\n    head.push(\n      <meta name=\"viewport\" content=\"width=device-width\" key=\"viewport\" />\n    )\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactElement | number | string\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      // @ts-expect-error @types/react does not remove fragments but this could also return ReactPortal[]\n      React.Children.toArray(child.props.children).reduce(\n        // @ts-expect-error @types/react does not remove fragments but this could also return ReactPortal[]\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactElement | number | string\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n    let hasKey = false\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      hasKey = true\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if ((metatype !== 'name' || !hasKey) && categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headChildrenElements List of children of <Head>\n */\nfunction reduceComponents<T extends {} & WithInAmpMode>(\n  headChildrenElements: Array<React.ReactElement<any>>,\n  props: T\n) {\n  const { inAmpMode } = props\n  return headChildrenElements\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(inAmpMode).reverse())\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (\n        process.env.NODE_ENV !== 'development' &&\n        process.env.__NEXT_OPTIMIZE_FONTS &&\n        !inAmpMode\n      ) {\n        if (\n          c.type === 'link' &&\n          c.props['href'] &&\n          // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n          ['https://fonts.googleapis.com/css', 'https://use.typekit.net/'].some(\n            (url) => c.props['href'].startsWith(url)\n          )\n        ) {\n          const newProps = { ...(c.props || {}) }\n          newProps['data-href'] = newProps['href']\n          newProps['href'] = undefined\n\n          // Add this attribute to make it easy to identify optimized tags\n          newProps['data-optimized-fonts'] = true\n\n          return React.cloneElement(c, newProps)\n        }\n      }\n      if (process.env.NODE_ENV === 'development') {\n        // omit JSON-LD structured data snippets from the warning\n        if (c.type === 'script' && c.props['type'] !== 'application/ld+json') {\n          const srcMessage = c.props['src']\n            ? `<script> tag with src=\"${c.props['src']}\"`\n            : `inline <script>`\n          warnOnce(\n            `Do not add <script> tags using next/head (see ${srcMessage}). Use next/script instead. \\nSee more info here: https://nextjs.org/docs/messages/no-script-tags-in-head-component`\n          )\n        } else if (c.type === 'link' && c.props['rel'] === 'stylesheet') {\n          warnOnce(\n            `Do not add stylesheets using next/head (see <link rel=\"stylesheet\"> tag with href=\"${c.props['href']}\"). Use Document instead. \\nSee more info here: https://nextjs.org/docs/messages/no-stylesheets-in-head-component`\n          )\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\nexport default Head\n","/* eslint-disable no-redeclare */\nimport type { IncomingMessage } from 'http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { BaseNextRequest } from './base-http'\nimport type { CloneableBody } from './body-streams'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport type { ServerComponentsHmrCache } from './response-cache'\nimport type { PagesDevOverlayBridgeType } from '../next-devtools/userspace/pages/pages-dev-overlay-setup'\n\n// FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta')\n\nexport type NextIncomingMessage = (BaseNextRequest | IncomingMessage) & {\n  [NEXT_REQUEST_META]?: RequestMeta\n}\n\nexport interface RequestMeta {\n  /**\n   * The query that was used to make the request.\n   */\n  initQuery?: ParsedUrlQuery\n\n  /**\n   * The URL that was used to make the request.\n   */\n  initURL?: string\n\n  /**\n   * The protocol that was used to make the request.\n   */\n  initProtocol?: string\n\n  /**\n   * The body that was read from the request. This is used to allow the body to\n   * be read multiple times.\n   */\n  clonableBody?: CloneableBody\n\n  /**\n   * True when the request matched a locale domain that was configured in the\n   * next.config.js file.\n   */\n  isLocaleDomain?: boolean\n\n  /**\n   * True when the request had locale information stripped from the pathname\n   * part of the URL.\n   */\n  didStripLocale?: boolean\n\n  /**\n   * If the request had it's URL rewritten, this is the URL it was rewritten to.\n   */\n  rewroteURL?: string\n\n  /**\n   * The cookies that were added by middleware and were added to the response.\n   */\n  middlewareCookie?: string[]\n\n  /**\n   * The match on the request for a given route.\n   */\n  match?: RouteMatch\n\n  /**\n   * The incremental cache to use for the request.\n   */\n  incrementalCache?: any\n\n  /**\n   * The server components HMR cache, only for dev.\n   */\n  serverComponentsHmrCache?: ServerComponentsHmrCache\n\n  /**\n   * Equals the segment path that was used for the prefetch RSC request.\n   */\n  segmentPrefetchRSCRequest?: string\n\n  /**\n   * True when the request is for the prefetch flight data.\n   */\n  isPrefetchRSCRequest?: true\n\n  /**\n   * True when the request is for the flight data.\n   */\n  isRSCRequest?: true\n\n  /**\n   * A search param set by the Next.js client when performing RSC requests.\n   * Because some CDNs do not vary their cache entries on our custom headers,\n   * this search param represents a hash of the header values. For any cached\n   * RSC request, we should verify that the hash matches before responding.\n   * Otherwise this can lead to cache poisoning.\n   * TODO: Consider not using custom request headers at all, and instead encode\n   * everything into the search param.\n   */\n  cacheBustingSearchParam?: string\n\n  /**\n   * True when the request is for the `/_next/data` route using the pages\n   * router.\n   */\n  isNextDataReq?: true\n\n  /**\n   * Postponed state to use for resumption. If present it's assumed that the\n   * request is for a page that has postponed (there are no guarantees that the\n   * page actually has postponed though as it would incur an additional cache\n   * lookup).\n   */\n  postponed?: string\n\n  /**\n   * If provided, this will be called when a response cache entry was generated\n   * or looked up in the cache.\n   */\n  onCacheEntry?: (\n    cacheEntry: any,\n    requestMeta: any\n  ) => Promise<boolean | void> | boolean | void\n\n  /**\n   * The previous revalidate before rendering 404 page for notFound: true\n   */\n  notFoundRevalidate?: number | false\n\n  /**\n   * In development, the original source page that returned a 404.\n   */\n  developmentNotFoundSourcePage?: string\n\n  /**\n   * The path we routed to and should be invoked\n   */\n  invokePath?: string\n\n  /**\n   * The specific page output we should be matching\n   */\n  invokeOutput?: string\n\n  /**\n   * The status we are invoking the request with from routing\n   */\n  invokeStatus?: number\n\n  /**\n   * The routing error we are invoking with\n   */\n  invokeError?: Error\n\n  /**\n   * The query parsed for the invocation\n   */\n  invokeQuery?: Record<string, undefined | string | string[]>\n\n  /**\n   * Whether the request is a middleware invocation\n   */\n  middlewareInvoke?: boolean\n\n  /**\n   * Whether the request should render the fallback shell or not.\n   */\n  renderFallbackShell?: boolean\n\n  /**\n   * Whether the request is for the custom error page.\n   */\n  customErrorRender?: true\n\n  /**\n   * Whether to bubble up the NoFallbackError to the caller when a 404 is\n   * returned.\n   */\n  bubbleNoFallback?: true\n\n  /**\n   * True when the request had locale information inferred from the default\n   * locale.\n   */\n  localeInferredFromDefault?: true\n\n  /**\n   * The locale that was inferred or explicitly set for the request.\n   */\n  locale?: string\n\n  /**\n   * The default locale that was inferred or explicitly set for the request.\n   */\n  defaultLocale?: string\n\n  /**\n   * The project dir the server is running in\n   */\n  projectDir?: string\n\n  /**\n   * The dist directory the server is currently using\n   */\n  distDir?: string\n\n  /**\n   * Whether we are generating the fallback version of the page in dev mode\n   */\n  isIsrFallback?: boolean\n\n  /**\n   * The query after resolving routes\n   */\n  query?: ParsedUrlQuery\n\n  /**\n   * The params after resolving routes\n   */\n  params?: ParsedUrlQuery\n\n  /**\n   * The AMP validator to use in development\n   */\n  ampValidator?: (html: string, pathname: string) => Promise<void>\n\n  /**\n   * ErrorOverlay component to use in development for pages router\n   */\n  PagesErrorDebug?: PagesDevOverlayBridgeType\n\n  /**\n   * Whether server is in minimal mode (this will be replaced with more\n   * specific flags in future)\n   */\n  minimalMode?: boolean\n}\n\n/**\n * Gets the request metadata. If no key is provided, the entire metadata object\n * is returned.\n *\n * @param req the request to get the metadata from\n * @param key the key to get from the metadata (optional)\n * @returns the value for the key or the entire metadata object\n */\nexport function getRequestMeta(\n  req: NextIncomingMessage,\n  key?: undefined\n): RequestMeta\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key: K\n): RequestMeta[K]\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key?: K\n): RequestMeta | RequestMeta[K] {\n  const meta = req[NEXT_REQUEST_META] || {}\n  return typeof key === 'string' ? meta[key] : meta\n}\n\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */\nexport function setRequestMeta(req: NextIncomingMessage, meta: RequestMeta) {\n  req[NEXT_REQUEST_META] = meta\n  return meta\n}\n\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */\nexport function addRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K,\n  value: RequestMeta[K]\n) {\n  const meta = getRequestMeta(request)\n  meta[key] = value\n  return setRequestMeta(request, meta)\n}\n\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */\nexport function removeRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K\n) {\n  const meta = getRequestMeta(request)\n  delete meta[key]\n  return setRequestMeta(request, meta)\n}\n\ntype NextQueryMetadata = {\n  /**\n   * The `_rsc` query parameter used for cache busting to ensure that the RSC\n   * requests do not get cached by the browser explicitly.\n   */\n  [NEXT_RSC_UNION_QUERY]?: string\n}\n\nexport type NextParsedUrlQuery = ParsedUrlQuery &\n  NextQueryMetadata & {\n    amp?: '1'\n  }\n\nexport interface NextUrlWithParsedQuery extends UrlWithParsedQuery {\n  query: NextParsedUrlQuery\n}\n","import React from 'react'\nimport Head from '../shared/lib/head'\nimport type { NextPageContext } from '../shared/lib/utils'\n\nconst statusCodes: { [code: number]: string } = {\n  400: 'Bad Request',\n  404: 'This page could not be found',\n  405: 'Method Not Allowed',\n  500: 'Internal Server Error',\n}\n\nexport type ErrorProps = {\n  statusCode: number\n  hostname?: string\n  title?: string\n  withDarkMode?: boolean\n}\n\nfunction _getInitialProps({\n  req,\n  res,\n  err,\n}: NextPageContext): Promise<ErrorProps> | ErrorProps {\n  const statusCode =\n    res && res.statusCode ? res.statusCode : err ? err.statusCode! : 404\n\n  let hostname\n\n  if (typeof window !== 'undefined') {\n    hostname = window.location.hostname\n  } else if (req) {\n    const { getRequestMeta } =\n      require('../server/request-meta') as typeof import('../server/request-meta')\n\n    const initUrl = getRequestMeta(req, 'initURL')\n    if (initUrl) {\n      const url = new URL(initUrl)\n      hostname = url.hostname\n    }\n  }\n\n  return { statusCode, hostname }\n}\n\nconst styles: Record<string, React.CSSProperties> = {\n  error: {\n    // https://github.com/sindresorhus/modern-normalize/blob/main/modern-normalize.css#L38-L52\n    fontFamily:\n      'system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"',\n    height: '100vh',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  desc: {\n    lineHeight: '48px',\n  },\n  h1: {\n    display: 'inline-block',\n    margin: '0 20px 0 0',\n    paddingRight: 23,\n    fontSize: 24,\n    fontWeight: 500,\n    verticalAlign: 'top',\n  },\n  h2: {\n    fontSize: 14,\n    fontWeight: 400,\n    lineHeight: '28px',\n  },\n  wrap: {\n    display: 'inline-block',\n  },\n}\n\n/**\n * `Error` component used for handling errors.\n */\nexport default class Error<P = {}> extends React.Component<P & ErrorProps> {\n  static displayName = 'ErrorPage'\n\n  static getInitialProps = _getInitialProps\n  static origGetInitialProps = _getInitialProps\n\n  render() {\n    const { statusCode, withDarkMode = true } = this.props\n    const title =\n      this.props.title ||\n      statusCodes[statusCode] ||\n      'An unexpected error has occurred'\n\n    return (\n      <div style={styles.error}>\n        <Head>\n          <title>\n            {statusCode\n              ? `${statusCode}: ${title}`\n              : 'Application error: a client-side exception has occurred'}\n          </title>\n        </Head>\n        <div style={styles.desc}>\n          <style\n            dangerouslySetInnerHTML={{\n              /* CSS minified from\n                body { margin: 0; color: #000; background: #fff; }\n                .next-error-h1 {\n                  border-right: 1px solid rgba(0, 0, 0, .3);\n                }\n\n                ${\n                  withDarkMode\n                    ? `@media (prefers-color-scheme: dark) {\n                  body { color: #fff; background: #000; }\n                  .next-error-h1 {\n                    border-right: 1px solid rgba(255, 255, 255, .3);\n                  }\n                }`\n                    : ''\n                }\n               */\n              __html: `body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}${\n                withDarkMode\n                  ? '@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}'\n                  : ''\n              }`,\n            }}\n          />\n\n          {statusCode ? (\n            <h1 className=\"next-error-h1\" style={styles.h1}>\n              {statusCode}\n            </h1>\n          ) : null}\n          <div style={styles.wrap}>\n            <h2 style={styles.h2}>\n              {this.props.title || statusCode ? (\n                title\n              ) : (\n                <>\n                  Application error: a client-side exception has occurred{' '}\n                  {Boolean(this.props.hostname) && (\n                    <>while loading {this.props.hostname}</>\n                  )}{' '}\n                  (see the browser console for more information)\n                </>\n              )}\n              .\n            </h2>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","module.exports = require('./dist/pages/_error')\n","import { CACHE_ONE_YEAR } from '../../lib/constants'\n\n/**\n * The revalidate option used internally for pages. A value of `false` means\n * that the page should not be revalidated. A number means that the page\n * should be revalidated after the given number of seconds (this also includes\n * `1` which means to revalidate after 1 second). A value of `0` is not a valid\n * value for this option.\n */\nexport type Revalidate = number | false\n\nexport interface CacheControl {\n  revalidate: Revalidate\n  expire: number | undefined\n}\n\nexport function getCacheControlHeader({\n  revalidate,\n  expire,\n}: CacheControl): string {\n  const swrHeader =\n    typeof revalidate === 'number' &&\n    expire !== undefined &&\n    revalidate < expire\n      ? `, stale-while-revalidate=${expire - revalidate}`\n      : ''\n\n  if (revalidate === 0) {\n    return 'private, no-cache, no-store, max-age=0, must-revalidate'\n  } else if (typeof revalidate === 'number') {\n    return `s-maxage=${revalidate}${swrHeader}`\n  }\n\n  return `s-maxage=${CACHE_ONE_YEAR}${swrHeader}`\n}\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: readonly string[]\n  defaultLocale?: string\n  domainLocales?: readonly DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: readonly string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","import { RedirectStatusCode } from '../client/components/redirect-status-code'\n\nexport const allowedStatusCodes = new Set([301, 302, 303, 307, 308])\n\nexport function getRedirectStatus(route: {\n  statusCode?: number\n  permanent?: boolean\n}): number {\n  return (\n    route.statusCode ||\n    (route.permanent\n      ? RedirectStatusCode.PermanentRedirect\n      : RedirectStatusCode.TemporaryRedirect)\n  )\n}\n\n// for redirects we restrict matching /_next and for all routes\n// we add an optional trailing slash at the end for easier\n// configuring between trailingSlash: true/false\nexport function modifyRouteRegex(regex: string, restrictedPaths?: string[]) {\n  if (restrictedPaths) {\n    regex = regex.replace(\n      /\\^/,\n      `^(?!${restrictedPaths\n        .map((path) => path.replace(/\\//g, '\\\\/'))\n        .join('|')})`\n    )\n  }\n  regex = regex.replace(/\\$$/, '(?:\\\\/)?$')\n  return regex\n}\n","/**\n * FNV-1a Hash implementation\n * @author Travis Webb (tjwebb) <me@traviswebb.com>\n *\n * Ported from https://github.com/tjwebb/fnv-plus/blob/master/index.js\n *\n * Simplified, optimized and add modified for 52 bit, which provides a larger hash space\n * and still making use of Javascript's 53-bit integer space.\n */\nexport const fnv1a52 = (str: string) => {\n  const len = str.length\n  let i = 0,\n    t0 = 0,\n    v0 = 0x2325,\n    t1 = 0,\n    v1 = 0x8422,\n    t2 = 0,\n    v2 = 0x9ce4,\n    t3 = 0,\n    v3 = 0xcbf2\n\n  while (i < len) {\n    v0 ^= str.charCodeAt(i++)\n    t0 = v0 * 435\n    t1 = v1 * 435\n    t2 = v2 * 435\n    t3 = v3 * 435\n    t2 += v0 << 8\n    t3 += v1 << 8\n    t1 += t0 >>> 16\n    v0 = t0 & 65535\n    t2 += t1 >>> 16\n    v1 = t1 & 65535\n    v3 = (t3 + (t2 >>> 16)) & 65535\n    v2 = t2 & 65535\n  }\n\n  return (\n    (v3 & 15) * 281474976710656 +\n    v2 * 4294967296 +\n    v1 * 65536 +\n    (v0 ^ (v3 >> 4))\n  )\n}\n\nexport const generateETag = (payload: string, weak = false) => {\n  const prefix = weak ? 'W/\"' : '\"'\n  return (\n    prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '\"'\n  )\n}\n","(()=>{\"use strict\";var e={695:e=>{\n/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\nvar r=/(?:^|,)\\s*?no-cache\\s*?(?:,|$)/;e.exports=fresh;function fresh(e,a){var t=e[\"if-modified-since\"];var s=e[\"if-none-match\"];if(!t&&!s){return false}var i=e[\"cache-control\"];if(i&&r.test(i)){return false}if(s&&s!==\"*\"){var f=a[\"etag\"];if(!f){return false}var n=true;var u=parseTokenList(s);for(var _=0;_<u.length;_++){var o=u[_];if(o===f||o===\"W/\"+f||\"W/\"+o===f){n=false;break}}if(n){return false}}if(t){var p=a[\"last-modified\"];var v=!p||!(parseHttpDate(p)<=parseHttpDate(t));if(v){return false}}return true}function parseHttpDate(e){var r=e&&Date.parse(e);return typeof r===\"number\"?r:NaN}function parseTokenList(e){var r=0;var a=[];var t=0;for(var s=0,i=e.length;s<i;s++){switch(e.charCodeAt(s)){case 32:if(t===r){t=r=s+1}break;case 44:a.push(e.substring(t,r));t=r=s+1;break;default:r=s+1;break}}a.push(e.substring(t,r));return a}}};var r={};function __nccwpck_require__(a){var t=r[a];if(t!==undefined){return t.exports}var s=r[a]={exports:{}};var i=true;try{e[a](s,s.exports,__nccwpck_require__);i=false}finally{if(i)delete r[a]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var a=__nccwpck_require__(695);module.exports=a})();","export const RSC_HEADER = 'RSC' as const\nexport const ACTION_HEADER = 'Next-Action' as const\n// TODO: Instead of sending the full router state, we only need to send the\n// segment path. Saves bytes. Then we could also use this field for segment\n// prefetches, which also need to specify a particular segment.\nexport const NEXT_ROUTER_STATE_TREE_HEADER = 'Next-Router-State-Tree' as const\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'Next-Router-Prefetch' as const\n// This contains the path to the segment being prefetched.\n// TODO: If we change Next-Router-State-Tree to be a segment path, we can use\n// that instead. Then Next-Router-Prefetch and Next-Router-Segment-Prefetch can\n// be merged into a single enum.\nexport const NEXT_ROUTER_SEGMENT_PREFETCH_HEADER =\n  'Next-Router-Segment-Prefetch' as const\nexport const NEXT_HMR_REFRESH_HEADER = 'Next-HMR-Refresh' as const\nexport const NEXT_HMR_REFRESH_HASH_COOKIE = '__next_hmr_refresh_hash__' as const\nexport const NEXT_URL = 'Next-Url' as const\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component' as const\n\nexport const FLIGHT_HEADERS = [\n  RSC_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n] as const\n\nexport const NEXT_RSC_UNION_QUERY = '_rsc' as const\n\nexport const NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time' as const\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed' as const\nexport const NEXT_REWRITTEN_PATH_HEADER = 'x-nextjs-rewritten-path' as const\nexport const NEXT_REWRITTEN_QUERY_HEADER = 'x-nextjs-rewritten-query' as const\nexport const NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender' as const\n","import type { IncomingMessage, ServerResponse } from 'http'\nimport type RenderResult from './render-result'\nimport type { CacheControl } from './lib/cache-control'\n\nimport { isResSent } from '../shared/lib/utils'\nimport { generateETag } from './lib/etag'\nimport fresh from 'next/dist/compiled/fresh'\nimport { getCacheControlHeader } from './lib/cache-control'\nimport { RSC_CONTENT_TYPE_HEADER } from '../client/components/app-router-headers'\n\nexport function sendEtagResponse(\n  req: IncomingMessage,\n  res: ServerResponse,\n  etag: string | undefined\n): boolean {\n  if (etag) {\n    /**\n     * The server generating a 304 response MUST generate any of the\n     * following header fields that would have been sent in a 200 (OK)\n     * response to the same request: Cache-Control, Content-Location, Date,\n     * ETag, Expires, and Vary. https://tools.ietf.org/html/rfc7232#section-4.1\n     */\n    res.setHeader('ETag', etag)\n  }\n\n  if (fresh(req.headers, { etag })) {\n    res.statusCode = 304\n    res.end()\n    return true\n  }\n\n  return false\n}\n\nexport async function sendRenderResult({\n  req,\n  res,\n  result,\n  type,\n  generateEtags,\n  poweredByHeader,\n  cacheControl,\n}: {\n  req: IncomingMessage\n  res: ServerResponse\n  result: RenderResult\n  type: 'html' | 'json' | 'rsc'\n  generateEtags: boolean\n  poweredByHeader: boolean\n  cacheControl: CacheControl | undefined\n}): Promise<void> {\n  if (isResSent(res)) {\n    return\n  }\n\n  if (poweredByHeader && type === 'html') {\n    res.setHeader('X-Powered-By', 'Next.js')\n  }\n\n  // If cache control is already set on the response we don't\n  // override it to allow users to customize it via next.config\n  if (cacheControl && !res.getHeader('Cache-Control')) {\n    res.setHeader('Cache-Control', getCacheControlHeader(cacheControl))\n  }\n\n  const payload = result.isDynamic ? null : result.toUnchunkedString()\n\n  if (generateEtags && payload !== null) {\n    const etag = generateETag(payload)\n    if (sendEtagResponse(req, res, etag)) {\n      return\n    }\n  }\n\n  if (!res.getHeader('Content-Type')) {\n    res.setHeader(\n      'Content-Type',\n      result.contentType\n        ? result.contentType\n        : type === 'rsc'\n          ? RSC_CONTENT_TYPE_HEADER\n          : type === 'json'\n            ? 'application/json'\n            : 'text/html; charset=utf-8'\n    )\n  }\n\n  if (payload) {\n    res.setHeader('Content-Length', Buffer.byteLength(payload))\n  }\n\n  if (req.method === 'HEAD') {\n    res.end(null)\n    return\n  }\n\n  if (payload !== null) {\n    res.end(payload)\n    return\n  }\n\n  // Pipe the render result to the response after we get a writer for it.\n  await result.pipeToNodeResponse(res)\n}\n","// escape delimiters used by path-to-regexp\nexport default function escapePathDelimiters(\n  segment: string,\n  escapeEncoded?: boolean\n): string {\n  return segment.replace(\n    new RegExp(`([/#?]${escapeEncoded ? '|%(2f|23|3f|5c)' : ''})`, 'gi'),\n    (char: string) => encodeURIComponent(char)\n  )\n}\n","import escapePathDelimiters from '../../../shared/lib/router/utils/escape-path-delimiters'\nimport { DecodeError } from '../../../shared/lib/utils'\n\n/**\n * We only encode path delimiters for path segments from\n * getStaticPaths so we need to attempt decoding the URL\n * to match against and only escape the path delimiters\n * this allows non-ascii values to be handled e.g.\n * Japanese characters.\n * */\nfunction decodePathParams(pathname: string): string {\n  // TODO: investigate adding this handling for non-SSG\n  // pages so non-ascii names also work there.\n  return pathname\n    .split('/')\n    .map((seg) => {\n      try {\n        seg = escapePathDelimiters(decodeURIComponent(seg), true)\n      } catch (_) {\n        // An improperly encoded URL was provided\n        throw new DecodeError('Failed to decode path param(s).')\n      }\n      return seg\n    })\n    .join('/')\n}\n\nexport { decodePathParams }\n","// This regex contains the bots that we need to do a blocking render for and can't safely stream the response\n// due to how they parse the DOM. For example, they might explicitly check for metadata in the `head` tag, so we can't stream metadata tags after the `head` was sent.\nexport const HTML_LIMITED_BOT_UA_RE =\n  /Mediapartners-Google|Chrome-Lighthouse|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti/i\n","import { HTML_LIMITED_BOT_UA_RE } from './html-bots'\n\n// Bot crawler that will spin up a headless browser and execute JS.\n// By default, only googlebots are considered as DOM bots. Blow is where the regex is computed from:\n// x-ref: https://developers.google.com/search/docs/crawling-indexing/google-common-crawlers\nconst HEADLESS_BROWSER_BOT_UA_RE = /google/i\n\nexport const HTML_LIMITED_BOT_UA_RE_STRING = HTML_LIMITED_BOT_UA_RE.source\n\nexport { HTML_LIMITED_BOT_UA_RE }\n\nfunction isDomBotUA(userAgent: string) {\n  return HEADLESS_BROWSER_BOT_UA_RE.test(userAgent)\n}\n\nfunction isHtmlLimitedBotUA(userAgent: string) {\n  return HTML_LIMITED_BOT_UA_RE.test(userAgent)\n}\n\nexport function isBot(userAgent: string): boolean {\n  return isDomBotUA(userAgent) || isHtmlLimitedBotUA(userAgent)\n}\n\nexport function getBotType(userAgent: string): 'dom' | 'html' | undefined {\n  if (isDomBotUA(userAgent)) {\n    return 'dom'\n  }\n  if (isHtmlLimitedBotUA(userAgent)) {\n    return 'html'\n  }\n  return undefined\n}\n","import type { IncomingMessage, ServerResponse } from 'node:http'\nimport type { ParsedUrlQuery } from 'node:querystring'\nimport { PagesRouteModule } from '../../server/route-modules/pages/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { BaseServerSpan } from '../../server/lib/trace/constants'\nimport { getTracer, SpanKind, type Span } from '../../server/lib/trace/tracer'\nimport { formatUrl } from '../../shared/lib/router/utils/format-url'\nimport { addRequestMeta, getRequestMeta } from '../../server/request-meta'\nimport { interopDefault } from '../../server/app-render/interop-default'\nimport { getRevalidateReason } from '../../server/instrumentation/utils'\nimport { normalizeDataPath } from '../../shared/lib/page-path/normalize-data-path'\nimport {\n  CachedRouteKind,\n  type CachedPageValue,\n  type CachedRedirectValue,\n  type ResponseCacheEntry,\n  type ResponseGenerator,\n} from '../../server/response-cache'\n\nimport { hoist } from './helpers'\n\n// Import the app and document modules.\nimport * as document from 'VAR_MODULE_DOCUMENT'\nimport * as app from 'VAR_MODULE_APP'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\nimport {\n  getCacheControlHeader,\n  type CacheControl,\n} from '../../server/lib/cache-control'\nimport { normalizeRepeatedSlashes } from '../../shared/lib/utils'\nimport { getRedirectStatus } from '../../lib/redirect-status'\nimport { CACHE_ONE_YEAR } from '../../lib/constants'\nimport { sendRenderResult } from '../../server/send-payload'\nimport RenderResult from '../../server/render-result'\nimport { decodePathParams } from '../../server/lib/router-utils/decode-path-params'\nimport { toResponseCacheEntry } from '../../server/response-cache/utils'\nimport { NoFallbackError } from '../../shared/lib/no-fallback-error.external'\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code'\nimport { isBot } from '../../shared/lib/router/utils/is-bot'\nimport { addPathPrefix } from '../../shared/lib/router/utils/add-path-prefix'\nimport { removeTrailingSlash } from '../../shared/lib/router/utils/remove-trailing-slash'\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix'\nimport { normalizeLocalePath } from '../../shared/lib/i18n/normalize-locale-path'\n\n// Re-export the component (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export methods.\nexport const getStaticProps = hoist(userland, 'getStaticProps')\nexport const getStaticPaths = hoist(userland, 'getStaticPaths')\nexport const getServerSideProps = hoist(userland, 'getServerSideProps')\nexport const config = hoist(userland, 'config')\nexport const reportWebVitals = hoist(userland, 'reportWebVitals')\n\n// Re-export legacy methods.\nexport const unstable_getStaticProps = hoist(\n  userland,\n  'unstable_getStaticProps'\n)\nexport const unstable_getStaticPaths = hoist(\n  userland,\n  'unstable_getStaticPaths'\n)\nexport const unstable_getStaticParams = hoist(\n  userland,\n  'unstable_getStaticParams'\n)\nexport const unstable_getServerProps = hoist(\n  userland,\n  'unstable_getServerProps'\n)\nexport const unstable_getServerSideProps = hoist(\n  userland,\n  'unstable_getServerSideProps'\n)\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesRouteModule({\n  definition: {\n    kind: RouteKind.PAGES,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n  projectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n  components: {\n    // default export might not exist when optimized for data only\n    App: app.default,\n    Document: document.default,\n  },\n  userland,\n})\n\nexport async function handler(\n  req: IncomingMessage,\n  res: ServerResponse,\n  ctx: {\n    waitUntil: (prom: Promise<void>) => void\n  }\n): Promise<void> {\n  let srcPage = 'VAR_DEFINITION_PAGE'\n\n  // turbopack doesn't normalize `/index` in the page name\n  // so we need to to process dynamic routes properly\n  // TODO: fix turbopack providing differing value from webpack\n  if (process.env.TURBOPACK) {\n    srcPage = srcPage.replace(/\\/index$/, '') || '/'\n  } else if (srcPage === '/index') {\n    // we always normalize /index specifically\n    srcPage = '/'\n  }\n  const multiZoneDraftMode = process.env\n    .__NEXT_MULTI_ZONE_DRAFT_MODE as any as boolean\n\n  const prepareResult = await routeModule.prepare(req, res, {\n    srcPage,\n    multiZoneDraftMode,\n  })\n\n  if (!prepareResult) {\n    res.statusCode = 400\n    res.end('Bad Request')\n    ctx.waitUntil?.(Promise.resolve())\n    return\n  }\n\n  const {\n    buildId,\n    query,\n    params,\n    parsedUrl,\n    originalQuery,\n    originalPathname,\n    buildManifest,\n    nextFontManifest,\n    serverFilesManifest,\n    reactLoadableManifest,\n    prerenderManifest,\n    isDraftMode,\n    isOnDemandRevalidate,\n    revalidateOnlyGenerated,\n    locale,\n    locales,\n    defaultLocale,\n    routerServerContext,\n    nextConfig,\n  } = prepareResult\n\n  const isExperimentalCompile =\n    serverFilesManifest?.config?.experimental?.isExperimentalCompile\n\n  const hasServerProps = Boolean(getServerSideProps)\n  const hasStaticProps = Boolean(getStaticProps)\n  const hasStaticPaths = Boolean(getStaticPaths)\n  const hasGetInitialProps = Boolean(\n    (userland.default || userland).getInitialProps\n  )\n  const isAmp = query.amp && config.amp\n  let cacheKey: null | string = null\n  let isIsrFallback = Boolean(getRequestMeta(req, 'isIsrFallback'))\n  let isNextDataRequest =\n    prepareResult.isNextDataRequest && (hasStaticProps || hasServerProps)\n\n  const is404Page = srcPage === '/404'\n  const is500Page = srcPage === '/500'\n  const isErrorPage = srcPage === '/_error'\n  const pathname = parsedUrl.pathname || '/'\n\n  // TODO: rework this to not be necessary as a middleware\n  // rewrite should not need to pass this context like this\n  // maybe we rely on rewrite header instead\n  let resolvedPathname = getRequestMeta(req, 'rewroteURL')\n\n  if (resolvedPathname) {\n    if (pathHasPrefix(resolvedPathname, '/_next/data/')) {\n      resolvedPathname = normalizeDataPath(resolvedPathname)\n    }\n\n    if (locale) {\n      resolvedPathname = normalizeLocalePath(\n        resolvedPathname,\n        nextConfig.i18n?.locales || []\n      ).pathname\n    }\n  } else {\n    resolvedPathname = pathname\n  }\n\n  if (resolvedPathname === '/index') {\n    resolvedPathname = '/'\n  }\n\n  if (!routeModule.isDev && !isDraftMode && hasStaticProps) {\n    cacheKey = `${locale ? `/${locale}` : ''}${\n      (srcPage === '/' || resolvedPathname === '/') && locale\n        ? ''\n        : resolvedPathname\n    }${isAmp ? '.amp' : ''}`\n\n    if (is404Page || is500Page || isErrorPage) {\n      cacheKey = `${locale ? `/${locale}` : ''}${srcPage}${isAmp ? '.amp' : ''}`\n    }\n\n    cacheKey = decodePathParams(cacheKey)\n\n    // ensure /index and / is normalized to one key\n    cacheKey = cacheKey === '/index' ? '/' : cacheKey\n  }\n\n  if (hasStaticPaths && !isDraftMode) {\n    const decodedPathname = removeTrailingSlash(\n      decodePathParams(\n        locale\n          ? addPathPrefix(resolvedPathname, `/${locale}`)\n          : resolvedPathname\n      )\n    )\n    const isPrerendered =\n      Boolean(prerenderManifest.routes[decodedPathname]) ||\n      prerenderManifest.notFoundRoutes.includes(decodedPathname)\n\n    const prerenderInfo = prerenderManifest.dynamicRoutes[srcPage]\n\n    if (prerenderInfo) {\n      if (prerenderInfo.fallback === false && !isPrerendered) {\n        throw new NoFallbackError()\n      }\n\n      if (\n        typeof prerenderInfo.fallback === 'string' &&\n        !isPrerendered &&\n        !isNextDataRequest\n      ) {\n        isIsrFallback = true\n      }\n    }\n  }\n\n  // When serving a bot request, we want to serve a blocking render and not\n  // the prerendered page. This ensures that the correct content is served\n  // to the bot in the head.\n  if (\n    (isIsrFallback && isBot(req.headers['user-agent'] || '')) ||\n    getRequestMeta(req, 'minimalMode')\n  ) {\n    isIsrFallback = false\n  }\n\n  const tracer = getTracer()\n  const activeSpan = tracer.getActiveScopeSpan()\n\n  try {\n    const method = req.method || 'GET'\n\n    const resolvedUrl = formatUrl({\n      pathname: parsedUrl.pathname,\n      // make sure to only add query values from original URL\n      query: hasStaticProps ? {} : originalQuery,\n    })\n\n    const publicRuntimeConfig: Record<string, string> =\n      routerServerContext?.publicRuntimeConfig || nextConfig.publicRuntimeConfig\n\n    const handleResponse = async (span?: Span) => {\n      const responseGenerator: ResponseGenerator = async ({\n        previousCacheEntry,\n      }) => {\n        const doRender = async () => {\n          try {\n            return await routeModule\n              .render(req, res, {\n                query:\n                  hasStaticProps && !isExperimentalCompile\n                    ? ({\n                        ...params,\n                        ...(isAmp\n                          ? {\n                              amp: query.amp,\n                            }\n                          : {}),\n                      } as ParsedUrlQuery)\n                    : {\n                        ...query,\n                        ...params,\n                      },\n                params,\n                page: srcPage,\n                renderContext: {\n                  isDraftMode,\n                  isFallback: isIsrFallback,\n                  developmentNotFoundSourcePage: getRequestMeta(\n                    req,\n                    'developmentNotFoundSourcePage'\n                  ),\n                },\n                sharedContext: {\n                  buildId,\n                  customServer:\n                    Boolean(routerServerContext?.isCustomServer) || undefined,\n                  deploymentId: process.env.NEXT_DEPLOYMENT_ID,\n                },\n                renderOpts: {\n                  params,\n                  routeModule,\n                  page: srcPage,\n                  pageConfig: config || {},\n                  Component: interopDefault(userland),\n                  ComponentMod: userland,\n                  getStaticProps,\n                  getStaticPaths,\n                  getServerSideProps,\n                  supportsDynamicResponse: !hasStaticProps,\n                  buildManifest,\n                  nextFontManifest,\n                  reactLoadableManifest,\n\n                  assetPrefix: nextConfig.assetPrefix,\n                  strictNextHead: Boolean(\n                    nextConfig.experimental.strictNextHead\n                  ),\n                  previewProps: prerenderManifest.preview,\n                  images: nextConfig.images as any,\n                  nextConfigOutput: nextConfig.output,\n                  optimizeCss: Boolean(nextConfig.experimental.optimizeCss),\n                  nextScriptWorkers: Boolean(\n                    nextConfig.experimental.nextScriptWorkers\n                  ),\n                  domainLocales: nextConfig.i18n?.domains,\n                  crossOrigin: nextConfig.crossOrigin,\n\n                  multiZoneDraftMode,\n                  basePath: nextConfig.basePath,\n                  canonicalBase: nextConfig.amp.canonicalBase || '',\n                  ampOptimizerConfig: nextConfig.experimental.amp?.optimizer,\n                  disableOptimizedLoading:\n                    nextConfig.experimental.disableOptimizedLoading,\n                  largePageDataBytes:\n                    nextConfig.experimental.largePageDataBytes,\n                  // Only the `publicRuntimeConfig` key is exposed to the client side\n                  // It'll be rendered as part of __NEXT_DATA__ on the client side\n                  runtimeConfig:\n                    Object.keys(publicRuntimeConfig).length > 0\n                      ? publicRuntimeConfig\n                      : undefined,\n\n                  isExperimentalCompile,\n\n                  experimental: {\n                    clientTraceMetadata:\n                      nextConfig.experimental.clientTraceMetadata ||\n                      ([] as any),\n                  },\n\n                  locale,\n                  locales,\n                  defaultLocale,\n                  setIsrStatus: routerServerContext?.setIsrStatus,\n\n                  isNextDataRequest:\n                    isNextDataRequest && (hasServerProps || hasStaticProps),\n\n                  resolvedUrl,\n                  // For getServerSideProps and getInitialProps we need to ensure we use the original URL\n                  // and not the resolved URL to prevent a hydration mismatch on\n                  // asPath\n                  resolvedAsPath:\n                    hasServerProps || hasGetInitialProps\n                      ? formatUrl({\n                          // we use the original URL pathname less the _next/data prefix if\n                          // present\n                          pathname: isNextDataRequest\n                            ? normalizeDataPath(originalPathname)\n                            : originalPathname,\n                          query: originalQuery,\n                        })\n                      : resolvedUrl,\n\n                  isOnDemandRevalidate,\n\n                  ErrorDebug: getRequestMeta(req, 'PagesErrorDebug'),\n                  err: getRequestMeta(req, 'invokeError'),\n                  dev: routeModule.isDev,\n\n                  // needed for experimental.optimizeCss feature\n                  distDir: `${routeModule.projectDir}/${routeModule.distDir}`,\n\n                  ampSkipValidation:\n                    nextConfig.experimental.amp?.skipValidation,\n                  ampValidator: getRequestMeta(req, 'ampValidator'),\n                },\n              })\n              .then((renderResult): ResponseCacheEntry => {\n                const { metadata } = renderResult\n\n                let cacheControl: CacheControl | undefined =\n                  metadata.cacheControl\n\n                if ('isNotFound' in metadata && metadata.isNotFound) {\n                  return {\n                    value: null,\n                    cacheControl,\n                  } satisfies ResponseCacheEntry\n                }\n\n                // Handle `isRedirect`.\n                if (metadata.isRedirect) {\n                  return {\n                    value: {\n                      kind: CachedRouteKind.REDIRECT,\n                      props: metadata.pageData ?? metadata.flightData,\n                    } satisfies CachedRedirectValue,\n                    cacheControl,\n                  } satisfies ResponseCacheEntry\n                }\n\n                return {\n                  value: {\n                    kind: CachedRouteKind.PAGES,\n                    html: renderResult,\n                    pageData: renderResult.metadata.pageData,\n                    headers: renderResult.metadata.headers,\n                    status: renderResult.metadata.statusCode,\n                  },\n                  cacheControl,\n                }\n              })\n              .finally(() => {\n                if (!span) return\n\n                span.setAttributes({\n                  'http.status_code': res.statusCode,\n                  'next.rsc': false,\n                })\n\n                const rootSpanAttributes = tracer.getRootSpanAttributes()\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                  return\n                }\n\n                if (\n                  rootSpanAttributes.get('next.span_type') !==\n                  BaseServerSpan.handleRequest\n                ) {\n                  console.warn(\n                    `Unexpected root span type '${rootSpanAttributes.get(\n                      'next.span_type'\n                    )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n                  )\n                  return\n                }\n\n                const route = rootSpanAttributes.get('next.route')\n                if (route) {\n                  const name = `${method} ${route}`\n\n                  span.setAttributes({\n                    'next.route': route,\n                    'http.route': route,\n                    'next.span_name': name,\n                  })\n                  span.updateName(name)\n                } else {\n                  span.updateName(`${method} ${req.url}`)\n                }\n              })\n          } catch (err: unknown) {\n            // if this is a background revalidate we need to report\n            // the request error here as it won't be bubbled\n            if (previousCacheEntry?.isStale) {\n              await routeModule.onRequestError(\n                req,\n                err,\n                {\n                  routerKind: 'Pages Router',\n                  routePath: srcPage,\n                  routeType: 'render',\n                  revalidateReason: getRevalidateReason({\n                    isRevalidate: hasStaticProps,\n                    isOnDemandRevalidate,\n                  }),\n                },\n                routerServerContext\n              )\n            }\n            throw err\n          }\n        }\n\n        // if we've already generated this page we no longer\n        // serve the fallback\n        if (previousCacheEntry) {\n          isIsrFallback = false\n        }\n\n        if (isIsrFallback) {\n          const fallbackResponse = await routeModule.getResponseCache(req).get(\n            routeModule.isDev\n              ? null\n              : locale\n                ? `/${locale}${srcPage}`\n                : srcPage,\n            async ({\n              previousCacheEntry: previousFallbackCacheEntry = null,\n            }) => {\n              if (!routeModule.isDev) {\n                return toResponseCacheEntry(previousFallbackCacheEntry)\n              }\n              return doRender()\n            },\n            {\n              routeKind: RouteKind.PAGES,\n              isFallback: true,\n              isRoutePPREnabled: false,\n              isOnDemandRevalidate: false,\n              incrementalCache: await routeModule.getIncrementalCache(\n                req,\n                nextConfig,\n                prerenderManifest\n              ),\n              waitUntil: ctx.waitUntil,\n            }\n          )\n          if (fallbackResponse) {\n            // Remove the cache control from the response to prevent it from being\n            // used in the surrounding cache.\n            delete fallbackResponse.cacheControl\n            return fallbackResponse\n          }\n        }\n\n        if (\n          !getRequestMeta(req, 'minimalMode') &&\n          isOnDemandRevalidate &&\n          revalidateOnlyGenerated &&\n          !previousCacheEntry\n        ) {\n          res.statusCode = 404\n          // on-demand revalidate always sets this header\n          res.setHeader('x-nextjs-cache', 'REVALIDATED')\n          res.end('This page could not be found')\n          return null\n        }\n\n        if (\n          isIsrFallback &&\n          previousCacheEntry?.value?.kind === CachedRouteKind.PAGES\n        ) {\n          return {\n            value: {\n              kind: CachedRouteKind.PAGES,\n              html: new RenderResult(\n                Buffer.from(previousCacheEntry.value.html),\n                {\n                  contentType: 'text/html;utf-8',\n                  metadata: {\n                    statusCode: previousCacheEntry.value.status,\n                    headers: previousCacheEntry.value.headers,\n                  },\n                }\n              ),\n              pageData: {},\n              status: previousCacheEntry.value.status,\n              headers: previousCacheEntry.value.headers,\n            } satisfies CachedPageValue,\n            cacheControl: { revalidate: 0, expire: undefined },\n          } satisfies ResponseCacheEntry\n        }\n        return doRender()\n      }\n\n      const result = await routeModule.handleResponse({\n        cacheKey,\n        req,\n        nextConfig,\n        routeKind: RouteKind.PAGES,\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated,\n        waitUntil: ctx.waitUntil,\n        responseGenerator: responseGenerator,\n        prerenderManifest,\n      })\n\n      // response is finished is no cache entry\n      if (!result) {\n        return\n      }\n\n      if (hasStaticProps && !getRequestMeta(req, 'minimalMode')) {\n        res.setHeader(\n          'x-nextjs-cache',\n          isOnDemandRevalidate\n            ? 'REVALIDATED'\n            : result.isMiss\n              ? 'MISS'\n              : result.isStale\n                ? 'STALE'\n                : 'HIT'\n        )\n      }\n\n      let cacheControl: CacheControl | undefined\n\n      if (!hasStaticProps || isIsrFallback) {\n        if (!res.getHeader('Cache-Control')) {\n          cacheControl = { revalidate: 0, expire: undefined }\n        }\n      } else if (is404Page) {\n        const notFoundRevalidate = getRequestMeta(req, 'notFoundRevalidate')\n\n        cacheControl = {\n          revalidate:\n            typeof notFoundRevalidate === 'undefined' ? 0 : notFoundRevalidate,\n          expire: undefined,\n        }\n      } else if (is500Page) {\n        cacheControl = { revalidate: 0, expire: undefined }\n      } else if (result.cacheControl) {\n        // If the cache entry has a cache control with a revalidate value that's\n        // a number, use it.\n        if (typeof result.cacheControl.revalidate === 'number') {\n          if (result.cacheControl.revalidate < 1) {\n            throw new Error(\n              `Invalid revalidate configuration provided: ${result.cacheControl.revalidate} < 1`\n            )\n          }\n\n          cacheControl = {\n            revalidate: result.cacheControl.revalidate,\n            expire: result.cacheControl?.expire ?? nextConfig.expireTime,\n          }\n        } else {\n          // revalidate: false\n          cacheControl = {\n            revalidate: CACHE_ONE_YEAR,\n            expire: undefined,\n          }\n        }\n      }\n\n      // If cache control is already set on the response we don't\n      // override it to allow users to customize it via next.config\n      if (cacheControl && !res.getHeader('Cache-Control')) {\n        res.setHeader('Cache-Control', getCacheControlHeader(cacheControl))\n      }\n\n      // notFound: true case\n      if (!result.value) {\n        // add revalidate metadata before rendering 404 page\n        // so that we can use this as source of truth for the\n        // cache-control header instead of what the 404 page returns\n        // for the revalidate value\n        addRequestMeta(\n          req,\n          'notFoundRevalidate',\n          result.cacheControl?.revalidate\n        )\n\n        res.statusCode = 404\n\n        if (isNextDataRequest) {\n          res.end('{\"notFound\":true}')\n          return\n        }\n        // TODO: should route-module itself handle rendering the 404\n        if (routerServerContext?.render404) {\n          await routerServerContext.render404(req, res, parsedUrl, false)\n        } else {\n          res.end('This page could not be found')\n        }\n        return\n      }\n\n      if (result.value.kind === CachedRouteKind.REDIRECT) {\n        if (isNextDataRequest) {\n          res.setHeader('content-type', 'application/json')\n          res.end(JSON.stringify(result.value.props))\n          return\n        } else {\n          const handleRedirect = (pageData: any) => {\n            const redirect = {\n              destination: pageData.pageProps.__N_REDIRECT,\n              statusCode: pageData.pageProps.__N_REDIRECT_STATUS,\n              basePath: pageData.pageProps.__N_REDIRECT_BASE_PATH,\n            }\n            const statusCode = getRedirectStatus(redirect)\n            const { basePath } = nextConfig\n\n            if (\n              basePath &&\n              redirect.basePath !== false &&\n              redirect.destination.startsWith('/')\n            ) {\n              redirect.destination = `${basePath}${redirect.destination}`\n            }\n\n            if (redirect.destination.startsWith('/')) {\n              redirect.destination = normalizeRepeatedSlashes(\n                redirect.destination\n              )\n            }\n\n            res.statusCode = statusCode\n            res.setHeader('Location', redirect.destination)\n            if (statusCode === RedirectStatusCode.PermanentRedirect) {\n              res.setHeader('Refresh', `0;url=${redirect.destination}`)\n            }\n            res.end(redirect.destination)\n          }\n          await handleRedirect(result.value.props)\n          return null\n        }\n      }\n\n      if (result.value.kind !== CachedRouteKind.PAGES) {\n        throw new Error(\n          `Invariant: received non-pages cache entry in pages handler`\n        )\n      }\n\n      // In dev, we should not cache pages for any reason.\n      if (routeModule.isDev) {\n        res.setHeader('Cache-Control', 'no-store, must-revalidate')\n      }\n\n      // Draft mode should never be cached\n      if (isDraftMode) {\n        res.setHeader(\n          'Cache-Control',\n          'private, no-cache, no-store, max-age=0, must-revalidate'\n        )\n      }\n\n      // when invoking _error before pages/500 we don't actually\n      // send the _error response\n      if (\n        getRequestMeta(req, 'customErrorRender') ||\n        (isErrorPage &&\n          getRequestMeta(req, 'minimalMode') &&\n          res.statusCode === 500)\n      ) {\n        return null\n      }\n\n      await sendRenderResult({\n        req,\n        res,\n        // If we are rendering the error page it's not a data request\n        // anymore\n        result:\n          isNextDataRequest && !isErrorPage && !is500Page\n            ? new RenderResult(\n                Buffer.from(JSON.stringify(result.value.pageData)),\n                {\n                  contentType: 'application/json',\n                  metadata: result.value.html.metadata,\n                }\n              )\n            : result.value.html,\n        generateEtags: nextConfig.generateEtags,\n        poweredByHeader: nextConfig.poweredByHeader,\n        cacheControl: routeModule.isDev ? undefined : cacheControl,\n        type: isNextDataRequest ? 'json' : 'html',\n      })\n    }\n\n    // TODO: activeSpan code path is for when wrapped by\n    // next-server can be removed when this is no longer used\n    if (activeSpan) {\n      await handleResponse()\n    } else {\n      await tracer.withPropagatedContext(req.headers, () =>\n        tracer.trace(\n          BaseServerSpan.handleRequest,\n          {\n            spanName: `${method} ${req.url}`,\n            kind: SpanKind.SERVER,\n            attributes: {\n              'http.method': method,\n              'http.target': req.url,\n            },\n          },\n          handleResponse\n        )\n      )\n    }\n  } catch (err) {\n    await routeModule.onRequestError(\n      req,\n      err,\n      {\n        routerKind: 'Pages Router',\n        routePath: srcPage,\n        routeType: 'render',\n        revalidateReason: getRevalidateReason({\n          isRevalidate: hasStaticProps,\n          isOnDemandRevalidate,\n        }),\n      },\n      routerServerContext\n    )\n\n    // rethrow so that we can handle serving error page\n    throw err\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK","RouteKind","BaseServerSpan","LoadComponentsSpan","NextServerSpan","NextNodeServerSpan","StartServerSpan","RenderSpan","AppRenderSpan","RouterSpan","NodeSpan","AppRouteRouteHandlersSpan","ResolveMetadataSpan","MiddlewareSpan","NextVanillaSpanAllowlist","LogSpanAllowList","isThenable","promise","then","api","err","context","propagation","trace","SpanStatusCode","SpanKind","ROOT_CONTEXT","BubbledError","Error","constructor","bubble","result","isBubbledError","error","closeSpanWithError","span","setAttribute","recordException","setStatus","code","ERROR","message","end","rootSpanAttributesStore","Map","rootSpanIdKey","createContextKey","lastSpanId","getSpanId","clientTraceDataSetter","set","carrier","key","value","push","NextTracerImpl","getTracerInstance","getTracer","getContext","getTracePropagationData","activeContext","active","entries","inject","getActiveScopeSpan","getSpan","withPropagatedContext","fn","getter","getSpanContext","remoteContext","extract","with","args","type","fnOrOptions","fnOrEmpty","options","spanName","includes","NEXT_OTEL_VERBOSE","hideSpan","spanContext","parentSpan","isRootSpan","isRemote","spanId","attributes","setValue","startActiveSpan","startTime","globalThis","performance","now","undefined","onCleanup","delete","NEXT_OTEL_PERFORMANCE_PREFIX","measure","split","pop","replace","match","toLowerCase","start","Object","length","res","catch","finally","wrap","tracer","name","optionsObj","apply","arguments","lastArgId","cb","scopeBoundCb","bind","_span","done","startSpan","setSpan","getRootSpanAttributes","getValue","get","setRootSpanAttribute","searchParamsToUrlQuery","searchParams","query","existing","Array","isArray","stringifyUrlQueryParam","param","isNaN","String","urlQueryToSearchParams","URLSearchParams","item","append","assign","target","searchParamsList","keys","querystring","slashedProtocols","formatUrl","urlObj","auth","hostname","protocol","pathname","hash","host","encodeURIComponent","indexOf","port","search","endsWith","slashes","test","urlObjectKeys","formatWithValidation","url","forEach","console","warn","NEXT_REQUEST_META","Symbol","for","getRequestMeta","req","meta","setRequestMeta","addRequestMeta","request","removeRequestMeta","interopDefault","mod","default","getRevalidateReason","params","isOnDemandRevalidate","isRevalidate","normalizeDataPath","DetachedPromise","resolve","reject","Promise","rej","Batcher","cacheKeyFn","schedulerFn","pending","create","batch","cacheKey","scheduleOnNextTick","setTimeout","nextTick","scheduleImmediate","setImmediate","atLeastOneTask","waitAtLeastOneReactRenderTask","r","CachedRouteKind","IncrementalCacheKind","ENCODED_TAGS","OPENING","HTML","Uint8Array","BODY","CLOSED","HEAD","BODY_AND_HTML","META","ICON_MARK","indexOfUint8Array","a","b","i","completeMatch","j","isEquivalentUint8Arrays","removeFromUint8Array","tagIndex","subarray","removed","slice","MISSING_ROOT_TAGS_ERROR","voidCatch","encoder","TextEncoder","chainStreams","streams","readable","writable","TransformStream","pipeTo","preventClose","nextStream","lastStream","streamFromString","str","ReadableStream","controller","enqueue","encode","close","streamFromBuffer","chunk","streamToBuffer","stream","reader","getReader","chunks","read","Buffer","concat","streamToString","signal","decoder","TextDecoder","fatal","string","aborted","decode","createBufferedTransformStream","bufferedChunks","bufferByteLength","flush","detached","copiedBytes","bufferedChunk","byteLength","transform","renderToInitialFizzStream","ReactDOMServer","element","streamOptions","renderToReadableStream","createMetadataTransformStream","insert","chunkIndex","isMarkRemoved","iconMarkIndex","closedHeadIndex","iconMarkLength","replaced","insertion","encodedInsertion","insertionLength","createHeadInsertionTransformStream","inserted","hasBytes","index","insertedHeadContent","createDeferredSuffixStream","suffix","flushed","createMergedTransformStream","pull","donePulling","startPulling","CLOSE_TAG","createMoveSuffixStream","foundSuffix","before","after","createStripDocumentClosingTagsTransform","createRootLayoutValidatorStream","foundHtml","foundBody","missingTags","map","c","join","chainTransformers","transformers","transformer","pipeThrough","continueFizzStream","renderStream","inlinedDataStream","isStaticGeneration","getServerInsertedHTML","getServerInsertedMetadata","validateRootLayout","suffixUnclosed","allReady","continueDynamicPrerender","prerenderStream","continueStaticPrerender","continueDynamicHTMLResume","createDocumentClosingStream","NEXT_QUERY_PARAM_PREFIX","NEXT_INTERCEPTION_MARKER_PREFIX","MATCHED_PATH_HEADER","PRERENDER_REVALIDATE_HEADER","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","RSC_PREFETCH_SUFFIX","RSC_SEGMENTS_DIR_SUFFIX","RSC_SEGMENT_SUFFIX","RSC_SUFFIX","ACTION_SUFFIX","NEXT_DATA_SUFFIX","NEXT_META_SUFFIX","NEXT_BODY_SUFFIX","NEXT_CACHE_TAGS_HEADER","NEXT_CACHE_REVALIDATED_TAGS_HEADER","NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER","NEXT_RESUME_HEADER","NEXT_CACHE_TAG_MAX_ITEMS","NEXT_CACHE_TAG_MAX_LENGTH","NEXT_CACHE_SOFT_TAG_MAX_LENGTH","NEXT_CACHE_IMPLICIT_TAG_ID","CACHE_ONE_YEAR","INFINITE_CACHE","MIDDLEWARE_FILENAME","MIDDLEWARE_LOCATION_REGEXP","INSTRUMENTATION_HOOK_FILENAME","PAGES_DIR_ALIAS","DOT_NEXT_ALIAS","ROOT_DIR_ALIAS","APP_DIR_ALIAS","RSC_MOD_REF_PROXY_ALIAS","RSC_ACTION_VALIDATE_ALIAS","RSC_ACTION_PROXY_ALIAS","RSC_CACHE_WRAPPER_ALIAS","RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS","RSC_ACTION_ENCRYPTION_ALIAS","RSC_ACTION_CLIENT_WRAPPER_ALIAS","PUBLIC_DIR_MIDDLEWARE_CONFLICT","SSG_GET_INITIAL_PROPS_CONFLICT","SERVER_PROPS_GET_INIT_PROPS_CONFLICT","SERVER_PROPS_SSG_CONFLICT","STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR","SERVER_PROPS_EXPORT_ERROR","GSP_NO_RETURNED_VALUE","GSSP_NO_RETURNED_VALUE","UNSTABLE_REVALIDATE_RENAME_ERROR","GSSP_COMPONENT_MEMBER_ERROR","NON_STANDARD_NODE_ENV","SSG_FALLBACK_EXPORT_ERROR","ESLINT_DEFAULT_DIRS","SERVER_RUNTIME","edge","experimentalEdge","nodejs","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","apiNode","apiEdge","middleware","instrument","edgeAsset","appPagesBrowser","pagesDirBrowser","pagesDirEdge","pagesDirNode","WEBPACK_LAYERS","GROUP","builtinReact","serverOnly","neutralTarget","clientOnly","bundled","appPages","WEBPACK_RESOURCE_QUERIES","edgeSSREntry","metadata","metadataRoute","metadataImageMeta","fromNodeOutgoingHttpHeaders","nodeHeaders","headers","Headers","values","v","toString","splitCookiesString","cookiesString","cookiesStrings","pos","ch","lastComma","nextStart","cookiesSeparatorFound","skipWhitespace","charAt","notSpecialChar","substring","toNodeOutgoingHttpHeaders","cookies","validateURL","URL","cause","normalizeNextQueryParam","prefixes","prefix","startsWith","detectDomainLocale","domainItems","detectedLocale","domainHostname","domain","defaultLocale","locales","some","locale","removeTrailingSlash","route","parsePath","path","hashIndex","queryIndex","hasQuery","addPathPrefix","addPathSuffix","pathHasPrefix","addLocale","ignorePrefix","lower","formatNextPathnameInfo","info","buildId","trailingSlash","basePath","getHostname","parsed","cache","WeakMap","normalizeLocalePath","lowercasedLocales","segments","segment","removePathPrefix","withoutPrefix","getNextPathnameInfo","i18n","nextConfig","pathnameNoDataPrefix","paths","parseData","i18nProvider","analyze","REGEX_LOCALHOST_HOSTNAME","parseURL","base","Internal","NextURL","input","baseOrOpts","opts","__NEXT_NO_MIDDLEWARE_URL_NORMALIZE","domainLocale","domains","formatPathname","forceLocale","formatSearch","TypeError","href","origin","password","username","toJSON","clone","PageSignatureError","page","RemovedPageError","RemovedUAError","RequestCookies","ResponseCookies","stringifyCookie","INTERNALS","NextRequest","Request","init","body","duplex","nextUrl","bodyUsed","credentials","destination","fromEntries","integrity","keepalive","method","mode","redirect","referrer","referrerPolicy","ua","isWebNextRequest","isWebNextResponse","isNodeNextRequest","isNodeNextResponse","ResponseAbortedName","ResponseAborted","createAbortController","response","AbortController","once","writableFinished","abort","signalFromNodeResponse","errored","destroyed","AbortSignal","NextRequestAdapter","fromBaseNextRequest","fromWebNextRequest","fromNodeNextRequest","clientComponentLoadStart","clientComponentLoadTimes","clientComponentLoadCount","wrapClientComponentLoader","ComponentMod","__next_app__","loadChunk","getClientComponentLoaderMetrics","metrics","reset","isAbortError","e","createWriterFromResponse","waitUntilForEnd","started","drained","onDrain","on","off","finished","WritableStream","write","flushHeaders","startResponse","ok","destroy","pipeToNodeResponse","writer","RenderResult","fromStatic","contentType","waitUntil","assignMetadata","isNull","isDynamic","toUnchunkedBuffer","from","toUnchunkedString","isBuffer","chain","responses","fromResponseCacheEntry","cacheEntry","kind","PAGES","html","pageData","status","APP_PAGE","postponed","rscData","segmentData","toResponseCacheEntry","isMiss","isStale","cacheControl","routeKindToIncrementalCacheKind","routeKind","IMAGE","APP_ROUTE","ResponseCache","minimal_mode","batcher","responseGenerator","hasResolved","previousCacheEntry","incrementalCache","isFallback","isRoutePPREnabled","prom","previousCacheItem","expiresAt","Date","entry","resolved","cachedResponse","isPrefetch","isRevalidating","resolveValue","newRevalidate","Math","min","max","revalidate","newExpire","expire","hoist","SideEffect","isServer","window","useClientOnlyLayoutEffect","useLayoutEffect","useClientOnlyEffect","useEffect","props","headManager","reduceComponentsToState","emitChange","mountedInstances","headElements","Children","toArray","filter","Boolean","updateHead","add","children","_pendingUpdate","vendored","AmpContext","HeadManagerContext","isInAmpMode","ampFirst","hybrid","warnOnce","_","warnings","Set","msg","has","defaultHead","inAmpMode","head","charSet","content","onlyReactElement","list","child","React","Fragment","reduce","fragmentList","fragmentChild","METATYPES","unique","tags","metaTypes","metaCategories","h","isUnique","hasKey","len","metatype","hasOwnProperty","category","categories","reduceComponents","headChildrenElements","reverse","__NEXT_OPTIMIZE_FONTS","newProps","cloneElement","srcMessage","Head","ampState","useContext","AmpStateContext","Effect","statusCodes","_getInitialProps","statusCode","location","initUrl","styles","fontFamily","height","textAlign","display","flexDirection","alignItems","justifyContent","desc","lineHeight","h1","margin","paddingRight","fontSize","fontWeight","verticalAlign","h2","Component","render","withDarkMode","title","div","style","dangerouslySetInnerHTML","__html","className","displayName","getInitialProps","origGetInitialProps","getCacheControlHeader","swrHeader","WEB_VITALS","execOnce","used","ABSOLUTE_URL_REGEX","isAbsoluteUrl","getLocationOrigin","getURL","getDisplayName","isResSent","headersSent","normalizeRepeatedSlashes","urlParts","urlNoQuery","loadGetInitialProps","App","ctx","prototype","pageProps","SP","ST","every","DecodeError","NormalizeError","PageNotFoundError","MissingStaticPage","MiddlewareNotFoundError","stringifyError","JSON","stringify","stack","RedirectStatusCode","allowedStatusCodes","getRedirectStatus","permanent","PermanentRedirect","TemporaryRedirect","modifyRouteRegex","regex","restrictedPaths","fnv1a52","t0","v0","t1","v1","t2","v2","t3","v3","charCodeAt","generateETag","payload","weak","RSC_HEADER","ACTION_HEADER","NEXT_ROUTER_STATE_TREE_HEADER","NEXT_ROUTER_PREFETCH_HEADER","NEXT_ROUTER_SEGMENT_PREFETCH_HEADER","NEXT_HMR_REFRESH_HEADER","NEXT_HMR_REFRESH_HASH_COOKIE","NEXT_URL","RSC_CONTENT_TYPE_HEADER","FLIGHT_HEADERS","NEXT_RSC_UNION_QUERY","NEXT_ROUTER_STALE_TIME_HEADER","NEXT_DID_POSTPONE_HEADER","NEXT_REWRITTEN_PATH_HEADER","NEXT_REWRITTEN_QUERY_HEADER","NEXT_IS_PRERENDER_HEADER","fresh","sendEtagResponse","etag","setHeader","sendRenderResult","generateEtags","poweredByHeader","getHeader","escapePathDelimiters","escapeEncoded","RegExp","char","decodePathParams","seg","decodeURIComponent","HTML_LIMITED_BOT_UA_RE","HEADLESS_BROWSER_BOT_UA_RE","HTML_LIMITED_BOT_UA_RE_STRING","source","isDomBotUA","userAgent","isHtmlLimitedBotUA","isBot","getBotType","PagesRouteModule","document","app","userland","NoFallbackError","getStaticProps","getStaticPaths","getServerSideProps","config","reportWebVitals","unstable_getStaticProps","unstable_getStaticPaths","unstable_getStaticParams","unstable_getServerProps","unstable_getServerSideProps","routeModule","definition","bundlePath","filename","distDir","__NEXT_RELATIVE_DIST_DIR","projectDir","__NEXT_RELATIVE_PROJECT_DIR","components","Document","handler","serverFilesManifest","srcPage","multiZoneDraftMode","__NEXT_MULTI_ZONE_DRAFT_MODE","prepareResult","prepare","parsedUrl","originalQuery","originalPathname","buildManifest","nextFontManifest","reactLoadableManifest","prerenderManifest","isDraftMode","revalidateOnlyGenerated","routerServerContext","isExperimentalCompile","experimental","hasServerProps","hasStaticProps","hasStaticPaths","hasGetInitialProps","isAmp","amp","isIsrFallback","isNextDataRequest","is404Page","is500Page","isErrorPage","resolvedPathname","isDev","decodedPathname","isPrerendered","routes","notFoundRoutes","prerenderInfo","dynamicRoutes","fallback","activeSpan","resolvedUrl","publicRuntimeConfig","handleResponse","doRender","renderContext","developmentNotFoundSourcePage","sharedContext","customServer","isCustomServer","deploymentId","NEXT_DEPLOYMENT_ID","renderOpts","pageConfig","supportsDynamicResponse","assetPrefix","strictNextHead","previewProps","preview","images","nextConfigOutput","output","optimizeCss","nextScriptWorkers","domainLocales","crossOrigin","canonicalBase","ampOptimizerConfig","optimizer","disableOptimizedLoading","largePageDataBytes","runtimeConfig","clientTraceMetadata","setIsrStatus","resolvedAsPath","ErrorDebug","dev","ampSkipValidation","skipValidation","ampValidator","renderResult","isNotFound","isRedirect","REDIRECT","flightData","setAttributes","rootSpanAttributes","handleRequest","updateName","onRequestError","routerKind","routePath","routeType","revalidateReason","fallbackResponse","getResponseCache","previousFallbackCacheEntry","getIncrementalCache","notFoundRevalidate","expireTime","render404","handleRedirect","__N_REDIRECT","__N_REDIRECT_STATUS","__N_REDIRECT_BASE_PATH","SERVER"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68]}