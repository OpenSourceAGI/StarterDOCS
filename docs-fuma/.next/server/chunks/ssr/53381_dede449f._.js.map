{"version":3,"sources":["turbopack:///[project]/docs-fuma/node_modules/@radix-ui/react-navigation-menu/src/navigation-menu.tsx","turbopack:///[project]/docs-fuma/node_modules/fumadocs-ui/dist/components/ui/navigation-menu.js","turbopack:///[project]/docs-fuma/node_modules/fumadocs-ui/dist/layouts/home/navbar.js","turbopack:///[project]/docs-fuma/node_modules/fumadocs-ui/dist/layouts/home/menu.js"],"sourcesContent":["import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { composeRefs, useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { Presence } from '@radix-ui/react-presence';\nimport { useId } from '@radix-ui/react-id';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Orientation = 'vertical' | 'horizontal';\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAVIGATION_MENU_NAME = 'NavigationMenu';\n\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  NavigationMenuTriggerElement,\n  { value: string }\n>(NAVIGATION_MENU_NAME);\n\nconst [FocusGroupCollection, useFocusGroupCollection, createFocusGroupCollectionScope] =\n  createCollection<FocusGroupItemElement, {}>(NAVIGATION_MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeNavigationMenu?: Scope };\nconst [createNavigationMenuContext, createNavigationMenuScope] = createContextScope(\n  NAVIGATION_MENU_NAME,\n  [createCollectionScope, createFocusGroupCollectionScope]\n);\n\ntype ContentData = {\n  ref?: React.Ref<ViewportContentMounterElement>;\n} & ViewportContentMounterProps;\n\ntype NavigationMenuContextValue = {\n  isRootMenu: boolean;\n  value: string;\n  previousValue: string;\n  baseId: string;\n  dir: Direction;\n  orientation: Orientation;\n  rootNavigationMenu: NavigationMenuElement | null;\n  indicatorTrack: HTMLDivElement | null;\n  onIndicatorTrackChange(indicatorTrack: HTMLDivElement | null): void;\n  viewport: NavigationMenuViewportElement | null;\n  onViewportChange(viewport: NavigationMenuViewportElement | null): void;\n  onViewportContentChange(contentValue: string, contentData: ContentData): void;\n  onViewportContentRemove(contentValue: string): void;\n  onTriggerEnter(itemValue: string): void;\n  onTriggerLeave(): void;\n  onContentEnter(): void;\n  onContentLeave(): void;\n  onItemSelect(itemValue: string): void;\n  onItemDismiss(): void;\n};\n\nconst [NavigationMenuProviderImpl, useNavigationMenuContext] =\n  createNavigationMenuContext<NavigationMenuContextValue>(NAVIGATION_MENU_NAME);\n\nconst [ViewportContentProvider, useViewportContentContext] = createNavigationMenuContext<{\n  items: Map<string, ContentData>;\n}>(NAVIGATION_MENU_NAME);\n\ntype NavigationMenuElement = React.ComponentRef<typeof Primitive.nav>;\ntype PrimitiveNavProps = React.ComponentPropsWithoutRef<typeof Primitive.nav>;\ninterface NavigationMenuProps\n  extends Omit<NavigationMenuProviderProps, keyof NavigationMenuProviderPrivateProps>,\n    PrimitiveNavProps {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n  dir?: Direction;\n  orientation?: Orientation;\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened.\n   * @defaultValue 200\n   */\n  delayDuration?: number;\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number;\n}\n\nconst NavigationMenu = React.forwardRef<NavigationMenuElement, NavigationMenuProps>(\n  (props: ScopedProps<NavigationMenuProps>, forwardedRef) => {\n    const {\n      __scopeNavigationMenu,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      delayDuration = 200,\n      skipDelayDuration = 300,\n      orientation = 'horizontal',\n      dir,\n      ...NavigationMenuProps\n    } = props;\n    const [navigationMenu, setNavigationMenu] = React.useState<NavigationMenuElement | null>(null);\n    const composedRef = useComposedRefs(forwardedRef, (node) => setNavigationMenu(node));\n    const direction = useDirection(dir);\n    const openTimerRef = React.useRef(0);\n    const closeTimerRef = React.useRef(0);\n    const skipDelayTimerRef = React.useRef(0);\n    const [isOpenDelayed, setIsOpenDelayed] = React.useState(true);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: (value) => {\n        const isOpen = value !== '';\n        const hasSkipDelayDuration = skipDelayDuration > 0;\n\n        if (isOpen) {\n          window.clearTimeout(skipDelayTimerRef.current);\n          if (hasSkipDelayDuration) setIsOpenDelayed(false);\n        } else {\n          window.clearTimeout(skipDelayTimerRef.current);\n          skipDelayTimerRef.current = window.setTimeout(\n            () => setIsOpenDelayed(true),\n            skipDelayDuration\n          );\n        }\n\n        onValueChange?.(value);\n      },\n      defaultProp: defaultValue ?? '',\n      caller: NAVIGATION_MENU_NAME,\n    });\n\n    const startCloseTimer = React.useCallback(() => {\n      window.clearTimeout(closeTimerRef.current);\n      closeTimerRef.current = window.setTimeout(() => setValue(''), 150);\n    }, [setValue]);\n\n    const handleOpen = React.useCallback(\n      (itemValue: string) => {\n        window.clearTimeout(closeTimerRef.current);\n        setValue(itemValue);\n      },\n      [setValue]\n    );\n\n    const handleDelayedOpen = React.useCallback(\n      (itemValue: string) => {\n        const isOpenItem = value === itemValue;\n        if (isOpenItem) {\n          // If the item is already open (e.g. we're transitioning from the content to the trigger)\n          // then we want to clear the close timer immediately.\n          window.clearTimeout(closeTimerRef.current);\n        } else {\n          openTimerRef.current = window.setTimeout(() => {\n            window.clearTimeout(closeTimerRef.current);\n            setValue(itemValue);\n          }, delayDuration);\n        }\n      },\n      [value, setValue, delayDuration]\n    );\n\n    React.useEffect(() => {\n      return () => {\n        window.clearTimeout(openTimerRef.current);\n        window.clearTimeout(closeTimerRef.current);\n        window.clearTimeout(skipDelayTimerRef.current);\n      };\n    }, []);\n\n    return (\n      <NavigationMenuProvider\n        scope={__scopeNavigationMenu}\n        isRootMenu={true}\n        value={value}\n        dir={direction}\n        orientation={orientation}\n        rootNavigationMenu={navigationMenu}\n        onTriggerEnter={(itemValue) => {\n          window.clearTimeout(openTimerRef.current);\n          if (isOpenDelayed) handleDelayedOpen(itemValue);\n          else handleOpen(itemValue);\n        }}\n        onTriggerLeave={() => {\n          window.clearTimeout(openTimerRef.current);\n          startCloseTimer();\n        }}\n        onContentEnter={() => window.clearTimeout(closeTimerRef.current)}\n        onContentLeave={startCloseTimer}\n        onItemSelect={(itemValue) => {\n          setValue((prevValue) => (prevValue === itemValue ? '' : itemValue));\n        }}\n        onItemDismiss={() => setValue('')}\n      >\n        <Primitive.nav\n          aria-label=\"Main\"\n          data-orientation={orientation}\n          dir={direction}\n          {...NavigationMenuProps}\n          ref={composedRef}\n        />\n      </NavigationMenuProvider>\n    );\n  }\n);\n\nNavigationMenu.displayName = NAVIGATION_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'NavigationMenuSub';\n\ntype NavigationMenuSubElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface NavigationMenuSubProps\n  extends Omit<NavigationMenuProviderProps, keyof NavigationMenuProviderPrivateProps>,\n    PrimitiveDivProps {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n  orientation?: Orientation;\n}\n\nconst NavigationMenuSub = React.forwardRef<NavigationMenuSubElement, NavigationMenuSubProps>(\n  (props: ScopedProps<NavigationMenuSubProps>, forwardedRef) => {\n    const {\n      __scopeNavigationMenu,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      ...subProps\n    } = props;\n    const context = useNavigationMenuContext(SUB_NAME, __scopeNavigationMenu);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue ?? '',\n      caller: SUB_NAME,\n    });\n\n    return (\n      <NavigationMenuProvider\n        scope={__scopeNavigationMenu}\n        isRootMenu={false}\n        value={value}\n        dir={context.dir}\n        orientation={orientation}\n        rootNavigationMenu={context.rootNavigationMenu}\n        onTriggerEnter={(itemValue) => setValue(itemValue)}\n        onItemSelect={(itemValue) => setValue(itemValue)}\n        onItemDismiss={() => setValue('')}\n      >\n        <Primitive.div data-orientation={orientation} {...subProps} ref={forwardedRef} />\n      </NavigationMenuProvider>\n    );\n  }\n);\n\nNavigationMenuSub.displayName = SUB_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ninterface NavigationMenuProviderPrivateProps {\n  isRootMenu: boolean;\n  scope: Scope;\n  children: React.ReactNode;\n  orientation: Orientation;\n  dir: Direction;\n  rootNavigationMenu: NavigationMenuElement | null;\n  value: string;\n  onTriggerEnter(itemValue: string): void;\n  onTriggerLeave?(): void;\n  onContentEnter?(): void;\n  onContentLeave?(): void;\n  onItemSelect(itemValue: string): void;\n  onItemDismiss(): void;\n}\n\ninterface NavigationMenuProviderProps extends NavigationMenuProviderPrivateProps {}\n\nconst NavigationMenuProvider: React.FC<NavigationMenuProviderProps> = (\n  props: ScopedProps<NavigationMenuProviderProps>\n) => {\n  const {\n    scope,\n    isRootMenu,\n    rootNavigationMenu,\n    dir,\n    orientation,\n    children,\n    value,\n    onItemSelect,\n    onItemDismiss,\n    onTriggerEnter,\n    onTriggerLeave,\n    onContentEnter,\n    onContentLeave,\n  } = props;\n  const [viewport, setViewport] = React.useState<NavigationMenuViewportElement | null>(null);\n  const [viewportContent, setViewportContent] = React.useState<Map<string, ContentData>>(new Map());\n  const [indicatorTrack, setIndicatorTrack] = React.useState<HTMLDivElement | null>(null);\n\n  return (\n    <NavigationMenuProviderImpl\n      scope={scope}\n      isRootMenu={isRootMenu}\n      rootNavigationMenu={rootNavigationMenu}\n      value={value}\n      previousValue={usePrevious(value)}\n      baseId={useId()}\n      dir={dir}\n      orientation={orientation}\n      viewport={viewport}\n      onViewportChange={setViewport}\n      indicatorTrack={indicatorTrack}\n      onIndicatorTrackChange={setIndicatorTrack}\n      onTriggerEnter={useCallbackRef(onTriggerEnter)}\n      onTriggerLeave={useCallbackRef(onTriggerLeave)}\n      onContentEnter={useCallbackRef(onContentEnter)}\n      onContentLeave={useCallbackRef(onContentLeave)}\n      onItemSelect={useCallbackRef(onItemSelect)}\n      onItemDismiss={useCallbackRef(onItemDismiss)}\n      onViewportContentChange={React.useCallback((contentValue, contentData) => {\n        setViewportContent((prevContent) => {\n          prevContent.set(contentValue, contentData);\n          return new Map(prevContent);\n        });\n      }, [])}\n      onViewportContentRemove={React.useCallback((contentValue) => {\n        setViewportContent((prevContent) => {\n          if (!prevContent.has(contentValue)) return prevContent;\n          prevContent.delete(contentValue);\n          return new Map(prevContent);\n        });\n      }, [])}\n    >\n      <Collection.Provider scope={scope}>\n        <ViewportContentProvider scope={scope} items={viewportContent}>\n          {children}\n        </ViewportContentProvider>\n      </Collection.Provider>\n    </NavigationMenuProviderImpl>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuList\n * -----------------------------------------------------------------------------------------------*/\n\nconst LIST_NAME = 'NavigationMenuList';\n\ntype NavigationMenuListElement = React.ComponentRef<typeof Primitive.ul>;\ntype PrimitiveUnorderedListProps = React.ComponentPropsWithoutRef<typeof Primitive.ul>;\ninterface NavigationMenuListProps extends PrimitiveUnorderedListProps {}\n\nconst NavigationMenuList = React.forwardRef<NavigationMenuListElement, NavigationMenuListProps>(\n  (props: ScopedProps<NavigationMenuListProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...listProps } = props;\n    const context = useNavigationMenuContext(LIST_NAME, __scopeNavigationMenu);\n\n    const list = (\n      <Primitive.ul data-orientation={context.orientation} {...listProps} ref={forwardedRef} />\n    );\n\n    return (\n      <Primitive.div style={{ position: 'relative' }} ref={context.onIndicatorTrackChange}>\n        <Collection.Slot scope={__scopeNavigationMenu}>\n          {context.isRootMenu ? <FocusGroup asChild>{list}</FocusGroup> : list}\n        </Collection.Slot>\n      </Primitive.div>\n    );\n  }\n);\n\nNavigationMenuList.displayName = LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'NavigationMenuItem';\n\ntype FocusProxyElement = React.ComponentRef<typeof VisuallyHiddenPrimitive.Root>;\n\ntype NavigationMenuItemContextValue = {\n  value: string;\n  triggerRef: React.RefObject<NavigationMenuTriggerElement | null>;\n  contentRef: React.RefObject<NavigationMenuContentElement | null>;\n  focusProxyRef: React.RefObject<FocusProxyElement | null>;\n  wasEscapeCloseRef: React.MutableRefObject<boolean>;\n  onEntryKeyDown(): void;\n  onFocusProxyEnter(side: 'start' | 'end'): void;\n  onRootContentClose(): void;\n  onContentFocusOutside(): void;\n};\n\nconst [NavigationMenuItemContextProvider, useNavigationMenuItemContext] =\n  createNavigationMenuContext<NavigationMenuItemContextValue>(ITEM_NAME);\n\ntype NavigationMenuItemElement = React.ComponentRef<typeof Primitive.li>;\ntype PrimitiveListItemProps = React.ComponentPropsWithoutRef<typeof Primitive.li>;\ninterface NavigationMenuItemProps extends PrimitiveListItemProps {\n  value?: string;\n}\n\nconst NavigationMenuItem = React.forwardRef<NavigationMenuItemElement, NavigationMenuItemProps>(\n  (props: ScopedProps<NavigationMenuItemProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, value: valueProp, ...itemProps } = props;\n    const autoValue = useId();\n    // We need to provide an initial deterministic value as `useId` will return\n    // empty string on the first render and we don't want to match our internal \"closed\" value.\n    const value = valueProp || autoValue || 'LEGACY_REACT_AUTO_VALUE';\n    const contentRef = React.useRef<NavigationMenuContentElement>(null);\n    const triggerRef = React.useRef<NavigationMenuTriggerElement>(null);\n    const focusProxyRef = React.useRef<FocusProxyElement>(null);\n    const restoreContentTabOrderRef = React.useRef(() => {});\n    const wasEscapeCloseRef = React.useRef(false);\n\n    const handleContentEntry = React.useCallback((side = 'start') => {\n      if (contentRef.current) {\n        restoreContentTabOrderRef.current();\n        const candidates = getTabbableCandidates(contentRef.current);\n        if (candidates.length) focusFirst(side === 'start' ? candidates : candidates.reverse());\n      }\n    }, []);\n\n    const handleContentExit = React.useCallback(() => {\n      if (contentRef.current) {\n        const candidates = getTabbableCandidates(contentRef.current);\n        if (candidates.length) restoreContentTabOrderRef.current = removeFromTabOrder(candidates);\n      }\n    }, []);\n\n    return (\n      <NavigationMenuItemContextProvider\n        scope={__scopeNavigationMenu}\n        value={value}\n        triggerRef={triggerRef}\n        contentRef={contentRef}\n        focusProxyRef={focusProxyRef}\n        wasEscapeCloseRef={wasEscapeCloseRef}\n        onEntryKeyDown={handleContentEntry}\n        onFocusProxyEnter={handleContentEntry}\n        onRootContentClose={handleContentExit}\n        onContentFocusOutside={handleContentExit}\n      >\n        <Primitive.li {...itemProps} ref={forwardedRef} />\n      </NavigationMenuItemContextProvider>\n    );\n  }\n);\n\nNavigationMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'NavigationMenuTrigger';\n\ntype NavigationMenuTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface NavigationMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst NavigationMenuTrigger = React.forwardRef<\n  NavigationMenuTriggerElement,\n  NavigationMenuTriggerProps\n>((props: ScopedProps<NavigationMenuTriggerProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, disabled, ...triggerProps } = props;\n  const context = useNavigationMenuContext(TRIGGER_NAME, props.__scopeNavigationMenu);\n  const itemContext = useNavigationMenuItemContext(TRIGGER_NAME, props.__scopeNavigationMenu);\n  const ref = React.useRef<NavigationMenuTriggerElement>(null);\n  const composedRefs = useComposedRefs(ref, itemContext.triggerRef, forwardedRef);\n  const triggerId = makeTriggerId(context.baseId, itemContext.value);\n  const contentId = makeContentId(context.baseId, itemContext.value);\n  const hasPointerMoveOpenedRef = React.useRef(false);\n  const wasClickCloseRef = React.useRef(false);\n  const open = itemContext.value === context.value;\n\n  return (\n    <>\n      <Collection.ItemSlot scope={__scopeNavigationMenu} value={itemContext.value}>\n        <FocusGroupItem asChild>\n          <Primitive.button\n            id={triggerId}\n            disabled={disabled}\n            data-disabled={disabled ? '' : undefined}\n            data-state={getOpenState(open)}\n            aria-expanded={open}\n            aria-controls={contentId}\n            {...triggerProps}\n            ref={composedRefs}\n            onPointerEnter={composeEventHandlers(props.onPointerEnter, () => {\n              wasClickCloseRef.current = false;\n              itemContext.wasEscapeCloseRef.current = false;\n            })}\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse(() => {\n                if (\n                  disabled ||\n                  wasClickCloseRef.current ||\n                  itemContext.wasEscapeCloseRef.current ||\n                  hasPointerMoveOpenedRef.current\n                )\n                  return;\n                context.onTriggerEnter(itemContext.value);\n                hasPointerMoveOpenedRef.current = true;\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse(() => {\n                if (disabled) return;\n                context.onTriggerLeave();\n                hasPointerMoveOpenedRef.current = false;\n              })\n            )}\n            onClick={composeEventHandlers(props.onClick, () => {\n              context.onItemSelect(itemContext.value);\n              wasClickCloseRef.current = open;\n            })}\n            onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n              const verticalEntryKey = context.dir === 'rtl' ? 'ArrowLeft' : 'ArrowRight';\n              const entryKey = { horizontal: 'ArrowDown', vertical: verticalEntryKey }[\n                context.orientation\n              ];\n              if (open && event.key === entryKey) {\n                itemContext.onEntryKeyDown();\n                // Prevent FocusGroupItem from handling the event\n                event.preventDefault();\n              }\n            })}\n          />\n        </FocusGroupItem>\n      </Collection.ItemSlot>\n\n      {/* Proxy tab order between trigger and content */}\n      {open && (\n        <>\n          <VisuallyHiddenPrimitive.Root\n            aria-hidden\n            tabIndex={0}\n            ref={itemContext.focusProxyRef}\n            onFocus={(event) => {\n              const content = itemContext.contentRef.current;\n              const prevFocusedElement = event.relatedTarget as HTMLElement | null;\n              const wasTriggerFocused = prevFocusedElement === ref.current;\n              const wasFocusFromContent = content?.contains(prevFocusedElement);\n\n              if (wasTriggerFocused || !wasFocusFromContent) {\n                itemContext.onFocusProxyEnter(wasTriggerFocused ? 'start' : 'end');\n              }\n            }}\n          />\n\n          {/* Restructure a11y tree to make content accessible to screen reader when using the viewport */}\n          {context.viewport && <span aria-owns={contentId} />}\n        </>\n      )}\n    </>\n  );\n});\n\nNavigationMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuLink\n * -----------------------------------------------------------------------------------------------*/\n\nconst LINK_NAME = 'NavigationMenuLink';\nconst LINK_SELECT = 'navigationMenu.linkSelect';\n\ntype NavigationMenuLinkElement = React.ComponentRef<typeof Primitive.a>;\ntype PrimitiveLinkProps = React.ComponentPropsWithoutRef<typeof Primitive.a>;\ninterface NavigationMenuLinkProps extends Omit<PrimitiveLinkProps, 'onSelect'> {\n  active?: boolean;\n  onSelect?: (event: Event) => void;\n}\n\nconst NavigationMenuLink = React.forwardRef<NavigationMenuLinkElement, NavigationMenuLinkProps>(\n  (props: ScopedProps<NavigationMenuLinkProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, active, onSelect, ...linkProps } = props;\n\n    return (\n      <FocusGroupItem asChild>\n        <Primitive.a\n          data-active={active ? '' : undefined}\n          aria-current={active ? 'page' : undefined}\n          {...linkProps}\n          ref={forwardedRef}\n          onClick={composeEventHandlers(\n            props.onClick,\n            (event) => {\n              const target = event.target as HTMLElement;\n              const linkSelectEvent = new CustomEvent(LINK_SELECT, {\n                bubbles: true,\n                cancelable: true,\n              });\n              target.addEventListener(LINK_SELECT, (event) => onSelect?.(event), { once: true });\n              dispatchDiscreteCustomEvent(target, linkSelectEvent);\n\n              if (!linkSelectEvent.defaultPrevented && !event.metaKey) {\n                const rootContentDismissEvent = new CustomEvent(ROOT_CONTENT_DISMISS, {\n                  bubbles: true,\n                  cancelable: true,\n                });\n                dispatchDiscreteCustomEvent(target, rootContentDismissEvent);\n              }\n            },\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </FocusGroupItem>\n    );\n  }\n);\n\nNavigationMenuLink.displayName = LINK_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'NavigationMenuIndicator';\n\ntype NavigationMenuIndicatorElement = NavigationMenuIndicatorImplElement;\ninterface NavigationMenuIndicatorProps extends NavigationMenuIndicatorImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuIndicator = React.forwardRef<\n  NavigationMenuIndicatorElement,\n  NavigationMenuIndicatorProps\n>((props: ScopedProps<NavigationMenuIndicatorProps>, forwardedRef) => {\n  const { forceMount, ...indicatorProps } = props;\n  const context = useNavigationMenuContext(INDICATOR_NAME, props.__scopeNavigationMenu);\n  const isVisible = Boolean(context.value);\n\n  return context.indicatorTrack\n    ? ReactDOM.createPortal(\n        <Presence present={forceMount || isVisible}>\n          <NavigationMenuIndicatorImpl {...indicatorProps} ref={forwardedRef} />\n        </Presence>,\n        context.indicatorTrack\n      )\n    : null;\n});\n\nNavigationMenuIndicator.displayName = INDICATOR_NAME;\n\ntype NavigationMenuIndicatorImplElement = React.ComponentRef<typeof Primitive.div>;\ninterface NavigationMenuIndicatorImplProps extends PrimitiveDivProps {}\n\nconst NavigationMenuIndicatorImpl = React.forwardRef<\n  NavigationMenuIndicatorImplElement,\n  NavigationMenuIndicatorImplProps\n>((props: ScopedProps<NavigationMenuIndicatorImplProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, ...indicatorProps } = props;\n  const context = useNavigationMenuContext(INDICATOR_NAME, __scopeNavigationMenu);\n  const getItems = useCollection(__scopeNavigationMenu);\n  const [activeTrigger, setActiveTrigger] = React.useState<NavigationMenuTriggerElement | null>(\n    null\n  );\n  const [position, setPosition] = React.useState<{ size: number; offset: number } | null>(null);\n  const isHorizontal = context.orientation === 'horizontal';\n  const isVisible = Boolean(context.value);\n\n  React.useEffect(() => {\n    const items = getItems();\n    const triggerNode = items.find((item) => item.value === context.value)?.ref.current;\n    if (triggerNode) setActiveTrigger(triggerNode);\n  }, [getItems, context.value]);\n\n  /**\n   * Update position when the indicator or parent track size changes\n   */\n  const handlePositionChange = () => {\n    if (activeTrigger) {\n      setPosition({\n        size: isHorizontal ? activeTrigger.offsetWidth : activeTrigger.offsetHeight,\n        offset: isHorizontal ? activeTrigger.offsetLeft : activeTrigger.offsetTop,\n      });\n    }\n  };\n  useResizeObserver(activeTrigger, handlePositionChange);\n  useResizeObserver(context.indicatorTrack, handlePositionChange);\n\n  // We need to wait for the indicator position to be available before rendering to\n  // snap immediately into position rather than transitioning from initial\n  return position ? (\n    <Primitive.div\n      aria-hidden\n      data-state={isVisible ? 'visible' : 'hidden'}\n      data-orientation={context.orientation}\n      {...indicatorProps}\n      ref={forwardedRef}\n      style={{\n        position: 'absolute',\n        ...(isHorizontal\n          ? {\n              left: 0,\n              width: position.size + 'px',\n              transform: `translateX(${position.offset}px)`,\n            }\n          : {\n              top: 0,\n              height: position.size + 'px',\n              transform: `translateY(${position.offset}px)`,\n            }),\n        ...indicatorProps.style,\n      }}\n    />\n  ) : null;\n});\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'NavigationMenuContent';\n\ntype NavigationMenuContentElement = NavigationMenuContentImplElement;\ninterface NavigationMenuContentProps\n  extends Omit<NavigationMenuContentImplProps, keyof NavigationMenuContentImplPrivateProps> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuContent = React.forwardRef<\n  NavigationMenuContentElement,\n  NavigationMenuContentProps\n>((props: ScopedProps<NavigationMenuContentProps>, forwardedRef) => {\n  const { forceMount, ...contentProps } = props;\n  const context = useNavigationMenuContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const itemContext = useNavigationMenuItemContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const composedRefs = useComposedRefs(itemContext.contentRef, forwardedRef);\n  const open = itemContext.value === context.value;\n\n  const commonProps = {\n    value: itemContext.value,\n    triggerRef: itemContext.triggerRef,\n    focusProxyRef: itemContext.focusProxyRef,\n    wasEscapeCloseRef: itemContext.wasEscapeCloseRef,\n    onContentFocusOutside: itemContext.onContentFocusOutside,\n    onRootContentClose: itemContext.onRootContentClose,\n    ...contentProps,\n  };\n\n  return !context.viewport ? (\n    <Presence present={forceMount || open}>\n      <NavigationMenuContentImpl\n        data-state={getOpenState(open)}\n        {...commonProps}\n        ref={composedRefs}\n        onPointerEnter={composeEventHandlers(props.onPointerEnter, context.onContentEnter)}\n        onPointerLeave={composeEventHandlers(\n          props.onPointerLeave,\n          whenMouse(context.onContentLeave)\n        )}\n        style={{\n          // Prevent interaction when animating out\n          pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n          ...commonProps.style,\n        }}\n      />\n    </Presence>\n  ) : (\n    <ViewportContentMounter forceMount={forceMount} {...commonProps} ref={composedRefs} />\n  );\n});\n\nNavigationMenuContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ViewportContentMounterElement = NavigationMenuContentImplElement;\ninterface ViewportContentMounterProps extends NavigationMenuContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst ViewportContentMounter = React.forwardRef<\n  ViewportContentMounterElement,\n  ViewportContentMounterProps\n>((props: ScopedProps<ViewportContentMounterProps>, forwardedRef) => {\n  const context = useNavigationMenuContext(CONTENT_NAME, props.__scopeNavigationMenu);\n  const { onViewportContentChange, onViewportContentRemove } = context;\n\n  useLayoutEffect(() => {\n    onViewportContentChange(props.value, {\n      ref: forwardedRef,\n      ...props,\n    });\n  }, [props, forwardedRef, onViewportContentChange]);\n\n  useLayoutEffect(() => {\n    return () => onViewportContentRemove(props.value);\n  }, [props.value, onViewportContentRemove]);\n\n  // Content is proxied into the viewport\n  return null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst ROOT_CONTENT_DISMISS = 'navigationMenu.rootContentDismiss';\n\ntype MotionAttribute = 'to-start' | 'to-end' | 'from-start' | 'from-end';\ntype NavigationMenuContentImplElement = React.ComponentRef<typeof DismissableLayer>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\n\ninterface NavigationMenuContentImplPrivateProps {\n  value: string;\n  triggerRef: React.RefObject<NavigationMenuTriggerElement | null>;\n  focusProxyRef: React.RefObject<FocusProxyElement | null>;\n  wasEscapeCloseRef: React.MutableRefObject<boolean>;\n  onContentFocusOutside(): void;\n  onRootContentClose(): void;\n}\ninterface NavigationMenuContentImplProps\n  extends Omit<DismissableLayerProps, 'onDismiss' | 'disableOutsidePointerEvents'>,\n    NavigationMenuContentImplPrivateProps {}\n\nconst NavigationMenuContentImpl = React.forwardRef<\n  NavigationMenuContentImplElement,\n  NavigationMenuContentImplProps\n>((props: ScopedProps<NavigationMenuContentImplProps>, forwardedRef) => {\n  const {\n    __scopeNavigationMenu,\n    value,\n    triggerRef,\n    focusProxyRef,\n    wasEscapeCloseRef,\n    onRootContentClose,\n    onContentFocusOutside,\n    ...contentProps\n  } = props;\n  const context = useNavigationMenuContext(CONTENT_NAME, __scopeNavigationMenu);\n  const ref = React.useRef<NavigationMenuContentImplElement>(null);\n  const composedRefs = useComposedRefs(ref, forwardedRef);\n  const triggerId = makeTriggerId(context.baseId, value);\n  const contentId = makeContentId(context.baseId, value);\n  const getItems = useCollection(__scopeNavigationMenu);\n  const prevMotionAttributeRef = React.useRef<MotionAttribute | null>(null);\n\n  const { onItemDismiss } = context;\n\n  React.useEffect(() => {\n    const content = ref.current;\n\n    // Bubble dismiss to the root content node and focus its trigger\n    if (context.isRootMenu && content) {\n      const handleClose = () => {\n        onItemDismiss();\n        onRootContentClose();\n        if (content.contains(document.activeElement)) triggerRef.current?.focus();\n      };\n      content.addEventListener(ROOT_CONTENT_DISMISS, handleClose);\n      return () => content.removeEventListener(ROOT_CONTENT_DISMISS, handleClose);\n    }\n  }, [context.isRootMenu, props.value, triggerRef, onItemDismiss, onRootContentClose]);\n\n  const motionAttribute = React.useMemo(() => {\n    const items = getItems();\n    const values = items.map((item) => item.value);\n    if (context.dir === 'rtl') values.reverse();\n    const index = values.indexOf(context.value);\n    const prevIndex = values.indexOf(context.previousValue);\n    const isSelected = value === context.value;\n    const wasSelected = prevIndex === values.indexOf(value);\n\n    // We only want to update selected and the last selected content\n    // this avoids animations being interrupted outside of that range\n    if (!isSelected && !wasSelected) return prevMotionAttributeRef.current;\n\n    const attribute = (() => {\n      // Don't provide a direction on the initial open\n      if (index !== prevIndex) {\n        // If we're moving to this item from another\n        if (isSelected && prevIndex !== -1) return index > prevIndex ? 'from-end' : 'from-start';\n        // If we're leaving this item for another\n        if (wasSelected && index !== -1) return index > prevIndex ? 'to-start' : 'to-end';\n      }\n      // Otherwise we're entering from closed or leaving the list\n      // entirely and should not animate in any direction\n      return null;\n    })();\n\n    prevMotionAttributeRef.current = attribute;\n    return attribute;\n  }, [context.previousValue, context.value, context.dir, getItems, value]);\n\n  return (\n    <FocusGroup asChild>\n      <DismissableLayer\n        id={contentId}\n        aria-labelledby={triggerId}\n        data-motion={motionAttribute}\n        data-orientation={context.orientation}\n        {...contentProps}\n        ref={composedRefs}\n        disableOutsidePointerEvents={false}\n        onDismiss={() => {\n          const rootContentDismissEvent = new Event(ROOT_CONTENT_DISMISS, {\n            bubbles: true,\n            cancelable: true,\n          });\n          ref.current?.dispatchEvent(rootContentDismissEvent);\n        }}\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n          onContentFocusOutside();\n          const target = event.target as HTMLElement;\n          // Only dismiss content when focus moves outside of the menu\n          if (context.rootNavigationMenu?.contains(target)) event.preventDefault();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const target = event.target as HTMLElement;\n          const isTrigger = getItems().some((item) => item.ref.current?.contains(target));\n          const isRootViewport = context.isRootMenu && context.viewport?.contains(target);\n          if (isTrigger || isRootViewport || !context.isRootMenu) event.preventDefault();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n          const isTabKey = event.key === 'Tab' && !isMetaKey;\n          if (isTabKey) {\n            const candidates = getTabbableCandidates(event.currentTarget);\n            const focusedElement = document.activeElement;\n            const index = candidates.findIndex((candidate) => candidate === focusedElement);\n            const isMovingBackwards = event.shiftKey;\n            const nextCandidates = isMovingBackwards\n              ? candidates.slice(0, index).reverse()\n              : candidates.slice(index + 1, candidates.length);\n\n            if (focusFirst(nextCandidates)) {\n              // prevent browser tab keydown because we've handled focus\n              event.preventDefault();\n            } else {\n              // If we can't focus that means we're at the edges\n              // so focus the proxy and let browser handle\n              // tab/shift+tab keypress on the proxy instead\n              focusProxyRef.current?.focus();\n            }\n          }\n        })}\n        onEscapeKeyDown={composeEventHandlers(props.onEscapeKeyDown, (_event) => {\n          // prevent the dropdown from reopening\n          // after the escape key has been pressed\n          wasEscapeCloseRef.current = true;\n        })}\n      />\n    </FocusGroup>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'NavigationMenuViewport';\n\ntype NavigationMenuViewportElement = NavigationMenuViewportImplElement;\ninterface NavigationMenuViewportProps\n  extends Omit<NavigationMenuViewportImplProps, 'activeContentValue'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst NavigationMenuViewport = React.forwardRef<\n  NavigationMenuViewportElement,\n  NavigationMenuViewportProps\n>((props: ScopedProps<NavigationMenuViewportProps>, forwardedRef) => {\n  const { forceMount, ...viewportProps } = props;\n  const context = useNavigationMenuContext(VIEWPORT_NAME, props.__scopeNavigationMenu);\n  const open = Boolean(context.value);\n\n  return (\n    <Presence present={forceMount || open}>\n      <NavigationMenuViewportImpl {...viewportProps} ref={forwardedRef} />\n    </Presence>\n  );\n});\n\nNavigationMenuViewport.displayName = VIEWPORT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype NavigationMenuViewportImplElement = React.ComponentRef<typeof Primitive.div>;\ninterface NavigationMenuViewportImplProps extends PrimitiveDivProps {}\n\nconst NavigationMenuViewportImpl = React.forwardRef<\n  NavigationMenuViewportImplElement,\n  NavigationMenuViewportImplProps\n>((props: ScopedProps<NavigationMenuViewportImplProps>, forwardedRef) => {\n  const { __scopeNavigationMenu, children, ...viewportImplProps } = props;\n  const context = useNavigationMenuContext(VIEWPORT_NAME, __scopeNavigationMenu);\n  const composedRefs = useComposedRefs(forwardedRef, context.onViewportChange);\n  const viewportContentContext = useViewportContentContext(\n    CONTENT_NAME,\n    props.__scopeNavigationMenu\n  );\n  const [size, setSize] = React.useState<{ width: number; height: number } | null>(null);\n  const [content, setContent] = React.useState<NavigationMenuContentElement | null>(null);\n  const viewportWidth = size ? size?.width + 'px' : undefined;\n  const viewportHeight = size ? size?.height + 'px' : undefined;\n  const open = Boolean(context.value);\n  // We persist the last active content value as the viewport may be animating out\n  // and we want the content to remain mounted for the lifecycle of the viewport.\n  const activeContentValue = open ? context.value : context.previousValue;\n\n  /**\n   * Update viewport size to match the active content node.\n   * We prefer offset dimensions over `getBoundingClientRect` as the latter respects CSS transform.\n   * For example, if content animates in from `scale(0.5)` the dimensions would be anything\n   * from `0.5` to `1` of the intended size.\n   */\n  const handleSizeChange = () => {\n    if (content) setSize({ width: content.offsetWidth, height: content.offsetHeight });\n  };\n  useResizeObserver(content, handleSizeChange);\n\n  return (\n    <Primitive.div\n      data-state={getOpenState(open)}\n      data-orientation={context.orientation}\n      {...viewportImplProps}\n      ref={composedRefs}\n      style={{\n        // Prevent interaction when animating out\n        pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n        ['--radix-navigation-menu-viewport-width' as any]: viewportWidth,\n        ['--radix-navigation-menu-viewport-height' as any]: viewportHeight,\n        ...viewportImplProps.style,\n      }}\n      onPointerEnter={composeEventHandlers(props.onPointerEnter, context.onContentEnter)}\n      onPointerLeave={composeEventHandlers(props.onPointerLeave, whenMouse(context.onContentLeave))}\n    >\n      {Array.from(viewportContentContext.items).map(([value, { ref, forceMount, ...props }]) => {\n        const isActive = activeContentValue === value;\n        return (\n          <Presence key={value} present={forceMount || isActive}>\n            <NavigationMenuContentImpl\n              {...props}\n              ref={composeRefs(ref, (node) => {\n                // We only want to update the stored node when another is available\n                // as we need to smoothly transition between them.\n                if (isActive && node) setContent(node);\n              })}\n            />\n          </Presence>\n        );\n      })}\n    </Primitive.div>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_GROUP_NAME = 'FocusGroup';\n\ntype FocusGroupElement = React.ComponentRef<typeof Primitive.div>;\ninterface FocusGroupProps extends PrimitiveDivProps {}\n\nconst FocusGroup = React.forwardRef<FocusGroupElement, FocusGroupProps>(\n  (props: ScopedProps<FocusGroupProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...groupProps } = props;\n    const context = useNavigationMenuContext(FOCUS_GROUP_NAME, __scopeNavigationMenu);\n\n    return (\n      <FocusGroupCollection.Provider scope={__scopeNavigationMenu}>\n        <FocusGroupCollection.Slot scope={__scopeNavigationMenu}>\n          <Primitive.div dir={context.dir} {...groupProps} ref={forwardedRef} />\n        </FocusGroupCollection.Slot>\n      </FocusGroupCollection.Provider>\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_KEYS = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown'];\nconst FOCUS_GROUP_ITEM_NAME = 'FocusGroupItem';\n\ntype FocusGroupItemElement = React.ComponentRef<typeof Primitive.button>;\ninterface FocusGroupItemProps extends PrimitiveButtonProps {}\n\nconst FocusGroupItem = React.forwardRef<FocusGroupItemElement, FocusGroupItemProps>(\n  (props: ScopedProps<FocusGroupItemProps>, forwardedRef) => {\n    const { __scopeNavigationMenu, ...groupProps } = props;\n    const getItems = useFocusGroupCollection(__scopeNavigationMenu);\n    const context = useNavigationMenuContext(FOCUS_GROUP_ITEM_NAME, __scopeNavigationMenu);\n\n    return (\n      <FocusGroupCollection.ItemSlot scope={__scopeNavigationMenu}>\n        <Primitive.button\n          {...groupProps}\n          ref={forwardedRef}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isFocusNavigationKey = ['Home', 'End', ...ARROW_KEYS].includes(event.key);\n            if (isFocusNavigationKey) {\n              let candidateNodes = getItems().map((item) => item.ref.current!);\n              const prevItemKey = context.dir === 'rtl' ? 'ArrowRight' : 'ArrowLeft';\n              const prevKeys = [prevItemKey, 'ArrowUp', 'End'];\n              if (prevKeys.includes(event.key)) candidateNodes.reverse();\n              if (ARROW_KEYS.includes(event.key)) {\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = candidateNodes.slice(currentIndex + 1);\n              }\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n\n              // Prevent page scroll while navigating\n              event.preventDefault();\n            }\n          })}\n        />\n      </FocusGroupCollection.ItemSlot>\n    );\n  }\n);\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const previouslyFocusedElement = document.activeElement;\n  return candidates.some((candidate) => {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === previouslyFocusedElement) return true;\n    candidate.focus();\n    return document.activeElement !== previouslyFocusedElement;\n  });\n}\n\nfunction removeFromTabOrder(candidates: HTMLElement[]) {\n  candidates.forEach((candidate) => {\n    candidate.dataset.tabindex = candidate.getAttribute('tabindex') || '';\n    candidate.setAttribute('tabindex', '-1');\n  });\n  return () => {\n    candidates.forEach((candidate) => {\n      const prevTabIndex = candidate.dataset.tabindex as string;\n      candidate.setAttribute('tabindex', prevTabIndex);\n    });\n  };\n}\n\nfunction useResizeObserver(element: HTMLElement | null, onResize: () => void) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      /**\n       * Resize Observer will throw an often benign error that says `ResizeObserver loop\n       * completed with undelivered notifications`. This means that ResizeObserver was not\n       * able to deliver all observations within a single animation frame, so we use\n       * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n       * Further reading: https://github.com/WICG/resize-observer/issues/38\n       */\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = NavigationMenu;\nconst Sub = NavigationMenuSub;\nconst List = NavigationMenuList;\nconst Item = NavigationMenuItem;\nconst Trigger = NavigationMenuTrigger;\nconst Link = NavigationMenuLink;\nconst Indicator = NavigationMenuIndicator;\nconst Content = NavigationMenuContent;\nconst Viewport = NavigationMenuViewport;\n\nexport {\n  createNavigationMenuScope,\n  //\n  NavigationMenu,\n  NavigationMenuSub,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuContent,\n  NavigationMenuViewport,\n  //\n  Root,\n  Sub,\n  List,\n  Item,\n  Trigger,\n  Link,\n  Indicator,\n  Content,\n  Viewport,\n};\nexport type {\n  NavigationMenuProps,\n  NavigationMenuSubProps,\n  NavigationMenuListProps,\n  NavigationMenuItemProps,\n  NavigationMenuTriggerProps,\n  NavigationMenuLinkProps,\n  NavigationMenuIndicatorProps,\n  NavigationMenuContentProps,\n  NavigationMenuViewportProps,\n};\n","'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from 'react';\nimport * as Primitive from '@radix-ui/react-navigation-menu';\nimport { cn } from '../../utils/cn.js';\nconst NavigationMenu = Primitive.Root;\nconst NavigationMenuList = Primitive.List;\nconst NavigationMenuItem = React.forwardRef(({ className, children, ...props }, ref) => (_jsx(Primitive.NavigationMenuItem, { ref: ref, className: cn('list-none', className), ...props, children: children })));\nNavigationMenuItem.displayName = Primitive.NavigationMenuItem.displayName;\nconst NavigationMenuTrigger = React.forwardRef(({ className, children, ...props }, ref) => (_jsx(Primitive.Trigger, { ref: ref, className: cn('data-[state=open]:bg-fd-accent/50', className), ...props, children: children })));\nNavigationMenuTrigger.displayName = Primitive.Trigger.displayName;\nconst NavigationMenuContent = React.forwardRef(({ className, ...props }, ref) => (_jsx(Primitive.Content, { ref: ref, className: cn('absolute inset-x-0 top-0 overflow-auto fd-scroll-container max-h-[80svh] data-[motion=from-end]:animate-fd-enterFromRight data-[motion=from-start]:animate-fd-enterFromLeft data-[motion=to-end]:animate-fd-exitToRight data-[motion=to-start]:animate-fd-exitToLeft', className), ...props })));\nNavigationMenuContent.displayName = Primitive.Content.displayName;\nconst NavigationMenuLink = Primitive.Link;\nconst NavigationMenuViewport = React.forwardRef(({ className, ...props }, ref) => (_jsx(\"div\", { ref: ref, className: \"flex w-full justify-center\", children: _jsx(Primitive.Viewport, { ...props, className: cn('relative h-(--radix-navigation-menu-viewport-height) w-full origin-[top_center] overflow-hidden transition-[width,height] duration-300 data-[state=closed]:animate-fd-nav-menu-out data-[state=open]:animate-fd-nav-menu-in', className) }) })));\nNavigationMenuViewport.displayName = Primitive.Viewport.displayName;\nexport { NavigationMenu, NavigationMenuList, NavigationMenuItem, NavigationMenuContent, NavigationMenuTrigger, NavigationMenuLink, NavigationMenuViewport, };\n","'use client';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { cva } from 'class-variance-authority';\nimport Link from 'fumadocs-core/link';\nimport { cn } from '../../utils/cn.js';\nimport { BaseLinkItem } from '../../layouts/links.js';\nimport { NavigationMenu, NavigationMenuContent, NavigationMenuItem, NavigationMenuLink, NavigationMenuList, NavigationMenuTrigger, NavigationMenuViewport, } from '../../components/ui/navigation-menu.js';\nimport { useNav } from '../../contexts/layout.js';\nimport { buttonVariants } from '../../components/ui/button.js';\nconst navItemVariants = cva('inline-flex items-center gap-1 p-2 text-fd-muted-foreground transition-colors hover:text-fd-accent-foreground data-[active=true]:text-fd-primary [&_svg]:size-4');\nexport function Navbar(props) {\n    const [value, setValue] = useState('');\n    const { isTransparent } = useNav();\n    return (_jsx(NavigationMenu, { value: value, onValueChange: setValue, asChild: true, children: _jsxs(\"header\", { id: \"nd-nav\", ...props, className: cn('fixed top-(--fd-banner-height) z-40 left-0 backdrop-blur-lg border-b transition-colors *:mx-auto *:max-w-fd-container', value.length > 0 && 'max-lg:shadow-lg max-lg:rounded-b-2xl', (!isTransparent || value.length > 0) && 'bg-fd-background/80', props.className), style: {\n                right: 'var(--removed-body-scroll-bar-size, 0px)',\n            }, children: [_jsx(NavigationMenuList, { className: \"flex h-14 w-full items-center px-4\", asChild: true, children: _jsx(\"nav\", { children: props.children }) }), _jsx(NavigationMenuViewport, {})] }) }));\n}\nexport const NavbarMenu = NavigationMenuItem;\nexport function NavbarMenuContent(props) {\n    return (_jsx(NavigationMenuContent, { ...props, className: cn('grid grid-cols-1 gap-2 p-4 md:grid-cols-2 lg:grid-cols-3', props.className), children: props.children }));\n}\nexport function NavbarMenuTrigger(props) {\n    return (_jsx(NavigationMenuTrigger, { ...props, className: cn(navItemVariants(), 'rounded-md', props.className), children: props.children }));\n}\nexport function NavbarMenuLink(props) {\n    return (_jsx(NavigationMenuLink, { asChild: true, children: _jsx(Link, { ...props, className: cn('flex flex-col gap-2 rounded-lg border bg-fd-card p-3 transition-colors hover:bg-fd-accent/80 hover:text-fd-accent-foreground', props.className), children: props.children }) }));\n}\nconst linkVariants = cva('', {\n    variants: {\n        variant: {\n            main: navItemVariants(),\n            button: buttonVariants({\n                color: 'secondary',\n                className: 'gap-1.5 [&_svg]:size-4',\n            }),\n            icon: buttonVariants({\n                color: 'ghost',\n                size: 'icon',\n            }),\n        },\n    },\n    defaultVariants: {\n        variant: 'main',\n    },\n});\nexport function NavbarLink({ item, variant, ...props }) {\n    return (_jsx(NavigationMenuItem, { children: _jsx(NavigationMenuLink, { asChild: true, children: _jsx(BaseLinkItem, { ...props, item: item, className: cn(linkVariants({ variant }), props.className), children: props.children }) }) }));\n}\n","'use client';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { BaseLinkItem } from '../../layouts/links.js';\nimport { cn } from '../../utils/cn.js';\nimport { NavigationMenuContent, NavigationMenuItem, NavigationMenuLink, NavigationMenuTrigger, } from '../../components/ui/navigation-menu.js';\nimport Link from 'fumadocs-core/link';\nimport { cva } from 'class-variance-authority';\nimport { buttonVariants } from '../../components/ui/button.js';\nconst menuItemVariants = cva('', {\n    variants: {\n        variant: {\n            main: 'inline-flex items-center gap-2 py-1.5 transition-colors hover:text-fd-popover-foreground/50 data-[active=true]:font-medium data-[active=true]:text-fd-primary [&_svg]:size-4',\n            icon: buttonVariants({\n                size: 'icon',\n                color: 'ghost',\n            }),\n            button: buttonVariants({\n                color: 'secondary',\n                className: 'gap-1.5 [&_svg]:size-4',\n            }),\n        },\n    },\n    defaultVariants: {\n        variant: 'main',\n    },\n});\nexport function MenuLinkItem({ item, ...props }) {\n    if (item.type === 'custom')\n        return _jsx(\"div\", { className: cn('grid', props.className), children: item.children });\n    if (item.type === 'menu') {\n        const header = (_jsxs(_Fragment, { children: [item.icon, item.text] }));\n        return (_jsxs(\"div\", { className: cn('mb-4 flex flex-col', props.className), children: [_jsx(\"p\", { className: \"mb-1 text-sm text-fd-muted-foreground\", children: item.url ? (_jsx(NavigationMenuLink, { asChild: true, children: _jsx(Link, { href: item.url, children: header }) })) : (header) }), item.items.map((child, i) => (_jsx(MenuLinkItem, { item: child }, i)))] }));\n    }\n    return (_jsx(NavigationMenuLink, { asChild: true, children: _jsxs(BaseLinkItem, { item: item, className: cn(menuItemVariants({ variant: item.type }), props.className), \"aria-label\": item.type === 'icon' ? item.label : undefined, children: [item.icon, item.type === 'icon' ? undefined : item.text] }) }));\n}\nexport const Menu = NavigationMenuItem;\nexport function MenuTrigger({ enableHover = false, ...props }) {\n    return (_jsx(NavigationMenuTrigger, { ...props, onPointerMove: enableHover ? undefined : (e) => e.preventDefault(), children: props.children }));\n}\nexport function MenuContent(props) {\n    return (_jsx(NavigationMenuContent, { ...props, className: cn('flex flex-col p-4', props.className), children: props.children }));\n}\n"],"names":["value","event","props","Root"],"mappings":"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","ignoreList":[1,2,3]}