{"version":3,"sources":["turbopack:///[project]/docs-fuma/node_modules/fumadocs-core/dist/chunk-KAOEMCTI.js","turbopack:///[project]/docs-fuma/node_modules/fumadocs-core/dist/chunk-62HKBTBF.js","turbopack:///[project]/docs-fuma/node_modules/fumadocs-core/dist/static-5YPNWD5F.js"],"sourcesContent":["// src/utils/remove-undefined.ts\nfunction removeUndefined(value, deep = false) {\n  const obj = value;\n  for (const key of Object.keys(obj)) {\n    if (obj[key] === void 0) delete obj[key];\n    if (deep && typeof obj[key] === \"object\" && obj[key] !== null) {\n      removeUndefined(obj[key], deep);\n    } else if (deep && Array.isArray(obj[key])) {\n      obj[key].forEach((v) => removeUndefined(v, deep));\n    }\n  }\n  return value;\n}\n\nexport {\n  removeUndefined\n};\n","import {\n  removeUndefined\n} from \"./chunk-KAOEMCTI.js\";\n\n// src/search/orama/search/simple.ts\nimport { search } from \"@orama/orama\";\nasync function searchSimple(db, query, params = {}) {\n  const result = await search(db, {\n    term: query,\n    tolerance: 1,\n    ...params,\n    boost: {\n      title: 2,\n      ...\"boost\" in params ? params.boost : void 0\n    }\n  });\n  return result.hits.map((hit) => ({\n    type: \"page\",\n    content: hit.document.title,\n    id: hit.document.url,\n    url: hit.document.url\n  }));\n}\n\n// src/search/orama/search/advanced.ts\nimport { getByID, search as search2 } from \"@orama/orama\";\nasync function searchAdvanced(db, query, tag = [], extraParams = {}) {\n  if (typeof tag === \"string\") tag = [tag];\n  let params = {\n    ...extraParams,\n    where: removeUndefined({\n      tags: tag.length > 0 ? {\n        containsAll: tag\n      } : void 0,\n      ...extraParams.where\n    }),\n    groupBy: {\n      properties: [\"page_id\"],\n      maxResult: 8,\n      ...extraParams.groupBy\n    }\n  };\n  if (query.length > 0) {\n    params = {\n      ...params,\n      term: query,\n      properties: [\"content\"]\n    };\n  }\n  const result = await search2(db, params);\n  const list = [];\n  for (const item of result.groups ?? []) {\n    const pageId = item.values[0];\n    const page = await getByID(db, pageId);\n    if (!page) continue;\n    list.push({\n      id: pageId,\n      type: \"page\",\n      content: page.content,\n      url: page.url\n    });\n    for (const hit of item.result) {\n      if (hit.document.type === \"page\") continue;\n      list.push({\n        id: hit.document.id.toString(),\n        content: hit.document.content,\n        type: hit.document.type,\n        url: hit.document.url\n      });\n    }\n  }\n  return list;\n}\n\nexport {\n  searchSimple,\n  searchAdvanced\n};\n","import {\n  searchAdvanced,\n  searchSimple\n} from \"./chunk-62HKBTBF.js\";\nimport \"./chunk-KAOEMCTI.js\";\n\n// src/search/client/static.ts\nimport { create, load } from \"@orama/orama\";\nvar cache = /* @__PURE__ */ new Map();\nasync function loadDB({\n  from = \"/api/search\",\n  initOrama = (locale) => create({ schema: { _: \"string\" }, language: locale })\n}) {\n  const cacheKey = from;\n  const cached = cache.get(cacheKey);\n  if (cached) return cached;\n  async function init() {\n    const res = await fetch(from);\n    if (!res.ok)\n      throw new Error(\n        `failed to fetch exported search indexes from ${from}, make sure the search database is exported and available for client.`\n      );\n    const data = await res.json();\n    const dbs = /* @__PURE__ */ new Map();\n    if (data.type === \"i18n\") {\n      await Promise.all(\n        Object.entries(data.data).map(async ([k, v]) => {\n          const db2 = await initOrama(k);\n          load(db2, v);\n          dbs.set(k, {\n            type: v.type,\n            db: db2\n          });\n        })\n      );\n      return dbs;\n    }\n    const db = await initOrama();\n    load(db, data);\n    dbs.set(\"\", {\n      type: data.type,\n      db\n    });\n    return dbs;\n  }\n  const result = init();\n  cache.set(cacheKey, result);\n  return result;\n}\nasync function search(query, options) {\n  const { tag, locale } = options;\n  const db = (await loadDB(options)).get(locale ?? \"\");\n  if (!db) return [];\n  if (db.type === \"simple\")\n    return searchSimple(db, query);\n  return searchAdvanced(db.db, query, tag);\n}\nexport {\n  search\n};\n"],"names":[],"mappings":"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","ignoreList":[0,1,2]}