{"version":3,"sources":["turbopack:///[project]/docs-fuma/node_modules/@radix-ui/react-collection/src/collection-legacy.tsx","turbopack:///[project]/docs-fuma/node_modules/@radix-ui/react-collection/src/collection.tsx","turbopack:///[project]/docs-fuma/node_modules/@radix-ui/react-collection/src/ordered-dictionary.ts","turbopack:///[project]/docs-fuma/node_modules/@radix-ui/react-use-previous/src/use-previous.tsx","turbopack:///[project]/docs-fuma/node_modules/@radix-ui/react-visually-hidden/src/visually-hidden.tsx","turbopack:///[project]/docs-fuma/node_modules/fumadocs-ui/dist/utils/merge-refs.js","turbopack:///[project]/docs-fuma/node_modules/fumadocs-ui/dist/utils/use-copy-button.js","turbopack:///[project]/docs-fuma/node_modules/@radix-ui/react-roving-focus/src/roving-focus-group.tsx","turbopack:///[project]/docs-fuma/node_modules/@radix-ui/react-tabs/src/tabs.tsx","turbopack:///[project]/docs-fuma/node_modules/fumadocs-ui/dist/components/tabs.unstyled.js","turbopack:///[project]/docs-fuma/node_modules/fumadocs-ui/dist/components/codeblock.js"],"sourcesContent":["import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createSlot, type Slot } from '@radix-ui/react-slot';\n\ntype SlotProps = React.ComponentPropsWithoutRef<typeof Slot>;\ntype CollectionElement = HTMLElement;\ninterface CollectionProps extends SlotProps {\n  scope: any;\n}\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>â€¦</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\n\nfunction createCollection<ItemElement extends HTMLElement, ItemData = {}>(name: string) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n\n  type ContextValue = {\n    collectionRef: React.RefObject<CollectionElement | null>;\n    itemMap: Map<\n      React.RefObject<ItemElement | null>,\n      { ref: React.RefObject<ItemElement | null> } & ItemData\n    >;\n  };\n\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext<ContextValue>(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: new Map() }\n  );\n\n  const CollectionProvider: React.FC<{ children?: React.ReactNode; scope: any }> = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef<CollectionElement>(null);\n    const itemMap = React.useRef<ContextValue['itemMap']>(new Map()).current;\n    return (\n      <CollectionProviderImpl scope={scope} itemMap={itemMap} collectionRef={ref}>\n        {children}\n      </CollectionProviderImpl>\n    );\n  };\n\n  CollectionProvider.displayName = PROVIDER_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n\n  const CollectionSlotImpl = createSlot(COLLECTION_SLOT_NAME);\n  const CollectionSlot = React.forwardRef<CollectionElement, CollectionProps>(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return <CollectionSlotImpl ref={composedRefs}>{children}</CollectionSlotImpl>;\n    }\n  );\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode;\n    scope: any;\n  };\n\n  const CollectionItemSlotImpl = createSlot(ITEM_SLOT_NAME);\n  const CollectionItemSlot = React.forwardRef<ItemElement, CollectionItemSlotProps>(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef<ItemElement>(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...(itemData as unknown as ItemData) });\n        return () => void context.itemMap.delete(ref);\n      });\n\n      return (\n        <CollectionItemSlotImpl {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs}>\n          {children}\n        </CollectionItemSlotImpl>\n      );\n    }\n  );\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope: any) {\n    const context = useCollectionContext(name + 'CollectionConsumer', scope);\n\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current!) - orderedNodes.indexOf(b.ref.current!)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n\n    return getItems;\n  }\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope,\n  ] as const;\n}\n\nexport { createCollection };\nexport type { CollectionProps };\n","import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createSlot, type Slot } from '@radix-ui/react-slot';\nimport type { EntryOf } from './ordered-dictionary';\nimport { OrderedDict } from './ordered-dictionary';\n\ntype SlotProps = React.ComponentPropsWithoutRef<typeof Slot>;\ntype CollectionElement = HTMLElement;\ninterface CollectionProps extends SlotProps {\n  scope: any;\n}\n\ninterface BaseItemData {\n  id?: string;\n}\n\ntype ItemDataWithElement<\n  ItemData extends BaseItemData,\n  ItemElement extends HTMLElement,\n> = ItemData & {\n  element: ItemElement;\n};\n\ntype ItemMap<ItemElement extends HTMLElement, ItemData extends BaseItemData> = OrderedDict<\n  ItemElement,\n  ItemDataWithElement<ItemData, ItemElement>\n>;\n\nfunction createCollection<\n  ItemElement extends HTMLElement,\n  ItemData extends BaseItemData = BaseItemData,\n>(name: string) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n\n  type ContextValue = {\n    collectionElement: CollectionElement | null;\n    collectionRef: React.Ref<CollectionElement | null>;\n    collectionRefObject: React.RefObject<CollectionElement | null>;\n    itemMap: ItemMap<ItemElement, ItemData>;\n    setItemMap: React.Dispatch<React.SetStateAction<ItemMap<ItemElement, ItemData>>>;\n  };\n\n  const [CollectionContextProvider, useCollectionContext] = createCollectionContext<ContextValue>(\n    PROVIDER_NAME,\n    {\n      collectionElement: null,\n      collectionRef: { current: null },\n      collectionRefObject: { current: null },\n      itemMap: new OrderedDict(),\n      setItemMap: () => void 0,\n    }\n  );\n\n  type CollectionState = [\n    ItemMap: ItemMap<ItemElement, ItemData>,\n    SetItemMap: React.Dispatch<React.SetStateAction<ItemMap<ItemElement, ItemData>>>,\n  ];\n\n  const CollectionProvider: React.FC<{\n    children?: React.ReactNode;\n    scope: any;\n    state?: CollectionState;\n  }> = ({ state, ...props }) => {\n    return state ? (\n      <CollectionProviderImpl {...props} state={state} />\n    ) : (\n      <CollectionInit {...props} />\n    );\n  };\n  CollectionProvider.displayName = PROVIDER_NAME;\n\n  const CollectionInit: React.FC<{\n    children?: React.ReactNode;\n    scope: any;\n  }> = (props) => {\n    const state = useInitCollection();\n    return <CollectionProviderImpl {...props} state={state} />;\n  };\n  CollectionInit.displayName = PROVIDER_NAME + 'Init';\n\n  const CollectionProviderImpl: React.FC<{\n    children?: React.ReactNode;\n    scope: any;\n    state: CollectionState;\n  }> = (props) => {\n    const { scope, children, state } = props;\n    const ref = React.useRef<CollectionElement>(null);\n    const [collectionElement, setCollectionElement] = React.useState<CollectionElement | null>(\n      null\n    );\n    const composeRefs = useComposedRefs(ref, setCollectionElement);\n    const [itemMap, setItemMap] = state;\n\n    React.useEffect(() => {\n      if (!collectionElement) return;\n\n      const observer = getChildListObserver(() => {\n        // setItemMap((map) => {\n        //   const copy = new OrderedDict(map).toSorted(([, a], [, b]) =>\n        //     !a.element || !b.element ? 0 : isElementPreceding(a.element, b.element) ? -1 : 1\n        //   );\n        //   // check if the order has changed\n        //   let index = -1;\n        //   for (const entry of copy) {\n        //     index++;\n        //     const key = map.keyAt(index)!;\n        //     const [copyKey] = entry;\n        //     if (key !== copyKey) {\n        //       // order has changed!\n        //       return copy;\n        //     }\n        //   }\n        //   return map;\n        // });\n      });\n      observer.observe(collectionElement, {\n        childList: true,\n        subtree: true,\n      });\n      return () => {\n        observer.disconnect();\n      };\n    }, [collectionElement]);\n\n    return (\n      <CollectionContextProvider\n        scope={scope}\n        itemMap={itemMap}\n        setItemMap={setItemMap}\n        collectionRef={composeRefs}\n        collectionRefObject={ref}\n        collectionElement={collectionElement}\n      >\n        {children}\n      </CollectionContextProvider>\n    );\n  };\n\n  CollectionProviderImpl.displayName = PROVIDER_NAME + 'Impl';\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n\n  const CollectionSlotImpl = createSlot(COLLECTION_SLOT_NAME);\n  const CollectionSlot = React.forwardRef<CollectionElement, CollectionProps>(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return <CollectionSlotImpl ref={composedRefs}>{children}</CollectionSlotImpl>;\n    }\n  );\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode;\n    scope: any;\n  };\n\n  const CollectionItemSlotImpl = createSlot(ITEM_SLOT_NAME);\n  const CollectionItemSlot = React.forwardRef<ItemElement, CollectionItemSlotProps>(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef<ItemElement>(null);\n      const [element, setElement] = React.useState<ItemElement | null>(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref, setElement);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n\n      const { setItemMap } = context;\n\n      const itemDataRef = React.useRef(itemData);\n      if (!shallowEqual(itemDataRef.current, itemData)) {\n        itemDataRef.current = itemData;\n      }\n      const memoizedItemData = itemDataRef.current;\n\n      React.useEffect(() => {\n        const itemData = memoizedItemData;\n        setItemMap((map) => {\n          if (!element) {\n            return map;\n          }\n\n          if (!map.has(element)) {\n            map.set(element, { ...(itemData as unknown as ItemData), element });\n            return map.toSorted(sortByDocumentPosition);\n          }\n\n          return map\n            .set(element, { ...(itemData as unknown as ItemData), element })\n            .toSorted(sortByDocumentPosition);\n        });\n\n        return () => {\n          setItemMap((map) => {\n            if (!element || !map.has(element)) {\n              return map;\n            }\n            map.delete(element);\n            return new OrderedDict(map);\n          });\n        };\n      }, [element, memoizedItemData, setItemMap]);\n\n      return (\n        <CollectionItemSlotImpl {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs as any}>\n          {children}\n        </CollectionItemSlotImpl>\n      );\n    }\n  );\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * useInitCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useInitCollection() {\n    return React.useState<ItemMap<ItemElement, ItemData>>(new OrderedDict());\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope: any) {\n    const { itemMap } = useCollectionContext(name + 'CollectionConsumer', scope);\n\n    return itemMap;\n  }\n\n  const functions = {\n    createCollectionScope,\n    useCollection,\n    useInitCollection,\n  };\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    functions,\n  ] as const;\n}\n\nexport { createCollection };\nexport type { CollectionProps };\n\nfunction shallowEqual(a: any, b: any) {\n  if (a === b) return true;\n  if (typeof a !== 'object' || typeof b !== 'object') return false;\n  if (a == null || b == null) return false;\n  const keysA = Object.keys(a);\n  const keysB = Object.keys(b);\n  if (keysA.length !== keysB.length) return false;\n  for (const key of keysA) {\n    if (!Object.prototype.hasOwnProperty.call(b, key)) return false;\n    if (a[key] !== b[key]) return false;\n  }\n  return true;\n}\n\nfunction isElementPreceding(a: Element, b: Element) {\n  return !!(b.compareDocumentPosition(a) & Node.DOCUMENT_POSITION_PRECEDING);\n}\n\nfunction sortByDocumentPosition<E extends HTMLElement, T extends BaseItemData>(\n  a: EntryOf<ItemMap<E, T>>,\n  b: EntryOf<ItemMap<E, T>>\n) {\n  return !a[1].element || !b[1].element\n    ? 0\n    : isElementPreceding(a[1].element, b[1].element)\n      ? -1\n      : 1;\n}\n\nfunction getChildListObserver(callback: () => void) {\n  const observer = new MutationObserver((mutationsList) => {\n    for (const mutation of mutationsList) {\n      if (mutation.type === 'childList') {\n        callback();\n        return;\n      }\n    }\n  });\n\n  return observer;\n}\n","// Not a real member because it shouldn't be accessible, but the super class\n// calls `set` which needs to read the instanciation state, so it can't be a\n// private member.\nconst __instanciated = new WeakMap<OrderedDict<any, any>, boolean>();\nexport class OrderedDict<K, V> extends Map<K, V> {\n  #keys: K[];\n\n  constructor(iterable?: Iterable<readonly [K, V]> | null | undefined);\n  constructor(entries?: readonly (readonly [K, V])[] | null) {\n    super(entries);\n    this.#keys = [...super.keys()];\n    __instanciated.set(this, true);\n  }\n\n  set(key: K, value: V) {\n    if (__instanciated.get(this)) {\n      if (this.has(key)) {\n        this.#keys[this.#keys.indexOf(key)] = key;\n      } else {\n        this.#keys.push(key);\n      }\n    }\n    super.set(key, value);\n    return this;\n  }\n\n  insert(index: number, key: K, value: V) {\n    const has = this.has(key);\n    const length = this.#keys.length;\n    const relativeIndex = toSafeInteger(index);\n    let actualIndex = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n    const safeIndex = actualIndex < 0 || actualIndex >= length ? -1 : actualIndex;\n\n    if (safeIndex === this.size || (has && safeIndex === this.size - 1) || safeIndex === -1) {\n      this.set(key, value);\n      return this;\n    }\n\n    const size = this.size + (has ? 0 : 1);\n\n    // If you insert at, say, -2, without this bit you'd replace the\n    // second-to-last item and push the rest up one, which means the new item is\n    // 3rd to last. This isn't very intuitive; inserting at -2 is more like\n    // saying \"make this item the second to last\".\n    if (relativeIndex < 0) {\n      actualIndex++;\n    }\n\n    const keys = [...this.#keys];\n    let nextValue: V | undefined;\n    let shouldSkip = false;\n    for (let i = actualIndex; i < size; i++) {\n      if (actualIndex === i) {\n        let nextKey = keys[i]!;\n        if (keys[i] === key) {\n          nextKey = keys[i + 1]!;\n        }\n        if (has) {\n          // delete first to ensure that the item is moved to the end\n          this.delete(key);\n        }\n        nextValue = this.get(nextKey);\n        this.set(key, value);\n      } else {\n        if (!shouldSkip && keys[i - 1] === key) {\n          shouldSkip = true;\n        }\n        const currentKey = keys[shouldSkip ? i : i - 1]!;\n        const currentValue = nextValue!;\n        nextValue = this.get(currentKey);\n        this.delete(currentKey);\n        this.set(currentKey, currentValue);\n      }\n    }\n    return this;\n  }\n\n  with(index: number, key: K, value: V) {\n    const copy = new OrderedDict(this);\n    copy.insert(index, key, value);\n    return copy;\n  }\n\n  before(key: K) {\n    const index = this.#keys.indexOf(key) - 1;\n    if (index < 0) {\n      return undefined;\n    }\n    return this.entryAt(index);\n  }\n\n  /**\n   * Sets a new key-value pair at the position before the given key.\n   */\n  setBefore(key: K, newKey: K, value: V) {\n    const index = this.#keys.indexOf(key);\n    if (index === -1) {\n      return this;\n    }\n    return this.insert(index, newKey, value);\n  }\n\n  after(key: K) {\n    let index = this.#keys.indexOf(key);\n    index = index === -1 || index === this.size - 1 ? -1 : index + 1;\n    if (index === -1) {\n      return undefined;\n    }\n    return this.entryAt(index);\n  }\n\n  /**\n   * Sets a new key-value pair at the position after the given key.\n   */\n  setAfter(key: K, newKey: K, value: V) {\n    const index = this.#keys.indexOf(key);\n    if (index === -1) {\n      return this;\n    }\n    return this.insert(index + 1, newKey, value);\n  }\n\n  first() {\n    return this.entryAt(0);\n  }\n\n  last() {\n    return this.entryAt(-1);\n  }\n\n  clear() {\n    this.#keys = [];\n    return super.clear();\n  }\n\n  delete(key: K) {\n    const deleted = super.delete(key);\n    if (deleted) {\n      this.#keys.splice(this.#keys.indexOf(key), 1);\n    }\n    return deleted;\n  }\n\n  deleteAt(index: number) {\n    const key = this.keyAt(index);\n    if (key !== undefined) {\n      return this.delete(key);\n    }\n    return false;\n  }\n\n  at(index: number) {\n    const key = at(this.#keys, index);\n    if (key !== undefined) {\n      return this.get(key);\n    }\n  }\n\n  entryAt(index: number): [K, V] | undefined {\n    const key = at(this.#keys, index);\n    if (key !== undefined) {\n      return [key, this.get(key)!];\n    }\n  }\n\n  indexOf(key: K) {\n    return this.#keys.indexOf(key);\n  }\n\n  keyAt(index: number) {\n    return at(this.#keys, index);\n  }\n\n  from(key: K, offset: number) {\n    const index = this.indexOf(key);\n    if (index === -1) {\n      return undefined;\n    }\n    let dest = index + offset;\n    if (dest < 0) dest = 0;\n    if (dest >= this.size) dest = this.size - 1;\n    return this.at(dest);\n  }\n\n  keyFrom(key: K, offset: number) {\n    const index = this.indexOf(key);\n    if (index === -1) {\n      return undefined;\n    }\n    let dest = index + offset;\n    if (dest < 0) dest = 0;\n    if (dest >= this.size) dest = this.size - 1;\n    return this.keyAt(dest);\n  }\n\n  find(\n    predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => boolean,\n    thisArg?: any\n  ) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return entry;\n      }\n      index++;\n    }\n    return undefined;\n  }\n\n  findIndex(\n    predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => boolean,\n    thisArg?: any\n  ) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return index;\n      }\n      index++;\n    }\n    return -1;\n  }\n\n  filter<KK extends K, VV extends V>(\n    predicate: (entry: [K, V], index: number, dict: OrderedDict<K, V>) => entry is [KK, VV],\n    thisArg?: any\n  ): OrderedDict<KK, VV>;\n\n  filter(\n    predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => unknown,\n    thisArg?: any\n  ): OrderedDict<K, V>;\n\n  filter(\n    predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => unknown,\n    thisArg?: any\n  ) {\n    const entries: Array<[K, V]> = [];\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        entries.push(entry);\n      }\n      index++;\n    }\n    return new OrderedDict(entries);\n  }\n\n  map<U>(\n    callbackfn: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => U,\n    thisArg?: any\n  ): OrderedDict<K, U> {\n    const entries: [K, U][] = [];\n    let index = 0;\n    for (const entry of this) {\n      entries.push([entry[0], Reflect.apply(callbackfn, thisArg, [entry, index, this])]);\n      index++;\n    }\n    return new OrderedDict(entries);\n  }\n\n  reduce(\n    callbackfn: (\n      previousValue: [K, V],\n      currentEntry: [K, V],\n      currentIndex: number,\n      dictionary: OrderedDict<K, V>\n    ) => [K, V]\n  ): [K, V];\n  reduce(\n    callbackfn: (\n      previousValue: [K, V],\n      currentEntry: [K, V],\n      currentIndex: number,\n      dictionary: OrderedDict<K, V>\n    ) => [K, V],\n    initialValue: [K, V]\n  ): [K, V];\n  reduce<U>(\n    callbackfn: (\n      previousValue: U,\n      currentEntry: [K, V],\n      currentIndex: number,\n      dictionary: OrderedDict<K, V>\n    ) => U,\n    initialValue: U\n  ): U;\n\n  reduce<U>(\n    ...args: [\n      (\n        previousValue: U,\n        currentEntry: [K, V],\n        currentIndex: number,\n        dictionary: OrderedDict<K, V>\n      ) => U,\n      U?,\n    ]\n  ) {\n    const [callbackfn, initialValue] = args;\n    let index = 0;\n    let accumulator = initialValue ?? this.at(0)!;\n    for (const entry of this) {\n      if (index === 0 && args.length === 1) {\n        accumulator = entry as any;\n      } else {\n        accumulator = Reflect.apply(callbackfn, this, [accumulator, entry, index, this]);\n      }\n      index++;\n    }\n    return accumulator;\n  }\n\n  reduceRight(\n    callbackfn: (\n      previousValue: [K, V],\n      currentEntry: [K, V],\n      currentIndex: number,\n      dictionary: OrderedDict<K, V>\n    ) => [K, V]\n  ): [K, V];\n  reduceRight(\n    callbackfn: (\n      previousValue: [K, V],\n      currentEntry: [K, V],\n      currentIndex: number,\n      dictionary: OrderedDict<K, V>\n    ) => [K, V],\n    initialValue: [K, V]\n  ): [K, V];\n  reduceRight<U>(\n    callbackfn: (\n      previousValue: [K, V],\n      currentValue: U,\n      currentIndex: number,\n      dictionary: OrderedDict<K, V>\n    ) => U,\n    initialValue: U\n  ): U;\n\n  reduceRight<U>(\n    ...args: [\n      (\n        previousValue: U,\n        currentEntry: [K, V],\n        currentIndex: number,\n        dictionary: OrderedDict<K, V>\n      ) => U,\n      U?,\n    ]\n  ) {\n    const [callbackfn, initialValue] = args;\n    let accumulator = initialValue ?? this.at(-1)!;\n    for (let index = this.size - 1; index >= 0; index--) {\n      const entry = this.at(index)!;\n      if (index === this.size - 1 && args.length === 1) {\n        accumulator = entry as any;\n      } else {\n        accumulator = Reflect.apply(callbackfn, this, [accumulator, entry, index, this]);\n      }\n    }\n    return accumulator;\n  }\n\n  toSorted(compareFn?: (a: [K, V], b: [K, V]) => number): OrderedDict<K, V> {\n    const entries = [...this.entries()].sort(compareFn);\n    return new OrderedDict(entries);\n  }\n\n  toReversed(): OrderedDict<K, V> {\n    const reversed = new OrderedDict<K, V>();\n    for (let index = this.size - 1; index >= 0; index--) {\n      const key = this.keyAt(index)!;\n      const element = this.get(key)!;\n      reversed.set(key, element);\n    }\n    return reversed;\n  }\n\n  toSpliced(start: number, deleteCount?: number): OrderedDict<K, V>;\n  toSpliced(start: number, deleteCount: number, ...items: [K, V][]): OrderedDict<K, V>;\n\n  toSpliced(...args: [start: number, deleteCount: number, ...items: [K, V][]]) {\n    const entries = [...this.entries()];\n    entries.splice(...args);\n    return new OrderedDict(entries);\n  }\n\n  slice(start?: number, end?: number) {\n    const result = new OrderedDict<K, V>();\n    let stop = this.size - 1;\n\n    if (start === undefined) {\n      return result;\n    }\n\n    if (start < 0) {\n      start = start + this.size;\n    }\n\n    if (end !== undefined && end > 0) {\n      stop = end - 1;\n    }\n\n    for (let index = start; index <= stop; index++) {\n      const key = this.keyAt(index)!;\n      const element = this.get(key)!;\n      result.set(key, element);\n    }\n    return result;\n  }\n\n  every(\n    predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => unknown,\n    thisArg?: any\n  ) {\n    let index = 0;\n    for (const entry of this) {\n      if (!Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return false;\n      }\n      index++;\n    }\n    return true;\n  }\n\n  some(\n    predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => unknown,\n    thisArg?: any\n  ) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return true;\n      }\n      index++;\n    }\n    return false;\n  }\n}\n\nexport type KeyOf<D extends OrderedDict<any, any>> =\n  D extends OrderedDict<infer K, any> ? K : never;\nexport type ValueOf<D extends OrderedDict<any, any>> =\n  D extends OrderedDict<any, infer V> ? V : never;\nexport type EntryOf<D extends OrderedDict<any, any>> = [KeyOf<D>, ValueOf<D>];\nexport type KeyFrom<E extends EntryOf<any>> = E[0];\nexport type ValueFrom<E extends EntryOf<any>> = E[1];\n\nfunction at<T>(array: ArrayLike<T>, index: number): T | undefined {\n  if ('at' in Array.prototype) {\n    return Array.prototype.at.call(array, index);\n  }\n  const actualIndex = toSafeIndex(array, index);\n  return actualIndex === -1 ? undefined : array[actualIndex];\n}\n\nfunction toSafeIndex(array: ArrayLike<any>, index: number) {\n  const length = array.length;\n  const relativeIndex = toSafeInteger(index);\n  const actualIndex = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n  return actualIndex < 0 || actualIndex >= length ? -1 : actualIndex;\n}\n\nfunction toSafeInteger(number: number) {\n  // eslint-disable-next-line no-self-compare\n  return number !== number || number === 0 ? 0 : Math.trunc(number);\n}\n","import * as React from 'react';\n\nfunction usePrevious<T>(value: T) {\n  const ref = React.useRef({ value, previous: value });\n\n  // We compare values before making an update to ensure that\n  // a change has been made. This ensures the previous value is\n  // persisted correctly between renders.\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n    return ref.current.previous;\n  }, [value]);\n}\n\nexport { usePrevious };\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * VisuallyHidden\n * -----------------------------------------------------------------------------------------------*/\n\nconst VISUALLY_HIDDEN_STYLES = Object.freeze({\n  // See: https://github.com/twbs/bootstrap/blob/main/scss/mixins/_visually-hidden.scss\n  position: 'absolute',\n  border: 0,\n  width: 1,\n  height: 1,\n  padding: 0,\n  margin: -1,\n  overflow: 'hidden',\n  clip: 'rect(0, 0, 0, 0)',\n  whiteSpace: 'nowrap',\n  wordWrap: 'normal',\n}) satisfies React.CSSProperties;\n\nconst NAME = 'VisuallyHidden';\n\ntype VisuallyHiddenElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface VisuallyHiddenProps extends PrimitiveSpanProps {}\n\nconst VisuallyHidden = React.forwardRef<VisuallyHiddenElement, VisuallyHiddenProps>(\n  (props, forwardedRef) => {\n    return (\n      <Primitive.span\n        {...props}\n        ref={forwardedRef}\n        style={{ ...VISUALLY_HIDDEN_STYLES, ...props.style }}\n      />\n    );\n  }\n);\n\nVisuallyHidden.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = VisuallyHidden;\n\nexport {\n  VisuallyHidden,\n  //\n  Root,\n  //\n  VISUALLY_HIDDEN_STYLES,\n};\nexport type { VisuallyHiddenProps };\n","export function mergeRefs(...refs) {\n    return (value) => {\n        refs.forEach((ref) => {\n            if (typeof ref === 'function') {\n                ref(value);\n            }\n            else if (ref) {\n                ref.current = value;\n            }\n        });\n    };\n}\n","'use client';\nimport { useEffect, useRef, useState } from 'react';\nimport { useEffectEvent } from 'fumadocs-core/utils/use-effect-event';\nexport function useCopyButton(onCopy) {\n    const [checked, setChecked] = useState(false);\n    const timeoutRef = useRef(null);\n    const onClick = useEffectEvent(() => {\n        if (timeoutRef.current)\n            window.clearTimeout(timeoutRef.current);\n        const res = Promise.resolve(onCopy());\n        void res.then(() => {\n            setChecked(true);\n            timeoutRef.current = window.setTimeout(() => {\n                setChecked(false);\n            }, 1500);\n        });\n    });\n    // Avoid updates after being unmounted\n    useEffect(() => {\n        return () => {\n            if (timeoutRef.current)\n                window.clearTimeout(timeoutRef.current);\n        };\n    }, []);\n    return [checked, onClick];\n}\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\n\nimport type { Scope } from '@radix-ui/react-context';\n\nconst ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'RovingFocusGroup';\n\ntype ItemData = { id: string; focusable: boolean; active: boolean };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  HTMLSpanElement,\n  ItemData\n>(GROUP_NAME);\n\ntype ScopedProps<P> = P & { __scopeRovingFocusGroup?: Scope };\nconst [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(\n  GROUP_NAME,\n  [createCollectionScope]\n);\n\ntype Orientation = React.AriaAttributes['aria-orientation'];\ntype Direction = 'ltr' | 'rtl';\n\ninterface RovingFocusGroupOptions {\n  /**\n   * The orientation of the group.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   */\n  orientation?: Orientation;\n  /**\n   * The direction of navigation between items.\n   */\n  dir?: Direction;\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: boolean;\n}\n\ntype RovingContextValue = RovingFocusGroupOptions & {\n  currentTabStopId: string | null;\n  onItemFocus(tabStopId: string): void;\n  onItemShiftTab(): void;\n  onFocusableItemAdd(): void;\n  onFocusableItemRemove(): void;\n};\n\nconst [RovingFocusProvider, useRovingFocusContext] =\n  createRovingFocusGroupContext<RovingContextValue>(GROUP_NAME);\n\ntype RovingFocusGroupElement = RovingFocusGroupImplElement;\ninterface RovingFocusGroupProps extends RovingFocusGroupImplProps {}\n\nconst RovingFocusGroup = React.forwardRef<RovingFocusGroupElement, RovingFocusGroupProps>(\n  (props: ScopedProps<RovingFocusGroupProps>, forwardedRef) => {\n    return (\n      <Collection.Provider scope={props.__scopeRovingFocusGroup}>\n        <Collection.Slot scope={props.__scopeRovingFocusGroup}>\n          <RovingFocusGroupImpl {...props} ref={forwardedRef} />\n        </Collection.Slot>\n      </Collection.Provider>\n    );\n  }\n);\n\nRovingFocusGroup.displayName = GROUP_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype RovingFocusGroupImplElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface RovingFocusGroupImplProps\n  extends Omit<PrimitiveDivProps, 'dir'>,\n    RovingFocusGroupOptions {\n  currentTabStopId?: string | null;\n  defaultCurrentTabStopId?: string;\n  onCurrentTabStopIdChange?: (tabStopId: string | null) => void;\n  onEntryFocus?: (event: Event) => void;\n  preventScrollOnEntryFocus?: boolean;\n}\n\nconst RovingFocusGroupImpl = React.forwardRef<\n  RovingFocusGroupImplElement,\n  RovingFocusGroupImplProps\n>((props: ScopedProps<RovingFocusGroupImplProps>, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    orientation,\n    loop = false,\n    dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId,\n    onCurrentTabStopIdChange,\n    onEntryFocus,\n    preventScrollOnEntryFocus = false,\n    ...groupProps\n  } = props;\n  const ref = React.useRef<RovingFocusGroupImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const direction = useDirection(dir);\n  const [currentTabStopId, setCurrentTabStopId] = useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId ?? null,\n    onChange: onCurrentTabStopIdChange,\n    caller: GROUP_NAME,\n  });\n  const [isTabbingBackOut, setIsTabbingBackOut] = React.useState(false);\n  const handleEntryFocus = useCallbackRef(onEntryFocus);\n  const getItems = useCollection(__scopeRovingFocusGroup);\n  const isClickFocusRef = React.useRef(false);\n  const [focusableItemsCount, setFocusableItemsCount] = React.useState(0);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);\n      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);\n    }\n  }, [handleEntryFocus]);\n\n  return (\n    <RovingFocusProvider\n      scope={__scopeRovingFocusGroup}\n      orientation={orientation}\n      dir={direction}\n      loop={loop}\n      currentTabStopId={currentTabStopId}\n      onItemFocus={React.useCallback(\n        (tabStopId) => setCurrentTabStopId(tabStopId),\n        [setCurrentTabStopId]\n      )}\n      onItemShiftTab={React.useCallback(() => setIsTabbingBackOut(true), [])}\n      onFocusableItemAdd={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount + 1),\n        []\n      )}\n      onFocusableItemRemove={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount - 1),\n        []\n      )}\n    >\n      <Primitive.div\n        tabIndex={isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0}\n        data-orientation={orientation}\n        {...groupProps}\n        ref={composedRefs}\n        style={{ outline: 'none', ...props.style }}\n        onMouseDown={composeEventHandlers(props.onMouseDown, () => {\n          isClickFocusRef.current = true;\n        })}\n        onFocus={composeEventHandlers(props.onFocus, (event) => {\n          // We normally wouldn't need this check, because we already check\n          // that the focus is on the current target and not bubbling to it.\n          // We do this because Safari doesn't focus buttons when clicked, and\n          // instead, the wrapper will get focused and not through a bubbling event.\n          const isKeyboardFocus = !isClickFocusRef.current;\n\n          if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n            const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);\n            event.currentTarget.dispatchEvent(entryFocusEvent);\n\n            if (!entryFocusEvent.defaultPrevented) {\n              const items = getItems().filter((item) => item.focusable);\n              const activeItem = items.find((item) => item.active);\n              const currentItem = items.find((item) => item.id === currentTabStopId);\n              const candidateItems = [activeItem, currentItem, ...items].filter(\n                Boolean\n              ) as typeof items;\n              const candidateNodes = candidateItems.map((item) => item.ref.current!);\n              focusFirst(candidateNodes, preventScrollOnEntryFocus);\n            }\n          }\n\n          isClickFocusRef.current = false;\n        })}\n        onBlur={composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))}\n      />\n    </RovingFocusProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RovingFocusGroupItem';\n\ntype RovingFocusItemElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface RovingFocusItemProps extends Omit<PrimitiveSpanProps, 'children'> {\n  tabStopId?: string;\n  focusable?: boolean;\n  active?: boolean;\n  children?:\n    | React.ReactNode\n    | ((props: { hasTabStop: boolean; isCurrentTabStop: boolean }) => React.ReactNode);\n}\n\nconst RovingFocusGroupItem = React.forwardRef<RovingFocusItemElement, RovingFocusItemProps>(\n  (props: ScopedProps<RovingFocusItemProps>, forwardedRef) => {\n    const {\n      __scopeRovingFocusGroup,\n      focusable = true,\n      active = false,\n      tabStopId,\n      children,\n      ...itemProps\n    } = props;\n    const autoId = useId();\n    const id = tabStopId || autoId;\n    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);\n    const isCurrentTabStop = context.currentTabStopId === id;\n    const getItems = useCollection(__scopeRovingFocusGroup);\n\n    const { onFocusableItemAdd, onFocusableItemRemove, currentTabStopId } = context;\n\n    React.useEffect(() => {\n      if (focusable) {\n        onFocusableItemAdd();\n        return () => onFocusableItemRemove();\n      }\n    }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeRovingFocusGroup}\n        id={id}\n        focusable={focusable}\n        active={active}\n      >\n        <Primitive.span\n          tabIndex={isCurrentTabStop ? 0 : -1}\n          data-orientation={context.orientation}\n          {...itemProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // We prevent focusing non-focusable items on `mousedown`.\n            // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n            if (!focusable) event.preventDefault();\n            // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n            else context.onItemFocus(id);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => context.onItemFocus(id))}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === 'Tab' && event.shiftKey) {\n              context.onItemShiftTab();\n              return;\n            }\n\n            if (event.target !== event.currentTarget) return;\n\n            const focusIntent = getFocusIntent(event, context.orientation, context.dir);\n\n            if (focusIntent !== undefined) {\n              if (event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) return;\n              event.preventDefault();\n              const items = getItems().filter((item) => item.focusable);\n              let candidateNodes = items.map((item) => item.ref.current!);\n\n              if (focusIntent === 'last') candidateNodes.reverse();\n              else if (focusIntent === 'prev' || focusIntent === 'next') {\n                if (focusIntent === 'prev') candidateNodes.reverse();\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = context.loop\n                  ? wrapArray(candidateNodes, currentIndex + 1)\n                  : candidateNodes.slice(currentIndex + 1);\n              }\n\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n            }\n          })}\n        >\n          {typeof children === 'function'\n            ? children({ isCurrentTabStop, hasTabStop: currentTabStopId != null })\n            : children}\n        </Primitive.span>\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nRovingFocusGroupItem.displayName = ITEM_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// prettier-ignore\nconst MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev', ArrowUp: 'prev',\n  ArrowRight: 'next', ArrowDown: 'next',\n  PageUp: 'first', Home: 'first',\n  PageDown: 'last', End: 'last',\n};\n\nfunction getDirectionAwareKey(key: string, dir?: Direction) {\n  if (dir !== 'rtl') return key;\n  return key === 'ArrowLeft' ? 'ArrowRight' : key === 'ArrowRight' ? 'ArrowLeft' : key;\n}\n\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next';\n\nfunction getFocusIntent(event: React.KeyboardEvent, orientation?: Orientation, dir?: Direction) {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === 'vertical' && ['ArrowLeft', 'ArrowRight'].includes(key)) return undefined;\n  if (orientation === 'horizontal' && ['ArrowUp', 'ArrowDown'].includes(key)) return undefined;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n}\n\nfunction focusFirst(candidates: HTMLElement[], preventScroll = false) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus({ preventScroll });\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map<T>((_, index) => array[(startIndex + index) % array.length]!);\n}\n\nconst Root = RovingFocusGroup;\nconst Item = RovingFocusGroupItem;\n\nexport {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n};\nexport type { RovingFocusGroupProps, RovingFocusItemProps };\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs';\n\ntype ScopedProps<P> = P & { __scopeTabs?: Scope };\nconst [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype TabsContextValue = {\n  baseId: string;\n  value: string;\n  onValueChange: (value: string) => void;\n  orientation?: TabsProps['orientation'];\n  dir?: TabsProps['dir'];\n  activationMode?: TabsProps['activationMode'];\n};\n\nconst [TabsProvider, useTabsContext] = createTabsContext<TabsContextValue>(TABS_NAME);\n\ntype TabsElement = React.ComponentRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TabsProps extends PrimitiveDivProps {\n  /** The value for the selected tab, if controlled */\n  value?: string;\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: string;\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: string) => void;\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation'];\n  /**\n   * The direction of navigation between toolbar items.\n   */\n  dir?: RovingFocusGroupProps['dir'];\n  /**\n   * Whether a tab is activated automatically or manually.\n   * @defaultValue automatic\n   * */\n  activationMode?: 'automatic' | 'manual';\n}\n\nconst Tabs = React.forwardRef<TabsElement, TabsProps>(\n  (props: ScopedProps<TabsProps>, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      dir,\n      activationMode = 'automatic',\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue ?? '',\n      caller: TABS_NAME,\n    });\n\n    return (\n      <TabsProvider\n        scope={__scopeTabs}\n        baseId={useId()}\n        value={value}\n        onValueChange={setValue}\n        orientation={orientation}\n        dir={direction}\n        activationMode={activationMode}\n      >\n        <Primitive.div\n          dir={direction}\n          data-orientation={orientation}\n          {...tabsProps}\n          ref={forwardedRef}\n        />\n      </TabsProvider>\n    );\n  }\n);\n\nTabs.displayName = TABS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList';\n\ntype TabsListElement = React.ComponentRef<typeof Primitive.div>;\ninterface TabsListProps extends PrimitiveDivProps {\n  loop?: RovingFocusGroupProps['loop'];\n}\n\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return (\n      <RovingFocusGroup.Root\n        asChild\n        {...rovingFocusGroupScope}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n      >\n        <Primitive.div\n          role=\"tablist\"\n          aria-orientation={context.orientation}\n          {...listProps}\n          ref={forwardedRef}\n        />\n      </RovingFocusGroup.Root>\n    );\n  }\n);\n\nTabsList.displayName = TAB_LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger';\n\ntype TabsTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TabsTriggerProps extends PrimitiveButtonProps {\n  value: string;\n}\n\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props: ScopedProps<TabsTriggerProps>, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={isSelected}\n      >\n        <Primitive.button\n          type=\"button\"\n          role=\"tab\"\n          aria-selected={isSelected}\n          aria-controls={contentId}\n          data-state={isSelected ? 'active' : 'inactive'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          id={triggerId}\n          {...triggerProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onValueChange(value);\n            } else {\n              // prevent focus to avoid accidental activation\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if ([' ', 'Enter'].includes(event.key)) context.onValueChange(value);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            // handle \"automatic\" activation if necessary\n            // ie. activate tab following focus\n            const isAutomaticActivation = context.activationMode !== 'manual';\n            if (!isSelected && !disabled && isAutomaticActivation) {\n              context.onValueChange(value);\n            }\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nTabsTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent';\n\ntype TabsContentElement = React.ComponentRef<typeof Primitive.div>;\ninterface TabsContentProps extends PrimitiveDivProps {\n  value: string;\n\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props: ScopedProps<TabsContentProps>, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n\n    return (\n      <Presence present={forceMount || isSelected}>\n        {({ present }) => (\n          <Primitive.div\n            data-state={isSelected ? 'active' : 'inactive'}\n            data-orientation={context.orientation}\n            role=\"tabpanel\"\n            aria-labelledby={triggerId}\n            hidden={!present}\n            id={contentId}\n            tabIndex={0}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...props.style,\n              animationDuration: isMountAnimationPreventedRef.current ? '0s' : undefined,\n            }}\n          >\n            {present && children}\n          </Primitive.div>\n        )}\n      </Presence>\n    );\n  }\n);\n\nTabsContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nconst Root = Tabs;\nconst List = TabsList;\nconst Trigger = TabsTrigger;\nconst Content = TabsContent;\n\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n};\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps };\n","'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useContext, useLayoutEffect, useMemo, useRef, useState, } from 'react';\nimport * as Primitive from '@radix-ui/react-tabs';\nimport { mergeRefs } from '../utils/merge-refs.js';\nimport { useEffectEvent } from 'fumadocs-core/utils/use-effect-event';\nconst listeners = new Map();\nfunction addChangeListener(id, listener) {\n    const list = listeners.get(id) ?? [];\n    list.push(listener);\n    listeners.set(id, list);\n}\nfunction removeChangeListener(id, listener) {\n    const list = listeners.get(id) ?? [];\n    listeners.set(id, list.filter((item) => item !== listener));\n}\nconst TabsContext = createContext(null);\nfunction useTabContext() {\n    const ctx = useContext(TabsContext);\n    if (!ctx)\n        throw new Error('You must wrap your component in <Tabs>');\n    return ctx;\n}\nexport const TabsList = Primitive.TabsList;\nexport const TabsTrigger = Primitive.TabsTrigger;\n/**\n * @internal You better not use it\n */\nexport function Tabs({ ref, groupId, persist = false, updateAnchor = false, defaultValue, value: _value, onValueChange: _onValueChange, ...props }) {\n    const tabsRef = useRef(null);\n    const [value, setValue] = _value === undefined\n        ? // eslint-disable-next-line react-hooks/rules-of-hooks -- not supposed to change controlled/uncontrolled\n            useState(defaultValue)\n        : [_value, _onValueChange ?? (() => undefined)];\n    const onChange = useEffectEvent((v) => setValue(v));\n    const valueToIdMap = useMemo(() => new Map(), []);\n    useLayoutEffect(() => {\n        if (!groupId)\n            return;\n        const previous = persist\n            ? localStorage.getItem(groupId)\n            : sessionStorage.getItem(groupId);\n        if (previous)\n            onChange(previous);\n        addChangeListener(groupId, onChange);\n        return () => {\n            removeChangeListener(groupId, onChange);\n        };\n    }, [groupId, onChange, persist]);\n    useLayoutEffect(() => {\n        const hash = window.location.hash.slice(1);\n        if (!hash)\n            return;\n        for (const [value, id] of valueToIdMap.entries()) {\n            if (id === hash) {\n                onChange(value);\n                tabsRef.current?.scrollIntoView();\n                break;\n            }\n        }\n    }, [onChange, valueToIdMap]);\n    return (_jsx(Primitive.Tabs, { ref: mergeRefs(ref, tabsRef), value: value, onValueChange: (v) => {\n            if (updateAnchor) {\n                const id = valueToIdMap.get(v);\n                if (id) {\n                    window.history.replaceState(null, '', `#${id}`);\n                }\n            }\n            if (groupId) {\n                listeners.get(groupId)?.forEach((item) => {\n                    item(v);\n                });\n                if (persist)\n                    localStorage.setItem(groupId, v);\n                else\n                    sessionStorage.setItem(groupId, v);\n            }\n            else {\n                setValue(v);\n            }\n        }, ...props, children: _jsx(TabsContext.Provider, { value: useMemo(() => ({ valueToIdMap }), [valueToIdMap]), children: props.children }) }));\n}\nexport function TabsContent({ value, ...props }) {\n    const { valueToIdMap } = useTabContext();\n    if (props.id) {\n        valueToIdMap.set(value, props.id);\n    }\n    return (_jsx(Primitive.TabsContent, { value: value, ...props, children: props.children }));\n}\n","'use client';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Check, Copy } from '../icons.js';\nimport { createContext, useContext, useMemo, useRef, } from 'react';\nimport { cn } from '../utils/cn.js';\nimport { useCopyButton } from '../utils/use-copy-button.js';\nimport { buttonVariants } from '../components/ui/button.js';\nimport { Tabs, TabsContent, TabsList, TabsTrigger, } from '../components/tabs.unstyled.js';\nimport { mergeRefs } from '../utils/merge-refs.js';\nconst TabsContext = createContext(null);\nexport function Pre(props) {\n    return (_jsx(\"pre\", { ...props, className: cn('min-w-full w-max *:flex *:flex-col', props.className), children: props.children }));\n}\nexport function CodeBlock({ ref, title, allowCopy, keepBackground = false, icon, viewportProps = {}, children, Actions = (props) => (_jsx(\"div\", { ...props, className: cn('empty:hidden', props.className) })), ...props }) {\n    const isTab = useContext(TabsContext) !== null;\n    const areaRef = useRef(null);\n    allowCopy ?? (allowCopy = !isTab);\n    const bg = cn('bg-fd-secondary', keepBackground && 'bg-(--shiki-light-bg) dark:bg-(--shiki-dark-bg)');\n    return (_jsxs(\"figure\", { ref: ref, dir: \"ltr\", ...props, className: cn(isTab ? [bg, 'rounded-lg shadow-sm'] : 'my-4 rounded-xl bg-fd-card p-1', 'shiki relative border outline-none not-prose overflow-hidden text-sm', props.className), children: [title ? (_jsxs(\"div\", { className: cn('flex text-fd-muted-foreground items-center gap-2 ps-3 h-9.5', isTab && 'border-b'), children: [typeof icon === 'string' ? (_jsx(\"div\", { className: \"[&_svg]:size-3.5\", dangerouslySetInnerHTML: {\n                            __html: icon,\n                        } })) : (icon), _jsx(\"figcaption\", { className: \"flex-1 truncate\", children: title }), Actions({\n                        children: allowCopy && _jsx(CopyButton, { containerRef: areaRef }),\n                    })] })) : (Actions({\n                className: 'absolute top-1 right-1 z-2 bg-fd-card rounded-bl-lg border-l border-b text-fd-muted-foreground',\n                children: allowCopy && _jsx(CopyButton, { containerRef: areaRef }),\n            })), _jsx(\"div\", { ref: areaRef, ...viewportProps, className: cn(!isTab && [bg, 'rounded-lg border'], 'text-[13px] py-3.5 overflow-auto max-h-[600px] fd-scroll-container', viewportProps.className), style: {\n                    // space for toolbar\n                    '--padding-right': !title ? 'calc(var(--spacing) * 8)' : undefined,\n                    counterSet: props['data-line-numbers']\n                        ? `line ${Number(props['data-line-numbers-start'] ?? 1) - 1}`\n                        : undefined,\n                    ...viewportProps.style,\n                }, children: children })] }));\n}\nfunction CopyButton({ className, containerRef, ...props }) {\n    const [checked, onClick] = useCopyButton(() => {\n        const pre = containerRef.current?.getElementsByTagName('pre').item(0);\n        if (!pre)\n            return;\n        const clone = pre.cloneNode(true);\n        clone.querySelectorAll('.nd-copy-ignore').forEach((node) => {\n            node.replaceWith('\\n');\n        });\n        void navigator.clipboard.writeText(clone.textContent ?? '');\n    });\n    return (_jsx(\"button\", { type: \"button\", className: cn(buttonVariants({\n            color: 'ghost',\n            className: '[&_svg]:size-3.5',\n        }), className), \"aria-label\": checked ? 'Copied Text' : 'Copy Text', onClick: onClick, ...props, children: checked ? _jsx(Check, {}) : _jsx(Copy, {}) }));\n}\nexport function CodeBlockTabs({ ref, ...props }) {\n    const containerRef = useRef(null);\n    const nested = useContext(TabsContext) !== null;\n    return (_jsx(Tabs, { ref: mergeRefs(containerRef, ref), ...props, className: cn('bg-fd-card p-1 rounded-xl border overflow-hidden', !nested && 'my-4', props.className), children: _jsx(TabsContext.Provider, { value: useMemo(() => ({\n                containerRef,\n                nested,\n            }), [nested]), children: props.children }) }));\n}\nexport function CodeBlockTabsList(props) {\n    const { containerRef, nested } = useContext(TabsContext);\n    return (_jsxs(TabsList, { ...props, className: cn('flex flex-row overflow-x-auto px-1 -mx-1 text-fd-muted-foreground', props.className), children: [props.children, !nested && (_jsx(CopyButton, { className: \"sticky ms-auto right-0 bg-fd-card backdrop-blur-sm\", containerRef: containerRef }))] }));\n}\nexport function CodeBlockTabsTrigger({ children, ...props }) {\n    return (_jsxs(TabsTrigger, { ...props, className: cn('relative group inline-flex text-sm font-medium text-nowrap items-center gap-2 px-2 first:ms-1 py-1.5 hover:text-fd-accent-foreground data-[state=active]:text-fd-primary [&_svg]:size-3.5', props.className), children: [_jsx(\"div\", { className: \"absolute inset-x-2 bottom-0 h-px group-data-[state=active]:bg-fd-primary\" }), children] }));\n}\nexport const CodeBlockTab = (props) => (_jsx(TabsContent, { ...props, asChild: true }));\n"],"names":["React","createContextScope","useComposedRefs","createSlot","jsx","createCollection","itemData","Root"],"mappings":"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","ignoreList":[5,6,9,10]}