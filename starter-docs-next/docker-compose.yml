version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: startstack-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: startstack
      POSTGRES_USER: startstack_user
      POSTGRES_PASSWORD: startstack_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - startstack-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U startstack_user -d startstack"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Drizzle Studio (Database management for Drizzle ORM)
  drizzle-studio:
    image: ghcr.io/drizzle-team/drizzle-studio:latest
    container_name: startstack-drizzle-studio
    restart: unless-stopped
    ports:
      - "4983:4983"
    environment:
      - DATABASE_URL=postgresql://startstack_user:startstack_password@postgres:5432/startstack
    networks:
      - startstack-network
    depends_on:
      postgres:
        condition: service_healthy

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: startstack-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL_DEVELOPMENT=postgresql://startstack_user:startstack_password@postgres:5432/startstack
      - DATABASE_URL_PRODUCTION=postgresql://startstack_user:startstack_password@postgres:5432/startstack
      - BETTER_AUTH_SECRET=your-better-auth-secret-here
      - RESEND_API_KEY=your-resend-api-key-here
      - DODO_API_KEY=your-dodo-api-key-here
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - NEXT_PUBLIC_CACHE_ENCRYPTION_KEY=your-cache-encryption-key-here
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - startstack-network
    depends_on:
      postgres:
        condition: service_healthy
    command: bun run dev

volumes:
  postgres_data:
    driver: local

networks:
  startstack-network:
    driver: bridge 