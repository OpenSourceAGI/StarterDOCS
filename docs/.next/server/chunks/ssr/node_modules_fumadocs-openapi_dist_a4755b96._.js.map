{"version":3,"sources":["turbopack:///[project]/node_modules/fumadocs-openapi/dist/requests/_shared.js"],"sourcesContent":["const FormDelimiter = {\n    spaceDelimited: ' ',\n    pipeDelimited: '|',\n};\nconst PathPrefix = {\n    label: '.',\n    matrix: ';',\n};\nexport function ident(code, tab = 1) {\n    return code\n        .split('\\n')\n        .map((v) => '  '.repeat(tab) + v)\n        .join('\\n');\n}\nexport function encodeRequestData(from, adapters, parameters) {\n    function getMediaEncoder(field) {\n        if (!field.content)\n            return;\n        for (const k in field.content) {\n            if (k in adapters) {\n                return (v) => String(adapters[k].encode({ body: v }));\n            }\n        }\n    }\n    function writeObject(parentKey, value, deep, output) {\n        for (const k in value) {\n            const prop = value[k];\n            if (prop == null)\n                continue;\n            const key = deep ? `${parentKey}[${k}]` : k;\n            if (!deep || typeof prop !== 'object') {\n                output[key] = {\n                    value: String(prop),\n                };\n                continue;\n            }\n            writeObject(key, value, deep, output);\n        }\n    }\n    function write(key, value, output = {}, field) {\n        if (!field) {\n            output[key] = { value: String(value) };\n            return output;\n        }\n        const encoder = getMediaEncoder(field);\n        if (encoder) {\n            output[key] = { value: encoder(value) };\n            return output;\n        }\n        const explode = field.explode ?? true;\n        let prefix = '';\n        let sep = ',';\n        if (field.in === 'path') {\n            const style = field.style ?? 'simple';\n            if (style in PathPrefix) {\n                prefix = PathPrefix[style];\n                if (explode)\n                    sep = prefix;\n            }\n        }\n        if (Array.isArray(value)) {\n            // header & cookie doesn't support explode for array values\n            if (explode && field.in !== 'header' && field.in !== 'cookie') {\n                output[key] = {\n                    value: prefix + value.map(String),\n                };\n                return output;\n            }\n            if (field.in === 'query') {\n                const style = field.style ?? 'form';\n                if (style in FormDelimiter)\n                    sep = FormDelimiter[style];\n            }\n            output[key] = {\n                value: prefix + value.map(String).join(sep),\n            };\n            return output;\n        }\n        if (typeof value === 'object' && value) {\n            // header & path creates key-value pairs\n            if (explode && (field.in === 'header' || field.in === 'path')) {\n                output[key] = {\n                    value: prefix +\n                        Object.entries(value)\n                            .map(([k, v]) => `${k}=${v}`)\n                            .join(sep),\n                };\n                return output;\n            }\n            if (explode || field.style === 'deepObject') {\n                writeObject(key, value, field.style === 'deepObject', output);\n                return output;\n            }\n            output[key] = {\n                value: prefix + Object.entries(value).flat().join(sep),\n            };\n            return output;\n        }\n        output[key] = {\n            value: prefix + String(value),\n        };\n        return output;\n    }\n    const result = {\n        method: from.method,\n        body: from.body,\n        bodyMediaType: from.bodyMediaType,\n    };\n    for (const type of ['cookie', 'query', 'header', 'path']) {\n        const out = {};\n        for (const k in from[type]) {\n            const value = from[type][k];\n            if (value == null)\n                continue;\n            const field = parameters.find((p) => p.name === k && p.in === type);\n            write(k, value, out, field);\n        }\n        result[type] = out;\n    }\n    return result;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}