{"version":3,"sources":["turbopack:///[project]/node_modules/fumadocs-openapi/dist/ui/contexts/api.js","turbopack:///[project]/node_modules/fumadocs-openapi/dist/media/adapter.js","turbopack:///[project]/node_modules/fumadocs-openapi/dist/utils/url.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useContext, useEffect, useMemo, useState, } from 'react';\nimport { defaultAdapters } from '../../media/adapter.js';\nconst ApiContext = createContext(null);\nconst ServerSelectContext = createContext(null);\nexport function useApiContext() {\n    const ctx = useContext(ApiContext);\n    if (!ctx)\n        throw new Error('Component must be used under <ApiProvider />');\n    return ctx;\n}\nexport function useServerSelectContext() {\n    const ctx = useContext(ServerSelectContext);\n    if (!ctx)\n        throw new Error('Component must be used under <ApiProvider />');\n    return ctx;\n}\nexport function ApiProvider({ defaultBaseUrl, children, servers, mediaAdapters, shikiOptions, }) {\n    const [server, setServer] = useState(() => {\n        const defaultItem = defaultBaseUrl\n            ? servers.find((item) => item.url === defaultBaseUrl)\n            : servers.at(0);\n        return defaultItem\n            ? {\n                url: defaultItem.url,\n                variables: getDefaultValues(defaultItem),\n            }\n            : null;\n    });\n    useEffect(() => {\n        const cached = localStorage.getItem('apiBaseUrl');\n        if (!cached)\n            return;\n        try {\n            const obj = JSON.parse(cached);\n            if (!obj || typeof obj !== 'object')\n                return;\n            setServer(obj);\n        }\n        catch {\n            // ignore\n        }\n    }, []);\n    return (_jsx(ApiContext.Provider, { value: useMemo(() => ({\n            shikiOptions,\n            mediaAdapters: {\n                ...defaultAdapters,\n                ...mediaAdapters,\n            },\n            servers,\n        }), [mediaAdapters, servers, shikiOptions]), children: _jsx(ServerSelectContext.Provider, { value: useMemo(() => ({\n                server,\n                setServerVariables(variables) {\n                    setServer((prev) => {\n                        if (!prev)\n                            return null;\n                        const updated = { ...prev, variables };\n                        localStorage.setItem('apiBaseUrl', JSON.stringify(updated));\n                        return updated;\n                    });\n                },\n                setServer(value) {\n                    const obj = servers.find((item) => item.url === value);\n                    if (!obj)\n                        return;\n                    const result = {\n                        url: value,\n                        variables: getDefaultValues(obj),\n                    };\n                    localStorage.setItem('apiBaseUrl', JSON.stringify(result));\n                    setServer(result);\n                },\n            }), [server, servers]), children: children }) }));\n}\nfunction getDefaultValues(server) {\n    return Object.fromEntries(Object.entries(server.variables ?? {}).map(([k, v]) => [k, v.default]));\n}\n","import { escapeString, inputToString } from '../utils/input-to-string.js';\n// @ts-expect-error -- untyped\nimport js2xml from 'xml-js/lib/js2xml';\nexport const defaultAdapters = {\n    'application/json': {\n        encode(data) {\n            return JSON.stringify(data.body);\n        },\n        generateExample(data, ctx) {\n            return str(data.body, 'application/json', ctx);\n        },\n    },\n    'application/xml': {\n        encode(data) {\n            return js2xml(data.body, {\n                compact: true,\n                spaces: 2,\n            });\n        },\n        generateExample(data, ctx) {\n            return str(data.body, 'application/xml', ctx);\n        },\n    },\n    'application/x-ndjson': {\n        encode(data) {\n            if (Array.isArray(data.body)) {\n                return data.body.map((v) => JSON.stringify(v)).join('\\n');\n            }\n            return JSON.stringify(data.body);\n        },\n        generateExample(data, ctx) {\n            return str(data.body, 'application/x-ndjson', ctx);\n        },\n    },\n    'application/x-www-form-urlencoded': {\n        encode(data) {\n            if (typeof data.body !== 'object')\n                throw new Error(`Input value must be object, received: ${typeof data.body}`);\n            const params = new URLSearchParams();\n            for (const key in data.body) {\n                params.set(key, String(data.body[key]));\n            }\n            return params;\n        },\n        generateExample(data, ctx) {\n            if (ctx.lang === 'js') {\n                return `const body = new URLSearchParams(${JSON.stringify(data.body, null, 2)})`;\n            }\n            return str(data.body, 'application/x-www-form-urlencoded', ctx);\n        },\n    },\n    'multipart/form-data': {\n        encode(data) {\n            const formData = new FormData();\n            const body = data.body;\n            if (typeof body !== 'object' || !body) {\n                throw new Error(`Unsupported body type: ${typeof body}, expected: object`);\n            }\n            for (const key in body) {\n                const prop = body[key];\n                if (prop === null || prop === undefined || Number.isNaN(prop))\n                    continue;\n                // Arrays (multi-value field)\n                if (Array.isArray(prop)) {\n                    for (const item of prop) {\n                        if (item === null || item === undefined)\n                            continue;\n                        if (item instanceof File) {\n                            formData.append(key, item, item.name);\n                        }\n                        else if (item instanceof Blob) {\n                            formData.append(key, item, 'blob');\n                        }\n                        else if (typeof item === 'object') {\n                            formData.append(key, JSON.stringify(item));\n                        }\n                        else {\n                            formData.append(key, String(item));\n                        }\n                    }\n                }\n                // Single File\n                else if (prop instanceof File) {\n                    formData.set(key, prop, prop.name);\n                }\n                // Single Blob\n                else if (prop instanceof Blob) {\n                    formData.set(key, prop, 'blob');\n                }\n                // Any other object (stringify)\n                else if (typeof prop === 'object') {\n                    formData.set(key, JSON.stringify(prop));\n                }\n                // Primitive types\n                else {\n                    formData.set(key, String(prop));\n                }\n            }\n            return formData;\n        },\n        generateExample(data, ctx) {\n            if (ctx.lang === 'python') {\n                return `body = ${JSON.stringify(data.body, null, 2)}`;\n            }\n            const s = [];\n            if (ctx.lang === 'js') {\n                s.push(`const body = new FormData();`);\n                for (const [key, value] of Object.entries(data.body)) {\n                    s.push(`body.set(${key}, ${JSON.stringify(inputToString(value))})`);\n                }\n            }\n            if (ctx.lang === 'go') {\n                const { addImport } = ctx;\n                addImport('mime/multipart');\n                addImport('bytes');\n                s.push('body := new(bytes.Buffer)');\n                s.push('mp := multipart.NewWriter(payload)');\n                for (const [key, value] of Object.entries(data.body)) {\n                    if (!value)\n                        continue;\n                    const escaped = escapeString(inputToString(value, 'application/json'), '`');\n                    s.push(`mp.WriteField(\"${key}\", ${escaped})`);\n                }\n            }\n            if (ctx.lang === 'java') {\n                const { addImport } = ctx;\n                addImport('java.net.http.HttpRequest.BodyPublishers');\n                s.push(`var body = BodyPublishers.ofByteArray(new byte[] { ... });`);\n            }\n            if (ctx.lang === 'csharp') {\n                s.push(`var body = new MultipartFormDataContent();`);\n            }\n            if (s.length > 0)\n                return s.join('\\n');\n        },\n    },\n    'application/octet-stream': {\n        encode(data) {\n            return data.body;\n        },\n        generateExample() {\n            // not supported\n            return undefined;\n        },\n    },\n};\nfunction str(init, mediaType, ctx) {\n    if (ctx.lang === 'js') {\n        if (mediaType === 'application/json') {\n            return `const body = JSON.stringify(${JSON.stringify(init, null, 2)})`;\n        }\n        return `const body = ${escapeString(inputToString(init, mediaType), '`')}`;\n    }\n    if (ctx.lang === 'python') {\n        if (mediaType === 'application/json')\n            return `body = ${JSON.stringify(init, null, 2)}`;\n        return `body = ${escapeString(inputToString(init, mediaType), '\"\"\"')}`;\n    }\n    if (ctx.lang === 'go') {\n        const { addImport } = ctx;\n        addImport('strings');\n        return `body := strings.NewReader(${escapeString(inputToString(init, mediaType), '`')})`;\n    }\n    if (ctx.lang === 'java') {\n        const { addImport } = ctx;\n        addImport('java.net.http.HttpRequest.BodyPublishers');\n        return `var body = BodyPublishers.ofString(${escapeString(inputToString(init, mediaType), '\"\"\"')});`;\n    }\n    if (ctx.lang === 'csharp') {\n        const input = `\\n${inputToString(init, mediaType)}\\n`;\n        return `var body = new StringContent(${escapeString(input, '\"\"\"')}, Encoding.UTF8, \"${mediaType}\");`;\n    }\n}\n","export function joinURL(base, pathname) {\n    if (pathname.startsWith('/'))\n        pathname = pathname.slice(1);\n    if (base.endsWith('/'))\n        base = base.slice(0, -1);\n    if (pathname.length > 0)\n        return base + '/' + pathname;\n    else\n        return base;\n}\n/**\n * @param url - URL (can be relative)\n * @param base - the base URL (must be absolute)\n */\nexport function withBase(url, base) {\n    if (!url.startsWith('https://') && !url.startsWith('http://')) {\n        return joinURL(base, url);\n    }\n    return url;\n}\nexport function resolveServerUrl(template, variables) {\n    for (const [key, value] of Object.entries(variables)) {\n        template = template.replaceAll(`{${key}}`, value);\n    }\n    return template;\n}\nexport function resolveRequestData(pathname, { path, query }) {\n    // First, resolve path parameters in the pathname\n    for (const key in path) {\n        const param = path[key];\n        if (Array.isArray(param.value)) {\n            pathname = pathname.replace(`{${key}}`, param.value.join('/'));\n        }\n        else {\n            pathname = pathname.replace(`{${key}}`, param.value);\n        }\n    }\n    // Check if pathname already contains query parameters (legacy API support)\n    const [pathPart, existingQueryString] = pathname.split('?', 2);\n    // Parse existing query parameters from the pathname if they exist\n    const searchParams = new URLSearchParams(existingQueryString || '');\n    // Add new query parameters from the RequestData\n    for (const key in query) {\n        const param = query[key];\n        if (Array.isArray(param.value)) {\n            // Remove existing parameter first to avoid duplicates\n            searchParams.delete(key);\n            for (const item of param.value) {\n                searchParams.append(key, item);\n            }\n        }\n        else {\n            // Set (replace if exists) the parameter value\n            searchParams.set(key, param.value);\n        }\n    }\n    // Return the reconstructed URL\n    return searchParams.size > 0 ? `${pathPart}?${searchParams}` : pathPart;\n}\n"],"names":[],"mappings":"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","ignoreList":[0,1,2]}